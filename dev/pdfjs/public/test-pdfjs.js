// Generated by Haxe 4.0.0-preview.4+1e3e5e016
(function () { "use strict";
var $hxEnums = {};
var Main = function() {
	m.mount(window.document.querySelector("main"),new PdfJs());
};
Main.main = function() {
	new Main();
};
var mithril_Mithril = function() { };
var Index = function() {
};
Index.__interfaces__ = [mithril_Mithril];
Index.prototype = {
	view: function() {
		if(arguments.length > 0 && arguments[0].tag != this) return arguments[0].tag.view.apply(arguments[0].tag, arguments);
		return [m.m("h1","Hello from Mithril")];
	}
};
var PdfJs = function() {
	var _gthis = this;
	this.canvases = [];
	var pdfdoc = new pdfjs_PDFDoc("test.pdf");
	Promise.all([pdfdoc.renderPage(1),pdfdoc.renderPage(2),pdfdoc.renderPage(3)]).then(function(canvases) {
		_gthis.canvases = canvases;
		m.redraw();
		return null;
	});
};
PdfJs.__interfaces__ = [mithril_Mithril];
PdfJs.prototype = {
	view: function() {
		if(arguments.length > 0 && arguments[0].tag != this) return arguments[0].tag.view.apply(arguments[0].tag, arguments);
		return [m.m("h1","PdfJs"),m.m("div",this.canvases.length),this.canvases.map(function(c) {
			return m.m("img",{ src : c.toDataURL()});
		})];
	}
};
var pdfjs_PDF = function() {
	this.pdflib = window["pdfjs-dist/build/pdf"];
};
pdfjs_PDF.prototype = {
	getDocument: function(url) {
		return this.pdflib.getDocument(url);
	}
};
var pdfjs_PDFDoc = function(url) {
	this.url = url;
	this.pdf = new pdfjs_PDF();
};
pdfjs_PDFDoc.prototype = {
	getDocument: function() {
		if(this.document != null) {
			return Promise.resolve(this.document);
		}
		return this.pdf.getDocument(this.url);
	}
	,renderPage: function(pageNr,scale) {
		if(scale == null) {
			scale = 2.0;
		}
		return this.getDocument().then(function(doc) {
			return doc.getPage(pageNr);
		}).then(function(p) {
			var page = p;
			var viewport = page.getViewport(scale);
			var canvas = window.document.createElement("canvas");
			canvas.height = viewport.height;
			canvas.width = viewport.width;
			return page.render({ canvasContext : canvas.getContext("2d",null), viewport : viewport}).then(function(x) {
				console.log("src/pdfjs/PDF.hx:76:","renderd page " + pageNr);
				console.log("src/pdfjs/PDF.hx:77:",canvas.width + " " + canvas.height);
				return canvas;
			});
		});
	}
};
try {
var __varName = window.m;
(function(m) {
			if (m.m) return;
			m.m = function() {
				try { 
					for(var i=0; i < arguments.length; ++i) if(arguments[i] instanceof List) {
						var list = arguments[i].h; arguments[i] = [];
						while(list != null) { arguments[i].push(l[0]); list = l[1]; }
					}
				} catch(e) {}
				return m.apply(this, arguments);
			}
		})(__varName);
} catch(_) {}
try {
GLOBAL.m = require("mithril");
var __varName1 = GLOBAL.m;
(function(m) {
			if (m.m) return;
			m.m = function() {
				try { 
					for(var i=0; i < arguments.length; ++i) if(arguments[i] instanceof List) {
						var list = arguments[i].h; arguments[i] = [];
						while(list != null) { arguments[i].push(l[0]); list = l[1]; }
					}
				} catch(e) {}
				return m.apply(this, arguments);
			}
		})(__varName1);
} catch(_) {}
Main.main();
})();
