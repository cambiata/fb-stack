// Generated by Haxe 4.0.0-preview.4+1e3e5e016
(function () { "use strict";
var $hxEnums = {};
var Main = function() {
	m.mount(window.document.body,new Index());
};
Main.main = function() {
	new Main();
};
var mithril_Mithril = function() { };
var Index = function() {
};
Index.__interfaces__ = [mithril_Mithril];
Index.prototype = {
	view: function() {
		if(arguments.length > 0 && arguments[0].tag != this) return arguments[0].tag.view.apply(arguments[0].tag, arguments);
		var values = [["aaa","Alternativ A"],["bbb","Alternativ B"],["ccc","Alternativ C"]];
		var tmp = m.m("h1","Hello from Mithril");
		var tmp1 = values.map(function(v) {
			console.log("src/Main.hx:28:",v);
			return m.m("option",{ value : v[0], key : v[0]},v[1]);
		});
		return [tmp,m.m("select",{ onchange : function(e) {
			console.log("src/Main.hx:27:",e.target.selectedIndex);
			return;
		}},tmp1)];
	}
};
try {
var __varName = window.m;
(function(m) {
			if (m.m) return;
			m.m = function() {
				try { 
					for(var i=0; i < arguments.length; ++i) if(arguments[i] instanceof List) {
						var list = arguments[i].h; arguments[i] = [];
						while(list != null) { arguments[i].push(l[0]); list = l[1]; }
					}
				} catch(e) {}
				return m.apply(this, arguments);
			}
		})(__varName);
} catch(_) {}
try {
GLOBAL.m = require("mithril");
var __varName1 = GLOBAL.m;
(function(m) {
			if (m.m) return;
			m.m = function() {
				try { 
					for(var i=0; i < arguments.length; ++i) if(arguments[i] instanceof List) {
						var list = arguments[i].h; arguments[i] = [];
						while(list != null) { arguments[i].push(l[0]); list = l[1]; }
					}
				} catch(e) {}
				return m.apply(this, arguments);
			}
		})(__varName1);
} catch(_) {}
Main.main();
})();
