// Generated by Haxe 4.0.0-preview.4+1e3e5e016
(function () { "use strict";
var $estr = function() { return js_Boot.__string_rec(this,''); },$hxEnums = {},$_;
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var mithril_Mithril = function() { };
mithril_Mithril.__name__ = true;
var Client = function() {
	var app = firebase.initializeApp({ apiKey : "AIzaSyBGLErhUSfQHA4wOtkid206KVE-96QEN04", authDomain : "fb-stack.firebaseapp.com", databaseURL : "https://fb-stack.firebaseio.com", projectId : "fb-stack", storageBucket : "fb-stack.appspot.com", messagingSenderId : "665827748546"});
	model_SiteModel.instance.init();
	model_ContentModel.instance.init();
	model_UserModel.instance.init(app);
	this.stateMonitor = new StateMonitor();
	this.testUi = new ui_TestUI();
	var element = ($_=window.document,$bind($_,$_.querySelector));
	m.mount(element("header"),new ui_UIHeader());
	m.mount(element("main"),this);
};
Client.__name__ = true;
Client.__interfaces__ = [mithril_Mithril];
Client.main = function() {
	new Client();
};
Client.prototype = {
	view: function() {
		if(arguments.length > 0 && arguments[0].tag != this) return arguments[0].tag.view.apply(arguments[0].tag, arguments);
		return [this.testUi.view(),this.stateMonitor.view()];
	}
};
var DataModes = $hxEnums["DataModes"] = { __ename__ : true, __constructs__ : ["Nil","Loading","Data"]
	,Nil: {_hx_index:0,__enum__:"DataModes",toString:$estr}
	,Loading: {_hx_index:1,__enum__:"DataModes",toString:$estr}
	,Data: ($_=function(d) { return {_hx_index:2,d:d,__enum__:"DataModes",toString:$estr}; },$_.__params__ = ["d"],$_)
};
var _$Client_DataMode_$Impl_$ = {};
_$Client_DataMode_$Impl_$.__name__ = true;
_$Client_DataMode_$Impl_$.fromData = function(data) {
	if(data != null) {
		return DataModes.Data(data);
	} else {
		return DataModes.Nil;
	}
};
var StateMonitor = function() {
};
StateMonitor.__name__ = true;
StateMonitor.__interfaces__ = [mithril_Mithril];
StateMonitor.prototype = {
	view: function() {
		if(arguments.length > 0 && arguments[0].tag != this) return arguments[0].tag.view.apply(arguments[0].tag, arguments);
		return [m.m("div.statelabel","logs:"),m.m("div.stateitems",model_ErrorsAndLogs.logs.map(function(e) {
			return m.m("div.stateitem.statelog","" + e);
		})),m.m("div.statelabel","errors:"),m.m("div.stateitems",model_ErrorsAndLogs.errors.map(function(e1) {
			return m.m("div.stateitem.stateerror","" + e1);
		})),m.m("div.statelabel","content-tree"),m.m("div.stateitems","" + Std.string(model_ContentModel.instance.contentTree)),new ui_UIContentTree().view()];
	}
};
var DataClass = function() { };
DataClass.__name__ = true;
var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
EReg.__name__ = true;
EReg.prototype = {
	match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
};
var HxOverrides = function() { };
HxOverrides.__name__ = true;
HxOverrides.strDate = function(s) {
	switch(s.length) {
	case 8:
		var k = s.split(":");
		var d = new Date();
		d["setTime"](0);
		d["setUTCHours"](k[0]);
		d["setUTCMinutes"](k[1]);
		d["setUTCSeconds"](k[2]);
		return d;
	case 10:
		var k1 = s.split("-");
		return new Date(k1[0],k1[1] - 1,k1[2],0,0,0);
	case 19:
		var k2 = s.split(" ");
		var y = k2[0].split("-");
		var t = k2[1].split(":");
		return new Date(y[0],y[1] - 1,y[2],t[0],t[1],t[2]);
	default:
		throw new js__$Boot_HaxeError("Invalid date format : " + s);
	}
};
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
var Lambda = function() { };
Lambda.__name__ = true;
Lambda.iter = function(it,f) {
	var x = $getIterator(it);
	while(x.hasNext()) f(x.next());
};
Math.__name__ = true;
var Std = function() { };
Std.__name__ = true;
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
js__$Boot_HaxeError.__name__ = true;
js__$Boot_HaxeError.wrap = function(val) {
	if((val instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
});
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o.__enum__) {
			var e = $hxEnums[o.__enum__];
			var n = e.__constructs__[o._hx_index];
			var con = e[n];
			if(con.__params__) {
				s += "\t";
				var tmp = n + "(";
				var _g = [];
				var _g1 = 0;
				var _g2 = con.__params__;
				while(_g1 < _g2.length) {
					var p = _g2[_g1];
					++_g1;
					_g.push(js_Boot.__string_rec(o[p],s));
				}
				return tmp + _g.join(",") + ")";
			} else {
				return n;
			}
		}
		if((o instanceof Array)) {
			var l = o.length;
			var i;
			var str = "[";
			s += "\t";
			var _g11 = 0;
			var _g3 = l;
			while(_g11 < _g3) {
				var i1 = _g11++;
				str += (i1 > 0 ? "," : "") + js_Boot.__string_rec(o[i1],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e1 ) {
			var e2 = (e1 instanceof js__$Boot_HaxeError) ? e1.val : e1;
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str1 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str1.length != 2) {
			str1 += ", \n";
		}
		str1 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str1 += "\n" + s + "}";
		return str1;
	case "string":
		return o;
	default:
		return String(o);
	}
};
var model_ApiCalls = function() { };
model_ApiCalls.__name__ = true;
model_ApiCalls.getAuthRequest = function(url) {
	return model_UserModel.instance.getFBUserToken().then(function(token) {
		var request = { method : "get", url : url, headers : { authorization : "Bearer " + token}};
		model_ErrorsAndLogs.addLog("AuthRequest: " + url);
		return m.request(request);
	});
};
model_ApiCalls.getRequest = function(url) {
	model_ErrorsAndLogs.addLog("Request: " + url);
	return m.request({ method : "get", url : url});
};
var model_ContentModel = function() {
	this.contentTree = DataModes.Nil;
};
model_ContentModel.__name__ = true;
model_ContentModel.prototype = {
	init: function() {
		var _gthis = this;
		this.set_contentTree(DataModes.Loading);
		model_ApiCalls.getRequest("/api/content-tree").then(function(item) {
			model_ErrorsAndLogs.addErrors(item.errors);
			_gthis.set_contentTree(_$Client_DataMode_$Impl_$.fromData(new model_ContentTree(item.data)));
			model_ErrorsAndLogs.addLog("Content-tree loaded: " + Std.string(item.data));
			return;
		})["catch"](function(error) {
			model_ErrorsAndLogs.addError("Content-tree error: " + error);
			return;
		});
	}
	,set_contentTree: function(u) {
		this.contentTree = u;
		model_ErrorsAndLogs.addLog("ContentTree:" + Std.string(this.contentTree));
		m.redraw();
		return u;
	}
};
var model_ContentTree = function(data) {
	this.rooms = [];
	this.set_id(data.id);
	if(Object.prototype.hasOwnProperty.call(data,"rooms")) {
		this.set_rooms(data.rooms);
	}
};
model_ContentTree.__name__ = true;
model_ContentTree.__interfaces__ = [DataClass];
model_ContentTree.prototype = {
	set_id: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for ContentTree.id.");
		}
		return this.id = v;
	}
	,set_rooms: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for ContentTree.rooms.");
		}
		return this.rooms = v;
	}
};
var model_Room = function(data) {
	this.shelves = [];
	this.set_id(data.id);
	if(Object.prototype.hasOwnProperty.call(data,"shelves")) {
		this.set_shelves(data.shelves);
	}
};
model_Room.__name__ = true;
model_Room.__interfaces__ = [DataClass];
model_Room.prototype = {
	set_id: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for Room.id.");
		}
		return this.id = v;
	}
	,set_shelves: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for Room.shelves.");
		}
		return this.shelves = v;
	}
};
var model_Shelf = function(data) {
	this.books = [];
	this.set_id(data.id);
	this.set_title(data.title);
	this.set_access(data.access);
	this.set_info(data.info);
	if(Object.prototype.hasOwnProperty.call(data,"books")) {
		this.set_books(data.books);
	}
};
model_Shelf.__name__ = true;
model_Shelf.__interfaces__ = [DataClass];
model_Shelf.prototype = {
	set_id: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for Shelf.id.");
		}
		return this.id = v;
	}
	,set_title: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for Shelf.title.");
		}
		return this.title = v;
	}
	,set_access: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for Shelf.access.");
		}
		return this.access = v;
	}
	,set_info: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for Shelf.info.");
		}
		return this.info = v;
	}
	,set_books: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for Shelf.books.");
		}
		return this.books = v;
	}
};
var model_Booktype = $hxEnums["model.Booktype"] = { __ename__ : true, __constructs__ : ["Standard","Lexicon"]
	,Standard: {_hx_index:0,__enum__:"model.Booktype",toString:$estr}
	,Lexicon: {_hx_index:1,__enum__:"model.Booktype",toString:$estr}
};
var model_Book = function(data) {
	this.chapters = [];
	this.set_id(data.id);
	this.set_title(data.title);
	this.set_access(data.access);
	this.set_type(data.type);
	this.set_info(data.info);
	if(Object.prototype.hasOwnProperty.call(data,"chapters")) {
		this.set_chapters(data.chapters);
	}
};
model_Book.__name__ = true;
model_Book.__interfaces__ = [DataClass];
model_Book.prototype = {
	set_id: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for Book.id.");
		}
		return this.id = v;
	}
	,set_title: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for Book.title.");
		}
		return this.title = v;
	}
	,set_access: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for Book.access.");
		}
		return this.access = v;
	}
	,set_type: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for Book.type.");
		}
		return this.type = v;
	}
	,set_info: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for Book.info.");
		}
		return this.info = v;
	}
	,set_chapters: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for Book.chapters.");
		}
		return this.chapters = v;
	}
};
var model_Chaptertype = $hxEnums["model.Chaptertype"] = { __ename__ : true, __constructs__ : ["Info","Article","Video","Exercise"]
	,Info: {_hx_index:0,__enum__:"model.Chaptertype",toString:$estr}
	,Article: {_hx_index:1,__enum__:"model.Chaptertype",toString:$estr}
	,Video: {_hx_index:2,__enum__:"model.Chaptertype",toString:$estr}
	,Exercise: {_hx_index:3,__enum__:"model.Chaptertype",toString:$estr}
};
var model_Chapter = function(data) {
	this.chapters = [];
	this.set_id(data.id);
	this.set_title(data.title);
	this.set_access(data.access);
	this.set_type(data.type);
	this.set_info(data.info);
	this.set_text(data.text);
	if(Object.prototype.hasOwnProperty.call(data,"chapters")) {
		this.set_chapters(data.chapters);
	}
};
model_Chapter.__name__ = true;
model_Chapter.__interfaces__ = [DataClass];
model_Chapter.prototype = {
	set_id: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for Chapter.id.");
		}
		return this.id = v;
	}
	,set_title: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for Chapter.title.");
		}
		return this.title = v;
	}
	,set_access: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for Chapter.access.");
		}
		return this.access = v;
	}
	,set_type: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for Chapter.type.");
		}
		return this.type = v;
	}
	,set_info: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for Chapter.info.");
		}
		return this.info = v;
	}
	,set_text: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for Chapter.text.");
		}
		return this.text = v;
	}
	,set_chapters: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for Chapter.chapters.");
		}
		return this.chapters = v;
	}
};
var model_ErrorsAndLogs = function() { };
model_ErrorsAndLogs.__name__ = true;
model_ErrorsAndLogs.addLog = function(log) {
	model_ErrorsAndLogs.logs.unshift(log);
	m.redraw();
};
model_ErrorsAndLogs.addErrors = function(err) {
	Lambda.iter(err,function(e) {
		model_ErrorsAndLogs.addError(e);
		return;
	});
};
model_ErrorsAndLogs.addError = function(e) {
	model_ErrorsAndLogs.errors.unshift(e);
	m.redraw();
};
var model_SiteConfig = function(data) {
	this.domains = [];
	this.arr = [];
	if(data != null) {
		if(Object.prototype.hasOwnProperty.call(data,"arr")) {
			this.set_arr(data.arr);
		}
		if(Object.prototype.hasOwnProperty.call(data,"domains")) {
			this.set_domains(data.domains);
		}
	}
};
model_SiteConfig.__name__ = true;
model_SiteConfig.__interfaces__ = [DataClass];
model_SiteConfig.defaultValues = function() {
	return new model_SiteConfig({ arr : ["A"], domains : [new model_DomainData({ name : "kak", fullname : "Körakademin", color : "blue"}),new model_DomainData({ name : "kantor", fullname : "Kantorsutbildningen", color : "red"})]});
};
model_SiteConfig.prototype = {
	set_arr: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for SiteConfig.arr.");
		}
		return this.arr = v;
	}
	,set_domains: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for SiteConfig.domains.");
		}
		return this.domains = v;
	}
};
var model_DomainData = function(data) {
	this.color = "grey";
	this.fullname = "Fullname";
	this.name = "shortname";
	if(data != null) {
		if(Object.prototype.hasOwnProperty.call(data,"name")) {
			this.set_name(data.name);
		}
		if(Object.prototype.hasOwnProperty.call(data,"fullname")) {
			this.set_fullname(data.fullname);
		}
		if(Object.prototype.hasOwnProperty.call(data,"color")) {
			this.set_color(data.color);
		}
	}
};
model_DomainData.__name__ = true;
model_DomainData.__interfaces__ = [DataClass];
model_DomainData.prototype = {
	set_name: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for DomainData.name.");
		}
		return this.name = v;
	}
	,set_fullname: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for DomainData.fullname.");
		}
		return this.fullname = v;
	}
	,set_color: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for DomainData.color.");
		}
		return this.color = v;
	}
};
var model_SiteModel = function() {
};
model_SiteModel.__name__ = true;
model_SiteModel.prototype = {
	init: function() {
		this.set_siteConfig(model_SiteConfig.defaultValues());
	}
	,set_siteConfig: function(d) {
		this.siteConfig = d;
		model_ErrorsAndLogs.addLog("SiteConfig:" + Std.string(this.siteConfig));
		m.redraw();
		return d;
	}
};
var model_UserModel = function() {
	this.currentUser = DataModes.Nil;
};
model_UserModel.__name__ = true;
model_UserModel.prototype = {
	set_currentUser: function(u) {
		if(this.currentUser == DataModes.Nil && u == DataModes.Nil) {
			return null;
		}
		if(this.currentUser == DataModes.Loading && u == DataModes.Loading) {
			return null;
		}
		this.currentUser = u;
		model_ErrorsAndLogs.addLog("CurrentUser:" + Std.string(this.currentUser));
		m.redraw();
		return u;
	}
	,init: function(app) {
		var starttime = new Date().getTime();
		model_UserModel.instance.set_currentUser(DataModes.Loading);
		app.auth().onAuthStateChanged(function(user) {
			if(user != null) {
				model_ErrorsAndLogs.addLog("Browser session user found.");
				model_UserModel.instance.set_currentUser(DataModes.Loading);
				return model_ApiCalls.getAuthRequest("/api/userconfig").then(function(data) {
					model_ErrorsAndLogs.addLog("User config loaded ms:" + (new Date().getTime() - starttime));
					model_UserModel.instance.set_currentUser(DataModes.Data(new model_CurrentUser(data)));
					model_ErrorsAndLogs.addErrors(data.errors);
					return;
				})["catch"](function(error) {
					model_ErrorsAndLogs.addError("Could not load userconfig for browser session user");
					model_ErrorsAndLogs.addError(error);
					return;
				});
			} else {
				model_ErrorsAndLogs.addLog("No browser session user found.");
				model_UserModel.instance.set_currentUser(DataModes.Nil);
				return null;
			}
		},function(error1) {
			model_ErrorsAndLogs.addLog("Error: " + Std.string(error1));
			return model_UserModel.instance.set_currentUser(DataModes.Nil);
		});
	}
	,signIn: function(email,password) {
		this.validate(email,password).then(function(valid) {
			model_UserModel.instance.set_currentUser(DataModes.Loading);
			return firebase.auth().signInWithEmailAndPassword(email,password);
		}).then(function(user) {
			console.log("src/model/UserModel.hx:66:","USER " + user);
			return null;
		})["catch"](function(error) {
			console.log("src/model/UserModel.hx:70:","ERROR" + error);
			model_ErrorsAndLogs.addError("error:" + error);
			model_UserModel.instance.set_currentUser(DataModes.Nil);
			return;
		});
	}
	,signOut: function() {
		firebase.auth().signOut();
	}
	,validate: function(email,password) {
		return new Promise(function(res,rej) {
			try {
				if(!utils__$UserEmail_UserEmail_$Impl_$.isValid(email)) {
					throw new js__$Boot_HaxeError("User email is not valid: " + email);
				}
				if(!utils__$UserPassword_UserPassword_$Impl_$.isValid(password)) {
					throw new js__$Boot_HaxeError("User password is not valid: " + password);
				}
				res(true);
			} catch( e ) {
				rej((e instanceof js__$Boot_HaxeError) ? e.val : e);
			}
			return;
		});
	}
	,getFBCurrentUser: function() {
		return firebase.auth().currentUser;
	}
	,getFBUserToken: function() {
		if(this.getFBCurrentUser() != null) {
			return this.getFBCurrentUser().getIdToken();
		} else {
			return new Promise(function(res,rej) {
				rej("Firebase.auth().currentUser == null");
				return;
			});
		}
	}
};
var model_CurrentUser = function(data) {
	this.set_userData(data.userData);
	this.set_userConfig(data.userConfig);
};
model_CurrentUser.__name__ = true;
model_CurrentUser.__interfaces__ = [DataClass];
model_CurrentUser.prototype = {
	set_userData: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for CurrentUser.userData.");
		}
		return this.userData = v;
	}
	,set_userConfig: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for CurrentUser.userConfig.");
		}
		return this.userConfig = v;
	}
};
var model_UserData = function(data) {
	this.access = 1;
	this.domains = ["kak"];
	this.set_firstname(data.firstname);
	this.set_lastname(data.lastname);
	this.set_email(data.email);
	if(Object.prototype.hasOwnProperty.call(data,"domains")) {
		this.set_domains(data.domains);
	}
	if(Object.prototype.hasOwnProperty.call(data,"access")) {
		this.set_access(data.access);
	}
};
model_UserData.__name__ = true;
model_UserData.__interfaces__ = [DataClass];
model_UserData.prototype = {
	set_firstname: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for UserData.firstname.");
		}
		return this.firstname = v;
	}
	,set_lastname: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for UserData.lastname.");
		}
		return this.lastname = v;
	}
	,set_email: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for UserData.email.");
		}
		return this.email = v;
	}
	,set_domains: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for UserData.domains.");
		}
		return this.domains = v;
	}
	,set_access: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for UserData.access.");
		}
		return this.access = v;
	}
};
var model_UserConfig = function() { };
model_UserConfig.__name__ = true;
model_UserConfig.__interfaces__ = [DataClass];
var ui_MInputEmail = function(state) {
	this.state = state;
};
ui_MInputEmail.__name__ = true;
ui_MInputEmail.__interfaces__ = [mithril_Mithril];
ui_MInputEmail.prototype = {
	view: function() {
		var _gthis = this;
		if(arguments.length > 0 && arguments[0].tag != this) return arguments[0].tag.view.apply(arguments[0].tag, arguments);
		return m.m("input[type=input][placeholder='Email']#email",{ style : { backgroundColor : this.state.validEmail ? "" + "white" : "" + "#fcc"}, onkeyup : function(e) {
			return _gthis.validate(e);
		}, onchange : function(e1) {
			return _gthis.validate(e1);
		}, autofill : function(e2) {
			return _gthis.validate(e2);
		}});
	}
	,validate: function(e) {
		var str = e.target.value;
		var valid = utils__$UserEmail_UserEmail_$Impl_$.isValid(str);
		console.log("src/ui/ClientUI.hx:35:","" + str + " Is valid email: " + (valid == null ? "null" : "" + valid));
		this.state.email = str;
		this.state.validEmail = valid;
		m.redraw();
		return valid;
	}
};
var ui_MInputPassword = function(state) {
	this.state = state;
};
ui_MInputPassword.__name__ = true;
ui_MInputPassword.__interfaces__ = [mithril_Mithril];
ui_MInputPassword.prototype = {
	view: function() {
		var _gthis = this;
		if(arguments.length > 0 && arguments[0].tag != this) return arguments[0].tag.view.apply(arguments[0].tag, arguments);
		return m.m("input[type=password][placeholder='Password']#password",{ style : { backgroundColor : this.state.validPassword ? "" + "white" : "" + "#fcc"}, onkeyup : function(e) {
			return _gthis.validate(e);
		}, onchange : function(e1) {
			return _gthis.validate(e1);
		}, autofill : function(e2) {
			return _gthis.validate(e2);
		}});
	}
	,validate: function(e) {
		var str = e.target.value;
		var valid = utils__$UserPassword_UserPassword_$Impl_$.isValid(str);
		console.log("src/ui/ClientUI.hx:52:","" + str + " Is valid password: " + (valid == null ? "null" : "" + valid));
		this.state.password = str;
		this.state.validPassword = valid;
		m.redraw();
		return valid;
	}
};
var ui_MLoginForm = function() {
	this.submitCallback = function(email,password) {
		console.log("src/ui/ClientUI.hx:78:","callback " + email + ", " + password);
		return;
	};
	this.state = null;
	this.state = { email : "", validEmail : false, password : "", validPassword : false};
};
ui_MLoginForm.__name__ = true;
ui_MLoginForm.__interfaces__ = [mithril_Mithril];
ui_MLoginForm.prototype = {
	view: function() {
		var _gthis = this;
		if(arguments.length > 0 && arguments[0].tag != this) return arguments[0].tag.view.apply(arguments[0].tag, arguments);
		var enabled = this.state.validEmail && this.state.validPassword;
		var disabledString = enabled ? "" : "[disabled]";
		return m.m("form",[new ui_MInputEmail(this.state).view(),new ui_MInputPassword(this.state).view(),m.m("button[type=button]" + disabledString,{ onclick : function(e) {
			_gthis.submitCallback(_gthis.state.email,_gthis.state.password);
			return;
		}},"Logga in")]);
	}
};
var ui_MLogoutForm = function(clientUser) {
	this.clientUser = clientUser;
};
ui_MLogoutForm.__name__ = true;
ui_MLogoutForm.__interfaces__ = [mithril_Mithril];
ui_MLogoutForm.prototype = {
	view: function() {
		if(arguments.length > 0 && arguments[0].tag != this) return arguments[0].tag.view.apply(arguments[0].tag, arguments);
		if(this.clientUser == null) {
			return m.m("div","clientUser == null");
		}
		var userData = this.clientUser.userData;
		return m.m("form",[m.m("div",""),m.m("h2","Välkommen, " + userData.firstname + " " + userData.lastname + "!"),m.m("button[type=button]",{ onclick : function(e) {
			model_UserModel.instance.signOut();
			return;
		}},"Logout")]);
	}
	,setUser: function(u) {
		this.clientUser = u;
		return this;
	}
};
var ui_UIHeader = function() {
	this.logoutform = null;
	this.loginform = null;
	this.loginform = new ui_MLoginForm();
	this.logoutform = new ui_MLogoutForm();
	this.loginform.submitCallback = function(email,password) {
		model_UserModel.instance.signIn(email,password);
		return;
	};
};
ui_UIHeader.__name__ = true;
ui_UIHeader.__interfaces__ = [mithril_Mithril];
ui_UIHeader.prototype = {
	view: function() {
		if(arguments.length > 0 && arguments[0].tag != this) return arguments[0].tag.view.apply(arguments[0].tag, arguments);
		var userView;
		var _g = model_UserModel.instance.currentUser;
		switch(_g._hx_index) {
		case 0:
			userView = this.loginform.view();
			break;
		case 1:
			userView = m.m("h2",{ style : { textAlign : "right", paddingRight : "1em"}},"Loading user data...");
			break;
		case 2:
			var d = _g.d;
			userView = this.logoutform.setUser(d).view();
			break;
		}
		return [m.m("h2","Header"),userView];
	}
};
var ui_TestUI = function() {
};
ui_TestUI.__name__ = true;
ui_TestUI.__interfaces__ = [mithril_Mithril];
ui_TestUI.prototype = {
	view: function() {
		if(arguments.length > 0 && arguments[0].tag != this) return arguments[0].tag.view.apply(arguments[0].tag, arguments);
		return [m.m("button",{ onclick : function(e) {
			return model_ApiCalls.getAuthRequest("/api/userdata").then(function(data) {
				model_ErrorsAndLogs.addLog(JSON.stringify(data));
				console.log("src/ui/ClientUI.hx:144:","userData result: " + JSON.stringify(data));
				return;
			})["catch"](function(error) {
				console.log("src/ui/ClientUI.hx:146:","userData error: " + error);
				model_ErrorsAndLogs.addError(error);
				return;
			});
		}},"Test /api/userData "),m.m("button",{ onclick : function(e1) {
			return model_ApiCalls.getAuthRequest("/api/userconfig").then(function(data1) {
				console.log("src/ui/ClientUI.hx:155:","userconfig result: " + JSON.stringify(data1));
				model_ErrorsAndLogs.addLog(JSON.stringify(data1));
				return;
			})["catch"](function(error1) {
				console.log("src/ui/ClientUI.hx:158:","userconfig error: " + error1);
				model_ErrorsAndLogs.addError(error1);
				return;
			});
		}},"Test /api/userConfig "),m.m("button",{ onclick : function(e2) {
			return model_ApiCalls.getRequest("/api/content-tree").then(function(data2) {
				console.log("src/ui/ClientUI.hx:167:","content-tree result: " + JSON.stringify(data2));
				model_ErrorsAndLogs.addLog(JSON.stringify(data2));
				return;
			})["catch"](function(error2) {
				console.log("src/ui/ClientUI.hx:170:","content-tree error: " + error2);
				model_ErrorsAndLogs.addError(error2);
				return;
			});
		}},"Test /api/content-treeB ")];
	}
};
var ui_UIContentTree = function() {
};
ui_UIContentTree.__name__ = true;
ui_UIContentTree.__interfaces__ = [mithril_Mithril];
ui_UIContentTree.prototype = {
	view: function() {
		if(arguments.length > 0 && arguments[0].tag != this) return arguments[0].tag.view.apply(arguments[0].tag, arguments);
		var _g = model_ContentModel.instance.contentTree;
		switch(_g._hx_index) {
		case 0:
			return m.m("h1","Nil");
		case 1:
			return m.m("h1","Loading");
		case 2:
			var d = _g.d;
			return [m.m("div","ContentTree " + d.id),m.m("div.padleft",d.rooms.map(function(room) {
				return new ui_UIRoom(room).view();
			}))];
		}
	}
};
var ui_UIRoom = function(room) {
	this.room = null;
	this.room = room;
};
ui_UIRoom.__name__ = true;
ui_UIRoom.__interfaces__ = [mithril_Mithril];
ui_UIRoom.prototype = {
	view: function() {
		if(arguments.length > 0 && arguments[0].tag != this) return arguments[0].tag.view.apply(arguments[0].tag, arguments);
		return [m.m("div","Room " + this.room.id),m.m("div.padleft",this.room.shelves.map(function(shelf) {
			return new ui_UIShelf(shelf).view();
		}))];
	}
};
var ui_UIShelf = function(item) {
	this.item = null;
	this.item = item;
};
ui_UIShelf.__name__ = true;
ui_UIShelf.__interfaces__ = [mithril_Mithril];
ui_UIShelf.prototype = {
	view: function() {
		if(arguments.length > 0 && arguments[0].tag != this) return arguments[0].tag.view.apply(arguments[0].tag, arguments);
		return [m.m("div","Shelf " + this.item.id),m.m("div.padleft",this.item.books.map(function(item2) {
			return new ui_UIBook(item2).view();
		}))];
	}
};
var ui_UIBook = function(item) {
	this.item = null;
	this.item = item;
};
ui_UIBook.__name__ = true;
ui_UIBook.__interfaces__ = [mithril_Mithril];
ui_UIBook.prototype = {
	view: function() {
		if(arguments.length > 0 && arguments[0].tag != this) return arguments[0].tag.view.apply(arguments[0].tag, arguments);
		return [m.m("div","Book " + this.item.id),m.m("div",this.item.chapters.map(function(item2) {
			return new ui_UIChapter(item2).view();
		}))];
	}
};
var ui_UIChapter = function(item) {
	this.item = null;
	this.item = item;
};
ui_UIChapter.__name__ = true;
ui_UIChapter.__interfaces__ = [mithril_Mithril];
ui_UIChapter.prototype = {
	view: function() {
		if(arguments.length > 0 && arguments[0].tag != this) return arguments[0].tag.view.apply(arguments[0].tag, arguments);
		return [m.m("div","Chapter " + this.item.id),this.item.chapters != null ? m.m("div.padleft",this.item.chapters.map(function(item2) {
			return new ui_UIChapter(item2).view();
		})) : null];
	}
};
var utils__$UserEmail_UserEmail_$Impl_$ = {};
utils__$UserEmail_UserEmail_$Impl_$.__name__ = true;
utils__$UserEmail_UserEmail_$Impl_$.isValid = function(address) {
	return utils__$UserEmail_UserEmail_$Impl_$.ereg.match(address);
};
var utils__$UserPassword_UserPassword_$Impl_$ = {};
utils__$UserPassword_UserPassword_$Impl_$.__name__ = true;
utils__$UserPassword_UserPassword_$Impl_$.isValid = function(str) {
	return str.length > 3;
};
function $getIterator(o) { if( o instanceof Array ) return HxOverrides.iter(o); else return o.iterator(); }
var $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = m.bind(o); o.hx__closures__[m.__id__] = f; } return f; }
String.__name__ = true;
Array.__name__ = true;
Date.__name__ = ["Date"];
Object.defineProperty(js__$Boot_HaxeError.prototype,"message",{ get : function() {
	return String(this.val);
}});
try {
var __varName = window.m;
(function(m) {
			if (m.m) return;
			m.m = function() {
				try { 
					for(var i=0; i < arguments.length; ++i) if(arguments[i] instanceof List) {
						var list = arguments[i].h; arguments[i] = [];
						while(list != null) { arguments[i].push(l[0]); list = l[1]; }
					}
				} catch(e) {}
				return m.apply(this, arguments);
			}
		})(__varName);
} catch(_) {}
try {
GLOBAL.m = require("mithril");
var __varName1 = GLOBAL.m;
(function(m) {
			if (m.m) return;
			m.m = function() {
				try { 
					for(var i=0; i < arguments.length; ++i) if(arguments[i] instanceof List) {
						var list = arguments[i].h; arguments[i] = [];
						while(list != null) { arguments[i].push(l[0]); list = l[1]; }
					}
				} catch(e) {}
				return m.apply(this, arguments);
			}
		})(__varName1);
} catch(_) {}
model_ContentModel.instance = new model_ContentModel();
model_ContentTree.__meta__ = { obj : { dataClassRtti : [{ id : "String", rooms : "Array<DataClass<model.Room>>"}]}};
model_Room.__meta__ = { obj : { dataClassRtti : [{ id : "String", shelves : "Array<DataClass<model.Shelf>>"}]}};
model_Shelf.__meta__ = { obj : { dataClassRtti : [{ id : "String", title : "String", access : "Int", info : "String", books : "Array<DataClass<model.Book>>"}]}};
model_Book.__meta__ = { obj : { dataClassRtti : [{ id : "String", title : "String", access : "Int", type : "Enum<model.Booktype>", info : "String", chapters : "Array<DataClass<model.Chapter>>"}]}};
model_Chapter.__meta__ = { obj : { dataClassRtti : [{ id : "String", title : "String", access : "Int", type : "Enum<model.Chaptertype>", info : "String", text : "String", chapters : "Array<DataClass<model.Chapter>>"}]}};
model_ErrorsAndLogs.logs = [];
model_ErrorsAndLogs.errors = [];
model_SiteConfig.__meta__ = { obj : { dataClassRtti : [{ arr : "Array<String>", domains : "Array<DataClass<model.DomainData>>"}]}};
model_DomainData.__meta__ = { obj : { dataClassRtti : [{ name : "String", fullname : "String", color : "String"}]}};
model_SiteModel.instance = new model_SiteModel();
model_UserModel.instance = new model_UserModel();
model_CurrentUser.__meta__ = { obj : { dataClassRtti : [{ userData : "DataClass<model.UserData>", userConfig : "DataClass<model.UserConfig>"}]}};
model_UserData.__meta__ = { obj : { dataClassRtti : [{ firstname : "String", lastname : "String", email : "String", domains : "Array<String>", access : "Int"}]}};
model_UserConfig.__meta__ = { obj : { dataClassRtti : [{ domain : "String"}]}};
utils__$UserEmail_UserEmail_$Impl_$.ereg = new EReg("^[\\w-\\.]{2,}@[\\w-\\.]{2,}\\.[a-z]{2,6}$","i");
Client.main();
})();
