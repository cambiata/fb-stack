// Generated by Haxe 4.0.0-preview.4+1e3e5e016
(function ($global) { "use strict";
var $hxClasses = {},$estr = function() { return js_Boot.__string_rec(this,''); },$hxEnums = {},$_;
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var Bundle = function() { };
$hxClasses["Bundle"] = Bundle;
Bundle.__name__ = ["Bundle"];
var DataClass = function() { };
$hxClasses["DataClass"] = DataClass;
DataClass.__name__ = ["DataClass"];
var DateTools = function() { };
$hxClasses["DateTools"] = DateTools;
DateTools.__name__ = ["DateTools"];
DateTools.__format_get = function(d,e) {
	switch(e) {
	case "%":
		return "%";
	case "A":
		return DateTools.DAY_NAMES[d.getDay()];
	case "B":
		return DateTools.MONTH_NAMES[d.getMonth()];
	case "C":
		return StringTools.lpad(Std.string(d.getFullYear() / 100 | 0),"0",2);
	case "D":
		return DateTools.__format(d,"%m/%d/%y");
	case "F":
		return DateTools.__format(d,"%Y-%m-%d");
	case "I":case "l":
		var hour = d.getHours() % 12;
		return StringTools.lpad(Std.string(hour == 0 ? 12 : hour),e == "I" ? "0" : " ",2);
	case "M":
		return StringTools.lpad(Std.string(d.getMinutes()),"0",2);
	case "R":
		return DateTools.__format(d,"%H:%M");
	case "S":
		return StringTools.lpad(Std.string(d.getSeconds()),"0",2);
	case "T":
		return DateTools.__format(d,"%H:%M:%S");
	case "Y":
		return Std.string(d.getFullYear());
	case "a":
		return DateTools.DAY_SHORT_NAMES[d.getDay()];
	case "b":case "h":
		return DateTools.MONTH_SHORT_NAMES[d.getMonth()];
	case "d":
		return StringTools.lpad(Std.string(d.getDate()),"0",2);
	case "e":
		return Std.string(d.getDate());
	case "H":case "k":
		return StringTools.lpad(Std.string(d.getHours()),e == "H" ? "0" : " ",2);
	case "m":
		return StringTools.lpad(Std.string(d.getMonth() + 1),"0",2);
	case "n":
		return "\n";
	case "p":
		if(d.getHours() > 11) {
			return "PM";
		} else {
			return "AM";
		}
		break;
	case "r":
		return DateTools.__format(d,"%I:%M:%S %p");
	case "s":
		return Std.string(d.getTime() / 1000 | 0);
	case "t":
		return "\t";
	case "u":
		var t = d.getDay();
		if(t == 0) {
			return "7";
		} else if(t == null) {
			return "null";
		} else {
			return "" + t;
		}
		break;
	case "w":
		return Std.string(d.getDay());
	case "y":
		return StringTools.lpad(Std.string(d.getFullYear() % 100),"0",2);
	default:
		throw new js__$Boot_HaxeError("Date.format %" + e + "- not implemented yet.");
	}
};
DateTools.__format = function(d,f) {
	var r_b = "";
	var p = 0;
	while(true) {
		var np = f.indexOf("%",p);
		if(np < 0) {
			break;
		}
		var len = np - p;
		r_b += len == null ? HxOverrides.substr(f,p,null) : HxOverrides.substr(f,p,len);
		r_b += Std.string(DateTools.__format_get(d,HxOverrides.substr(f,np + 1,1)));
		p = np + 2;
	}
	var len1 = f.length - p;
	r_b += len1 == null ? HxOverrides.substr(f,p,null) : HxOverrides.substr(f,p,len1);
	return r_b;
};
DateTools.format = function(d,f) {
	return DateTools.__format(d,f);
};
var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
$hxClasses["EReg"] = EReg;
EReg.__name__ = ["EReg"];
EReg.prototype = {
	match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,matched: function(n) {
		if(this.r.m != null && n >= 0 && n < this.r.m.length) {
			return this.r.m[n];
		} else {
			throw new js__$Boot_HaxeError("EReg::matched");
		}
	}
	,matchedPos: function() {
		if(this.r.m == null) {
			throw new js__$Boot_HaxeError("No string matched");
		}
		return { pos : this.r.m.index, len : this.r.m[0].length};
	}
	,matchSub: function(s,pos,len) {
		if(len == null) {
			len = -1;
		}
		if(this.r.global) {
			this.r.lastIndex = pos;
			this.r.m = this.r.exec(len < 0 ? s : HxOverrides.substr(s,0,pos + len));
			var b = this.r.m != null;
			if(b) {
				this.r.s = s;
			}
			return b;
		} else {
			var b1 = this.match(len < 0 ? HxOverrides.substr(s,pos,null) : HxOverrides.substr(s,pos,len));
			if(b1) {
				this.r.s = s;
				this.r.m.index += pos;
			}
			return b1;
		}
	}
	,map: function(s,f) {
		var offset = 0;
		var buf_b = "";
		while(true) {
			if(offset >= s.length) {
				break;
			} else if(!this.matchSub(s,offset)) {
				buf_b += Std.string(HxOverrides.substr(s,offset,null));
				break;
			}
			var p = this.matchedPos();
			buf_b += Std.string(HxOverrides.substr(s,offset,p.pos - offset));
			buf_b += Std.string(f(this));
			if(p.len == 0) {
				buf_b += Std.string(HxOverrides.substr(s,p.pos,1));
				offset = p.pos + 1;
			} else {
				offset = p.pos + p.len;
			}
			if(!this.r.global) {
				break;
			}
		}
		if(!this.r.global && offset > 0 && offset < s.length) {
			buf_b += Std.string(HxOverrides.substr(s,offset,null));
		}
		return buf_b;
	}
	,__class__: EReg
};
var HxOverrides = function() { };
$hxClasses["HxOverrides"] = HxOverrides;
HxOverrides.__name__ = ["HxOverrides"];
HxOverrides.strDate = function(s) {
	switch(s.length) {
	case 8:
		var k = s.split(":");
		var d = new Date();
		d["setTime"](0);
		d["setUTCHours"](k[0]);
		d["setUTCMinutes"](k[1]);
		d["setUTCSeconds"](k[2]);
		return d;
	case 10:
		var k1 = s.split("-");
		return new Date(k1[0],k1[1] - 1,k1[2],0,0,0);
	case 19:
		var k2 = s.split(" ");
		var y = k2[0].split("-");
		var t = k2[1].split(":");
		return new Date(y[0],y[1] - 1,y[2],t[0],t[1],t[2]);
	default:
		throw new js__$Boot_HaxeError("Invalid date format : " + s);
	}
};
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
var Lambda = function() { };
$hxClasses["Lambda"] = Lambda;
Lambda.__name__ = ["Lambda"];
Lambda.array = function(it) {
	var a = [];
	var i = $getIterator(it);
	while(i.hasNext()) a.push(i.next());
	return a;
};
Lambda.map = function(it,f) {
	var l = new haxe_ds_List();
	var x = $getIterator(it);
	while(x.hasNext()) l.add(f(x.next()));
	return l;
};
Lambda.has = function(it,elt) {
	var x = $getIterator(it);
	while(x.hasNext()) if(x.next() == elt) {
		return true;
	}
	return false;
};
Lambda.foreach = function(it,f) {
	var x = $getIterator(it);
	while(x.hasNext()) if(!f(x.next())) {
		return false;
	}
	return true;
};
Lambda.iter = function(it,f) {
	var x = $getIterator(it);
	while(x.hasNext()) f(x.next());
};
Lambda.filter = function(it,f) {
	var l = new haxe_ds_List();
	var x = $getIterator(it);
	while(x.hasNext()) {
		var x1 = x.next();
		if(f(x1)) {
			l.add(x1);
		}
	}
	return l;
};
Lambda.indexOf = function(it,v) {
	var i = 0;
	var v2 = $getIterator(it);
	while(v2.hasNext()) {
		if(v == v2.next()) {
			return i;
		}
		++i;
	}
	return -1;
};
var Markdown = function() { };
$hxClasses["Markdown"] = Markdown;
Markdown.__name__ = ["Markdown"];
Markdown.markdownToHtml = function(markdown) {
	var document = new Document();
	try {
		var _this_r = new RegExp("(\r\n|\r)","g".split("u").join(""));
		var lines = markdown.replace(_this_r,"\n").split("\n");
		document.parseRefLinks(lines);
		return Markdown.renderHtml(document.parseLines(lines));
	} catch( e ) {
		return "<pre>" + Std.string((e instanceof js__$Boot_HaxeError) ? e.val : e) + "</pre>";
	}
};
Markdown.renderHtml = function(blocks) {
	return new markdown_HtmlRenderer().render(blocks);
};
var Document = function() {
	this.refLinks = new haxe_ds_StringMap();
	this.inlineSyntaxes = [];
};
$hxClasses["Document"] = Document;
Document.__name__ = ["Document"];
Document.prototype = {
	parseRefLinks: function(lines) {
		var titles = new EReg("(" + "\"[^\"]+\"" + "|" + "'[^']+'" + "|" + "\\([^)]+\\)" + ")","");
		var link = new EReg("^[ ]{0,3}" + "\\[([^\\]]+)\\]" + ":\\s+(\\S+)\\s*(" + "\"[^\"]+\"" + "|" + "'[^']+'" + "|" + "\\([^)]+\\)" + "|)\\s*$","");
		var _g1 = 0;
		var _g = lines.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(!link.match(lines[i])) {
				continue;
			}
			var id = link.matched(1);
			var url = link.matched(2);
			var title = link.matched(3);
			if(StringTools.startsWith(url,"<") && StringTools.endsWith(url,">")) {
				url = HxOverrides.substr(url,1,url.length - 2);
			}
			if(title == "" && lines[i + 1] != null && titles.match(lines[i + 1])) {
				title = titles.matched(1);
				lines[i + 1] = "";
			}
			if(title == "") {
				title = null;
			} else {
				title = title.substring(1,title.length - 1);
			}
			id = id.toLowerCase();
			var value = new Link(id,url,title);
			var _this = this.refLinks;
			if(__map_reserved[id] != null) {
				_this.setReserved(id,value);
			} else {
				_this.h[id] = value;
			}
			lines[i] = "";
		}
	}
	,parseLines: function(lines) {
		var parser = new markdown_BlockParser(lines,this);
		var blocks = [];
		while(parser.pos < parser.lines.length) {
			var _g = 0;
			var _g1 = markdown_BlockSyntax.get_syntaxes();
			while(_g < _g1.length) {
				var syntax = _g1[_g];
				++_g;
				if(syntax.canParse(parser)) {
					var block = syntax.parse(parser);
					if(block != null) {
						blocks.push(block);
					}
					break;
				}
			}
		}
		return blocks;
	}
	,parseInline: function(text) {
		return new markdown_InlineParser(text,this).parse();
	}
	,__class__: Document
};
var Link = function(id,url,title) {
	this.id = id;
	this.url = url;
	this.title = title;
};
$hxClasses["Link"] = Link;
Link.__name__ = ["Link"];
Link.prototype = {
	__class__: Link
};
Math.__name__ = ["Math"];
var Reflect = function() { };
$hxClasses["Reflect"] = Reflect;
Reflect.__name__ = ["Reflect"];
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( e ) {
		return null;
	}
};
Reflect.getProperty = function(o,field) {
	var tmp;
	if(o == null) {
		return null;
	} else {
		var tmp1;
		if(o.__properties__) {
			tmp = o.__properties__["get_" + field];
			tmp1 = tmp;
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			return o[tmp]();
		} else {
			return o[field];
		}
	}
};
Reflect.setProperty = function(o,field,value) {
	var tmp;
	var tmp1;
	if(o.__properties__) {
		tmp = o.__properties__["set_" + field];
		tmp1 = tmp;
	} else {
		tmp1 = false;
	}
	if(tmp1) {
		o[tmp](value);
	} else {
		o[field] = value;
	}
};
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) {
			a.push(f);
		}
		}
	}
	return a;
};
Reflect.isFunction = function(f) {
	if(typeof(f) == "function") {
		return !(f.__name__ || f.__ename__);
	} else {
		return false;
	}
};
Reflect.compare = function(a,b) {
	if(a == b) {
		return 0;
	} else if(a > b) {
		return 1;
	} else {
		return -1;
	}
};
var haxe_IMap = function() { };
$hxClasses["haxe.IMap"] = haxe_IMap;
haxe_IMap.__name__ = ["haxe","IMap"];
var haxe_ds_StringMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.StringMap"] = haxe_ds_StringMap;
haxe_ds_StringMap.__name__ = ["haxe","ds","StringMap"];
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
	setReserved: function(key,value) {
		if(this.rh == null) {
			this.rh = { };
		}
		this.rh["$" + key] = value;
	}
	,getReserved: function(key) {
		if(this.rh == null) {
			return null;
		} else {
			return this.rh["$" + key];
		}
	}
	,existsReserved: function(key) {
		if(this.rh == null) {
			return false;
		}
		return this.rh.hasOwnProperty("$" + key);
	}
	,remove: function(key) {
		if(__map_reserved[key] != null) {
			key = "$" + key;
			if(this.rh == null || !this.rh.hasOwnProperty(key)) {
				return false;
			}
			delete(this.rh[key]);
			return true;
		} else {
			if(!this.h.hasOwnProperty(key)) {
				return false;
			}
			delete(this.h[key]);
			return true;
		}
	}
	,keys: function() {
		return HxOverrides.iter(this.arrayKeys());
	}
	,arrayKeys: function() {
		var out = [];
		for( var key in this.h ) {
		if(this.h.hasOwnProperty(key)) {
			out.push(key);
		}
		}
		if(this.rh != null) {
			for( var key in this.rh ) {
			if(key.charCodeAt(0) == 36) {
				out.push(key.substr(1));
			}
			}
		}
		return out;
	}
	,__class__: haxe_ds_StringMap
};
var Require = function() { };
$hxClasses["Require"] = Require;
Require.__name__ = ["Require"];
Require.module = function(name) {
	var _this = Require.loaded;
	if(__map_reserved[name] != null ? _this.existsReserved(name) : _this.h.hasOwnProperty(name)) {
		var _this1 = Require.loaded;
		if(__map_reserved[name] != null) {
			return _this1.getReserved(name);
		} else {
			return _this1.h[name];
		}
	}
	var p = new Promise(function(resolve,reject) {
		var doc = window.document;
		var script = null;
		var hasFailed = false;
		var resourceLoaded = function(_) {
			resolve(name);
		};
		var resourceFailed = function(_1) {
			if(!hasFailed) {
				hasFailed = true;
				Require.loaded.remove(name);
				doc.body.removeChild(script);
				reject(name);
			}
		};
		script = doc.createElement("script");
		script.onload = resourceLoaded;
		script.onerror = resourceFailed;
		script.src = Require.jsPath + name + Require.jsExt;
		doc.body.appendChild(script);
	});
	var _this2 = Require.loaded;
	if(__map_reserved[name] != null) {
		_this2.setReserved(name,p);
	} else {
		_this2.h[name] = p;
	}
	return p;
};
var Std = function() { };
$hxClasses["Std"] = Std;
Std.__name__ = ["Std"];
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	var v = parseInt(x,10);
	if(v == 0 && (HxOverrides.cca(x,1) == 120 || HxOverrides.cca(x,1) == 88)) {
		v = parseInt(x);
	}
	if(isNaN(v)) {
		return null;
	}
	return v;
};
Std.random = function(x) {
	if(x <= 0) {
		return 0;
	} else {
		return Math.floor(Math.random() * x);
	}
};
var StringBuf = function() {
	this.b = "";
};
$hxClasses["StringBuf"] = StringBuf;
StringBuf.__name__ = ["StringBuf"];
StringBuf.prototype = {
	__class__: StringBuf
};
var StringTools = function() { };
$hxClasses["StringTools"] = StringTools;
StringTools.__name__ = ["StringTools"];
StringTools.htmlEscape = function(s,quotes) {
	s = s.split("&").join("&amp;").split("<").join("&lt;").split(">").join("&gt;");
	if(quotes) {
		return s.split("\"").join("&quot;").split("'").join("&#039;");
	} else {
		return s;
	}
};
StringTools.startsWith = function(s,start) {
	if(s.length >= start.length) {
		return HxOverrides.substr(s,0,start.length) == start;
	} else {
		return false;
	}
};
StringTools.endsWith = function(s,end) {
	var elen = end.length;
	var slen = s.length;
	if(slen >= elen) {
		return HxOverrides.substr(s,slen - elen,elen) == end;
	} else {
		return false;
	}
};
StringTools.isSpace = function(s,pos) {
	var c = HxOverrides.cca(s,pos);
	if(!(c > 8 && c < 14)) {
		return c == 32;
	} else {
		return true;
	}
};
StringTools.ltrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,r)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,r,l - r);
	} else {
		return s;
	}
};
StringTools.rtrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,l - r - 1)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,0,l - r);
	} else {
		return s;
	}
};
StringTools.trim = function(s) {
	return StringTools.ltrim(StringTools.rtrim(s));
};
StringTools.lpad = function(s,c,l) {
	if(c.length <= 0) {
		return s;
	}
	while(s.length < l) s = c + s;
	return s;
};
StringTools.replace = function(s,sub,by) {
	return s.split(sub).join(by);
};
var Type = function() { };
$hxClasses["Type"] = Type;
Type.__name__ = ["Type"];
Type.getClassName = function(c) {
	var a = c.__name__;
	if(a == null) {
		return null;
	}
	return a.join(".");
};
Type.createInstance = function(cl,args) {
	return new (Function.prototype.bind.apply(cl,[null].concat(args)));
};
Type.createEnum = function(e,constr,params) {
	var f = Reflect.field(e,constr);
	if(f == null) {
		throw new js__$Boot_HaxeError("No such constructor " + constr);
	}
	if(Reflect.isFunction(f)) {
		if(params == null) {
			throw new js__$Boot_HaxeError("Constructor " + constr + " need parameters");
		}
		return f.apply(e,params);
	}
	if(params != null && params.length != 0) {
		throw new js__$Boot_HaxeError("Constructor " + constr + " does not need parameters");
	}
	return f;
};
var Xml = function(nodeType) {
	this.nodeType = nodeType;
	this.children = [];
	this.attributeMap = new haxe_ds_StringMap();
};
$hxClasses["Xml"] = Xml;
Xml.__name__ = ["Xml"];
Xml.parse = function(str) {
	return haxe_xml_Parser.parse(str);
};
Xml.createElement = function(name) {
	var xml = new Xml(Xml.Element);
	if(xml.nodeType != Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + xml.nodeType);
	}
	xml.nodeName = name;
	return xml;
};
Xml.createPCData = function(data) {
	var xml = new Xml(Xml.PCData);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, unexpected " + xml.nodeType);
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createCData = function(data) {
	var xml = new Xml(Xml.CData);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, unexpected " + xml.nodeType);
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createComment = function(data) {
	var xml = new Xml(Xml.Comment);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, unexpected " + xml.nodeType);
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createDocType = function(data) {
	var xml = new Xml(Xml.DocType);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, unexpected " + xml.nodeType);
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createProcessingInstruction = function(data) {
	var xml = new Xml(Xml.ProcessingInstruction);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, unexpected " + xml.nodeType);
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createDocument = function() {
	return new Xml(Xml.Document);
};
Xml.prototype = {
	get: function(att) {
		if(this.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + this.nodeType);
		}
		var _this = this.attributeMap;
		if(__map_reserved[att] != null) {
			return _this.getReserved(att);
		} else {
			return _this.h[att];
		}
	}
	,set: function(att,value) {
		if(this.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + this.nodeType);
		}
		var _this = this.attributeMap;
		if(__map_reserved[att] != null) {
			_this.setReserved(att,value);
		} else {
			_this.h[att] = value;
		}
	}
	,exists: function(att) {
		if(this.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + this.nodeType);
		}
		var _this = this.attributeMap;
		if(__map_reserved[att] != null) {
			return _this.existsReserved(att);
		} else {
			return _this.h.hasOwnProperty(att);
		}
	}
	,attributes: function() {
		if(this.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + this.nodeType);
		}
		return this.attributeMap.keys();
	}
	,elements: function() {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + this.nodeType);
		}
		var _g = [];
		var _g1 = 0;
		var _g2 = this.children;
		while(_g1 < _g2.length) {
			var child = _g2[_g1];
			++_g1;
			if(child.nodeType == Xml.Element) {
				_g.push(child);
			}
		}
		return HxOverrides.iter(_g);
	}
	,elementsNamed: function(name) {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + this.nodeType);
		}
		var _g = [];
		var _g1 = 0;
		var _g2 = this.children;
		while(_g1 < _g2.length) {
			var child = _g2[_g1];
			++_g1;
			var tmp;
			if(child.nodeType == Xml.Element) {
				if(child.nodeType != Xml.Element) {
					throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + child.nodeType);
				}
				tmp = child.nodeName == name;
			} else {
				tmp = false;
			}
			if(tmp) {
				_g.push(child);
			}
		}
		return HxOverrides.iter(_g);
	}
	,firstElement: function() {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + this.nodeType);
		}
		var _g = 0;
		var _g1 = this.children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.nodeType == Xml.Element) {
				return child;
			}
		}
		return null;
	}
	,addChild: function(x) {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + this.nodeType);
		}
		if(x.parent != null) {
			x.parent.removeChild(x);
		}
		this.children.push(x);
		x.parent = this;
	}
	,removeChild: function(x) {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + this.nodeType);
		}
		if(HxOverrides.remove(this.children,x)) {
			x.parent = null;
			return true;
		}
		return false;
	}
	,toString: function() {
		return haxe_xml_Printer.print(this);
	}
	,__class__: Xml
};
var audio_Audio = function() {
	this.context = new AudioContext();
};
$hxClasses["audio.Audio"] = audio_Audio;
audio_Audio.__name__ = ["audio","Audio"];
audio_Audio.prototype = {
	__class__: audio_Audio
};
var audio_IPlayback = function() { };
$hxClasses["audio.IPlayback"] = audio_IPlayback;
audio_IPlayback.__name__ = ["audio","IPlayback"];
audio_IPlayback.prototype = {
	__class__: audio_IPlayback
};
var audio_scorx_Mixer = function(channels) {
	this.channels = [];
	this.channels = channels;
	this.trackVolumeNodes = [];
	this.sampleNodes = [];
	this.masterVolumeNode = audio_Audio.instance.context.createGain();
	this.analyserNode = audio_Audio.instance.context.createAnalyser();
};
$hxClasses["audio.scorx.Mixer"] = audio_scorx_Mixer;
audio_scorx_Mixer.__name__ = ["audio","scorx","Mixer"];
audio_scorx_Mixer.__interfaces__ = [audio_IPlayback];
audio_scorx_Mixer.prototype = {
	play: function(startTime) {
		if(startTime == null) {
			startTime = 0;
		}
		this.buildGraph();
		this.elapsedTimeSinceStart = startTime;
		this.sampleNodes.map(function(s) {
			s.start(0,startTime);
			return;
		});
	}
	,stop: function() {
		this.sampleNodes.map(function(s) {
			s.stop(0);
			s = null;
			return s;
		});
	}
	,buildGraph: function() {
		var sources = [];
		console.log("src/audio/scorx/Mixer.hx:47:",this.channels.length);
		var _g1 = 0;
		var _g = this.channels.length;
		while(_g1 < _g) {
			var i = _g1++;
			var sample = this.channels[i].buffer;
			sources[i] = audio_Audio.instance.context.createBufferSource();
			sources[i].buffer = sample;
			this.trackVolumeNodes[i] = audio_Audio.instance.context.createGain();
			this.trackVolumeNodes[i].gain.value = this.channels[i].volume;
			sources[i].connect(this.trackVolumeNodes[i],0,0);
			this.trackVolumeNodes[i].connect(this.masterVolumeNode,0,0);
			this.masterVolumeNode.connect(this.analyserNode,0,0);
			this.analyserNode.connect(audio_Audio.instance.context.destination,0,0);
		}
		this.sampleNodes = sources;
	}
	,getDuration: function() {
		if(this.channels[0] != null) {
			return this.channels[0].buffer.duration;
		}
		return 0;
	}
	,setVolumeOfChannel: function(idx,volume) {
		if(this.trackVolumeNodes == null || this.trackVolumeNodes == []) {
			return;
		}
		if(this.trackVolumeNodes[idx] == null) {
			return;
		}
		this.trackVolumeNodes[idx].gain.value = volume;
		this.channels[idx].volume = volume;
	}
	,setMasterVolume: function(volume) {
		this.volume = volume;
		this.masterVolumeNode.gain.value = volume;
	}
	,getPosition: function() {
		return 0;
	}
	,__class__: audio_scorx_Mixer
};
var audio_scorx_Channel = function(name,buffer) {
	this.name = name;
	this.buffer = buffer;
	this.peaks = 0;
	this.volume = 1.0;
	this.panning = 0;
	this.sampleNode = null;
	this.volumeNode = null;
};
$hxClasses["audio.scorx.Channel"] = audio_scorx_Channel;
audio_scorx_Channel.__name__ = ["audio","scorx","Channel"];
audio_scorx_Channel.prototype = {
	__class__: audio_scorx_Channel
};
var audio_scorx_Loader = function() { };
$hxClasses["audio.scorx.Loader"] = audio_scorx_Loader;
audio_scorx_Loader.__name__ = ["audio","scorx","Loader"];
audio_scorx_Loader.load = function(url) {
	return new Promise(function(res,rej) {
		var request = new XMLHttpRequest();
		request.open("GET",url,true);
		request.responseType = "arraybuffer";
		request.onload = function(_) {
			audio_Audio.instance.context.decodeAudioData(request.response,function(buffer) {
				console.log("src/audio/scorx/Mixer.hx:118:","Loaded and decoded track " + url);
				if(buffer == null) {
					rej("error decoding file data: " + url);
				}
				res({ url : url, buffer : buffer});
			},function() {
				rej("decodeAudioData error ");
			});
		};
		request.send();
		return;
	});
};
var audio_scorx_MixerModel = function() {
	this.loadId = null;
	this.playing = false;
	this.volumes = [];
	this.files = [];
	this.deltaTime = 0;
};
$hxClasses["audio.scorx.MixerModel"] = audio_scorx_MixerModel;
audio_scorx_MixerModel.__name__ = ["audio","scorx","MixerModel"];
audio_scorx_MixerModel.__interfaces__ = [audio_IPlayback];
audio_scorx_MixerModel.prototype = {
	ready: function() {
		return this.mixer != null;
	}
	,loadFiles: function(id,files) {
		var _gthis = this;
		return new Promise(function(res,rej) {
			if(_gthis.loadId == id) {
				res(true);
				return;
			}
			_gthis.loadId = id;
			_gthis.mixer = null;
			_gthis.files = files;
			_gthis.volumes = _gthis.files.map(function(f) {
				return 0.7;
			});
			m.redraw();
			Promise.all(files.map(function(f1) {
				return audio_scorx_Loader.load(f1);
			})).then(function(buffers) {
				return Promise.resolve(buffers.map(function(b) {
					return new audio_scorx_Channel(b.url,b.buffer);
				}));
			}).then(function(channels) {
				console.log("src/audio/scorx/MixerModel.hx:42:","all channels loaded!");
				_gthis.mixer = new audio_scorx_Mixer(channels);
				res(true);
				return;
			});
			return;
		});
	}
	,createMixer: function(id,files) {
		return new Promise(function(res,rej) {
			Promise.all(files.map(function(f) {
				return audio_scorx_Loader.load(f);
			})).then(function(buffers) {
				return Promise.resolve(buffers.map(function(b) {
					return new audio_scorx_Channel(b.url,b.buffer);
				}));
			}).then(function(channels) {
				console.log("src/audio/scorx/MixerModel.hx:56:","all channels loaded!");
				var mixer = new audio_scorx_Mixer(channels);
				res(mixer);
				return;
			});
			return;
		});
	}
	,play: function(startTime) {
		if(startTime == null) {
			startTime = 0;
		}
		this.deltaTime = audio_Audio.instance.context.currentTime;
		console.log("src/audio/scorx/MixerModel.hx:66:","Delta:" + this.deltaTime);
		if(this.mixer != null) {
			this.mixer.stop();
			this.mixer.play(startTime);
			this.playing = true;
		}
	}
	,stop: function() {
		if(this.mixer != null) {
			this.mixer.stop();
		}
		this.playing = false;
	}
	,getDuration: function() {
		if(this.mixer != null) {
			return this.mixer.getDuration();
		} else {
			return 0;
		}
	}
	,setVolumeOfChannel: function(idx,volume) {
		this.volumes[idx] = volume;
		if(this.mixer != null) {
			this.mixer.setVolumeOfChannel(idx,volume);
		}
	}
	,setMasterVolume: function(volume) {
		this.masterVolume = volume;
		if(this.mixer != null) {
			this.mixer.setMasterVolume(volume);
		}
	}
	,getPosition: function() {
		if(this.mixer != null && this.playing) {
			return audio_Audio.instance.context.currentTime - this.deltaTime;
		} else {
			return 0;
		}
	}
	,__class__: audio_scorx_MixerModel
};
var client2_Client2 = function() {
	client2_SidewaysManager.instance.init();
	data_FirebaseModel.instance.init();
	client2_ContentManager.instance.init();
	client2_UserManager.instance.init();
	client2_UserManager.instance.startSession();
	client2_RoutesManager.instance.init();
	this.initUI();
	this.initBundledClasses();
};
$hxClasses["client2.Client2"] = client2_Client2;
client2_Client2.__name__ = ["client2","Client2"];
client2_Client2.main = function() {
	new client2_Client2();
};
client2_Client2.prototype = {
	initUI: function() {
		client2_Header.instance.init();
		client2_Footer.instance.init();
		client2_PageHome.instance.init();
		client2_PageBook.instance.init();
		client2_PageShelves.instance.init();
		client2_PageSearch.instance.init();
		client2_PageContent.instance.init();
	}
	,initBundledClasses: function() {
		haxe_Timer.delay(function() {
			return Require.module("ui_render_QSyntaxRenderer").then(function(id) {
				var _ = ui_render_QSyntaxRenderer = $s.ui_render_QSyntaxRenderer;
				return id;
			}).then(function(_1) {
				ui_StringRendererMapper.instance.set("score",new ui_render_QSyntaxRenderer());
				markdown_MithrilRendererCache.instance.clearCache();
				console.log("src/client2/Client2.hx:37:","QSyntaxRenderer loaded");
				m.redraw();
				return;
			});
		},2000);
	}
	,__class__: client2_Client2
};
var mithril_Mithril = function() { };
$hxClasses["mithril.Mithril"] = mithril_Mithril;
mithril_Mithril.__name__ = ["mithril","Mithril"];
var client2_Logo = function() {
};
$hxClasses["client2.Logo"] = client2_Logo;
client2_Logo.__name__ = ["client2","Logo"];
client2_Logo.__interfaces__ = [mithril_Mithril];
client2_Logo.prototype = {
	view: function() {
		if(arguments.length > 0 && arguments[0].tag != this) return arguments[0].tag.view.apply(arguments[0].tag, arguments);
		return [m.m("button",{ onclick : function(e) {
			client2_SidewaysManager.instance.init();
			return;
		}},"Sideways")];
	}
	,__class__: client2_Logo
};
var client2_ContentManager = function() {
};
$hxClasses["client2.ContentManager"] = client2_ContentManager;
client2_ContentManager.__name__ = ["client2","ContentManager"];
client2_ContentManager.prototype = {
	init: function() {
		this.set_content(data_ContentUtils.getContentInit());
	}
	,set_content: function(u) {
		var updatePaths = function(tree) {
			tree.path = "";
			Lambda.iter(tree.rooms,function(room) {
				room.path = tree.path + "/" + room.id;
				Lambda.iter(room.shelves,function(shelf) {
					shelf.path = room.path + "/" + shelf.id;
					Lambda.iter(shelf.books,function(book) {
						book.path = shelf.path + "/" + book.id;
						Lambda.iter(book.chapters,function(chapter) {
							chapter.path = book.path + "/" + chapter.id;
							Lambda.iter(chapter.subchapters,function(sub) {
								return sub.path = chapter.path + "/" + sub.id;
							});
							return;
						});
						return;
					});
					return;
				});
				return;
			});
		};
		var updateDbPaths = function(tree1) {
			tree1.dbpath = "content-tree";
			Lambda.iter(tree1.rooms,function(room1) {
				room1.dbpath = tree1.dbpath + "/rooms/" + tree1.rooms.indexOf(room1);
				Lambda.iter(room1.shelves,function(shelf1) {
					shelf1.dbpath = room1.dbpath + "/shelves/" + room1.shelves.indexOf(shelf1);
					Lambda.iter(shelf1.books,function(book1) {
						book1.dbpath = shelf1.dbpath + "/books/" + shelf1.books.indexOf(book1);
						Lambda.iter(book1.chapters,function(chapter1) {
							chapter1.dbpath = book1.dbpath + "/chapters/" + book1.chapters.indexOf(chapter1);
							Lambda.iter(chapter1.subchapters,function(sub1) {
								return sub1.dbpath = chapter1.dbpath + "/subchapters/" + chapter1.subchapters.indexOf(sub1);
							});
							return;
						});
						return;
					});
					return;
				});
				return;
			});
		};
		this.content = u;
		updatePaths(this.content);
		updateDbPaths(this.content);
		m.redraw();
		return u;
	}
	,__class__: client2_ContentManager
	,__properties__: {set_content:"set_content"}
};
var client2_FilterManager = function() {
};
$hxClasses["client2.FilterManager"] = client2_FilterManager;
client2_FilterManager.__name__ = ["client2","FilterManager"];
client2_FilterManager.prototype = {
	setFilterContent: function(ref) {
		this.filterContent = ref;
		client2_SidewaysManager.instance.setPageFromContentRef(ref);
		m.redraw();
	}
	,getRoom: function() {
		var _gthis = this;
		try {
			return client2_ContentManager.instance.content.rooms.filter(function(room) {
				return room.id == _gthis.filterContent.roomId;
			})[0];
		} catch( e ) {
			(e instanceof js__$Boot_HaxeError);
			return client2_ContentManager.instance.content.rooms[0];
		}
	}
	,getShelves: function() {
		var _gthis = this;
		try {
			var shelves = this.getRoom().shelves;
			if(this.filterContent != null && this.filterContent.shelfId != null) {
				shelves = shelves.filter(function(shelf) {
					return shelf.id == _gthis.filterContent.shelfId;
				});
			}
			return shelves;
		} catch( e ) {
			(e instanceof js__$Boot_HaxeError);
			return [];
		}
	}
	,getShelf: function() {
		var _gthis = this;
		try {
			return this.getRoom().shelves.filter(function(shelf) {
				return shelf.id == _gthis.filterContent.shelfId;
			})[0];
		} catch( e ) {
			(e instanceof js__$Boot_HaxeError);
			return null;
		}
	}
	,getBook: function() {
		var _gthis = this;
		try {
			return this.getShelf().books.filter(function(book) {
				return book.id == _gthis.filterContent.bookId;
			})[0];
		} catch( e ) {
			(e instanceof js__$Boot_HaxeError);
			return null;
		}
	}
	,getChapters: function() {
		try {
			return this.getBook().chapters;
		} catch( e ) {
			(e instanceof js__$Boot_HaxeError);
			return null;
		}
	}
	,getChapter: function() {
		var _gthis = this;
		try {
			if(this.filterContent.chapterId != null) {
				return this.getChapters().filter(function(chapter) {
					return chapter.id == _gthis.filterContent.chapterId;
				})[0];
			} else {
				return this.getChapters()[0];
			}
		} catch( e ) {
			(e instanceof js__$Boot_HaxeError);
			return null;
		}
	}
	,getSubchapters: function() {
		try {
			return this.getChapter().subchapters;
		} catch( e ) {
			(e instanceof js__$Boot_HaxeError);
			return null;
		}
	}
	,getSubchapter: function() {
		var _gthis = this;
		try {
			if(this.filterContent.subchapterId != null) {
				return this.getSubchapters().filter(function(sub) {
					return sub.id == _gthis.filterContent.subchapterId;
				})[0];
			} else {
				return this.getSubchapters()[0];
			}
		} catch( e ) {
			(e instanceof js__$Boot_HaxeError);
			return null;
		}
	}
	,__class__: client2_FilterManager
};
var client2_FilterTools = function() { };
$hxClasses["client2.FilterTools"] = client2_FilterTools;
client2_FilterTools.__name__ = ["client2","FilterTools"];
client2_FilterTools.getShelvesOfType = function(shelves,type) {
	return shelves.filter(function(shelf) {
		return shelf.type == type;
	});
};
client2_FilterTools.getShelvesExcludeType = function(shelves,type) {
	return shelves.filter(function(shelf) {
		return shelf.type != type;
	});
};
var client2_Footer = function() {
};
$hxClasses["client2.Footer"] = client2_Footer;
client2_Footer.__name__ = ["client2","Footer"];
client2_Footer.prototype = {
	init: function() {
		m.mount(window.document.querySelector("#buttons"),new client2_FooterView());
	}
	,__class__: client2_Footer
};
var client2_FooterView = function() {
};
$hxClasses["client2.FooterView"] = client2_FooterView;
client2_FooterView.__name__ = ["client2","FooterView"];
client2_FooterView.__interfaces__ = [mithril_Mithril];
client2_FooterView.prototype = {
	view: function() {
		if(arguments.length > 0 && arguments[0].tag != this) return arguments[0].tag.view.apply(arguments[0].tag, arguments);
		return [m.m("button",{ onclick : function(e) {
			return client2_SidewaysManager.instance.set_pageIdx(0);
		}},"Home"),m.m("button",{ onclick : function(e1) {
			return client2_SidewaysManager.instance.set_pageIdx(1);
		}},"Shelves"),m.m("button",{ onclick : function(e2) {
			return client2_SidewaysManager.instance.set_pageIdx(2);
		}},"Book"),m.m("button",{ onclick : function(e3) {
			return client2_SidewaysManager.instance.set_pageIdx(3);
		}},"Search")];
	}
	,__class__: client2_FooterView
};
var client2_Header = function() {
};
$hxClasses["client2.Header"] = client2_Header;
client2_Header.__name__ = ["client2","Header"];
client2_Header.prototype = {
	init: function() {
		m.mount(window.document.querySelector("#userinfo"),new client2_UserView());
	}
	,__class__: client2_Header
};
var client2_UserViewX = function() {
};
$hxClasses["client2.UserViewX"] = client2_UserViewX;
client2_UserViewX.__name__ = ["client2","UserViewX"];
client2_UserViewX.__interfaces__ = [mithril_Mithril];
client2_UserViewX.prototype = {
	view: function() {
		if(arguments.length > 0 && arguments[0].tag != this) return arguments[0].tag.view.apply(arguments[0].tag, arguments);
		return [m.m("div","Mitrhil UserView")];
	}
	,__class__: client2_UserViewX
};
var client2_UserView = function() {
	this.pass = "";
	this.email = "";
	this.email = "";
	this.pass = "";
};
$hxClasses["client2.UserView"] = client2_UserView;
client2_UserView.__name__ = ["client2","UserView"];
client2_UserView.__interfaces__ = [mithril_Mithril];
client2_UserView.prototype = {
	loginView: function() {
		var _gthis = this;
		try {
			return m.m("form",[m.m("input[type=input][placeholder='Email']",{ oninput : function(e) {
				return _gthis.email = e.target.value;
			}, value : this.email}),m.m("input[type=password][placeholder='Password']",{ oninput : function(e1) {
				return _gthis.pass = e1.target.value;
			}, value : this.pass}),m.m("button[type=button]",{ onclick : function(e2) {
				client2_UserManager.instance.signIn(_gthis.email,_gthis.pass);
				return;
			}},"Logga in")]);
		} catch( e3 ) {
			var e4 = (e3 instanceof js__$Boot_HaxeError) ? e3.val : e3;
			console.log("src/client2/Header.hx:63:","error " + Std.string(e4));
			return m.m("div.error",e4);
		}
	}
	,loggedinView: function() {
		try {
			var selectvalues = client2_ContentManager.instance.content.rooms.map(function(room) {
				return [room.id,"Gå till " + room.title];
			});
			selectvalues.push(["logout","Logga ut"]);
			selectvalues.unshift(["user",client2_UserManager.instance.get_user().firstname + " " + client2_UserManager.instance.get_user().lastname]);
			var tmp = selectvalues.map(function(kv) {
				return m.m("option",{ value : kv[0], key : kv[1]},kv[1]);
			});
			return m.m("form",[m.m("select.loggedin",{ onchange : function(e) {
				console.log("src/client2/Header.hx:82:",e.target.selectedIndex);
				console.log("src/client2/Header.hx:83:",e.target.value);
				switch(e.target.value) {
				case "logout":
					client2_UserManager.instance.signOut();
					break;
				case "user":
					break;
				default:
				}
				return e.target.selectedIndex = 0;
			}},tmp)]);
		} catch( e1 ) {
			var e2 = (e1 instanceof js__$Boot_HaxeError) ? e1.val : e1;
			console.log("src/client2/Header.hx:108:","error " + Std.string(e2));
			return m.m("div.error",e2);
		}
	}
	,userView: function() {
		try {
			switch(client2_UserManager.instance.userState._hx_index) {
			case 0:
				return m.m("div",[this.loginView()]);
			case 1:
				return m.m("div","Loading...");
			case 2:
				return m.m("div",[this.loggedinView()]);
			}
		} catch( e ) {
			var e1 = (e instanceof js__$Boot_HaxeError) ? e.val : e;
			console.log("src/client2/Header.hx:120:","error " + Std.string(e1));
			return m.m("div.error",e1);
		}
	}
	,view: function() {
		if(arguments.length > 0 && arguments[0].tag != this) return arguments[0].tag.view.apply(arguments[0].tag, arguments);
		return [this.userView()];
	}
	,__class__: client2_UserView
};
var client2_PageBook = function() {
};
$hxClasses["client2.PageBook"] = client2_PageBook;
client2_PageBook.__name__ = ["client2","PageBook"];
client2_PageBook.prototype = {
	init: function() {
		m.mount(window.document.querySelector("#bookleft"),new client2_BookTOC());
		m.mount(window.document.querySelector("#chaptercontent"),new client2_ChapterContent());
		m.mount(window.document.querySelector("#subchaptercontent"),new client2_SubchapterContent());
	}
	,__class__: client2_PageBook
};
var client2_BookView = function() {
};
$hxClasses["client2.BookView"] = client2_BookView;
client2_BookView.__name__ = ["client2","BookView"];
client2_BookView.__interfaces__ = [mithril_Mithril];
client2_BookView.prototype = {
	view: function() {
		if(arguments.length > 0 && arguments[0].tag != this) return arguments[0].tag.view.apply(arguments[0].tag, arguments);
		return [m.m("div","BookView")];
	}
	,__class__: client2_BookView
};
var client2_BookTOC = function() {
};
$hxClasses["client2.BookTOC"] = client2_BookTOC;
client2_BookTOC.__name__ = ["client2","BookTOC"];
client2_BookTOC.__interfaces__ = [mithril_Mithril];
client2_BookTOC.prototype = {
	view: function() {
		if(arguments.length > 0 && arguments[0].tag != this) return arguments[0].tag.view.apply(arguments[0].tag, arguments);
		try {
			return m.m("#booktoc",client2_FilterManager.instance.getBook().chapters.map(function(ch) {
				var selected = client2_FilterManager.instance.getChapter() == ch ? ".selected" : "";
				var href = "/content" + ch.path;
				return m.m("a.linkbutton" + selected,{ href : href, oncreate : mithril__$M_M_$Impl_$.routeLink},ch.title);
			}));
		} catch( e ) {
			return m.m("div","Error " + Std.string((e instanceof js__$Boot_HaxeError) ? e.val : e));
		}
	}
	,__class__: client2_BookTOC
};
var client2_ChapterTOC = function() {
};
$hxClasses["client2.ChapterTOC"] = client2_ChapterTOC;
client2_ChapterTOC.__name__ = ["client2","ChapterTOC"];
client2_ChapterTOC.__interfaces__ = [mithril_Mithril];
client2_ChapterTOC.prototype = {
	view: function() {
		if(arguments.length > 0 && arguments[0].tag != this) return arguments[0].tag.view.apply(arguments[0].tag, arguments);
		try {
			return m.m("#chaptertoc",client2_FilterManager.instance.getChapter().subchapters.map(function(sub) {
				var selected = client2_FilterManager.instance.getSubchapter() == sub ? ".selected" : "";
				var href = "/content" + sub.path;
				return m.m("a.linkbutton" + selected,{ href : href, oncreate : mithril__$M_M_$Impl_$.routeLink},sub.title);
			}));
		} catch( e ) {
			return m.m("div","Error " + Std.string((e instanceof js__$Boot_HaxeError) ? e.val : e));
		}
	}
	,__class__: client2_ChapterTOC
};
var client2_ChapterContent = function() {
};
$hxClasses["client2.ChapterContent"] = client2_ChapterContent;
client2_ChapterContent.__name__ = ["client2","ChapterContent"];
client2_ChapterContent.__interfaces__ = [mithril_Mithril];
client2_ChapterContent.prototype = {
	view: function() {
		if(arguments.length > 0 && arguments[0].tag != this) return arguments[0].tag.view.apply(arguments[0].tag, arguments);
		try {
			var chapter = client2_FilterManager.instance.getChapter();
			client2_ChapterTypeModel.instance.setChapter(chapter);
			var md = chapter.text;
			var id = chapter.path;
			return markdown_MithrilRendererCache.instance.markdownToView(id,md,[new markdown_inlineRenderer_QInlineSyntaxRenderer()]);
		} catch( e ) {
			return m.m("div","Error " + Std.string((e instanceof js__$Boot_HaxeError) ? e.val : e));
		}
	}
	,__class__: client2_ChapterContent
};
var client2_SubchapterContent = function() {
};
$hxClasses["client2.SubchapterContent"] = client2_SubchapterContent;
client2_SubchapterContent.__name__ = ["client2","SubchapterContent"];
client2_SubchapterContent.__interfaces__ = [mithril_Mithril];
client2_SubchapterContent.prototype = {
	view: function() {
		if(arguments.length > 0 && arguments[0].tag != this) return arguments[0].tag.view.apply(arguments[0].tag, arguments);
		try {
			var subchapter = client2_FilterManager.instance.getSubchapter();
			client2_SubchapterTypeModel.instance.setChapter(subchapter);
			var md = subchapter.text;
			var id = subchapter.path;
			return [new client2_ChapterTOC().view(),markdown_MithrilRendererCache.instance.markdownToView(id,md,[new markdown_inlineRenderer_QInlineSyntaxRenderer()])];
		} catch( e ) {
			return m.m("div","Error " + Std.string((e instanceof js__$Boot_HaxeError) ? e.val : e));
		}
	}
	,__class__: client2_SubchapterContent
};
var client2_TypeModel = function() {
	this.currentChapter = null;
};
$hxClasses["client2.TypeModel"] = client2_TypeModel;
client2_TypeModel.__name__ = ["client2","TypeModel"];
client2_TypeModel.prototype = {
	createUI: function(targetSelector,type) {
		var target = window.document.querySelector(targetSelector);
		target.textContent = this.currentChapter.title;
		switch(type == null ? null : js_Boot.getClass(type)) {
		case data_ScorxmixerChaptertype:
			var paths = type.paths;
			var el = window.document.createElement("div");
			var tmp = Std.string(paths);
			el.textContent = "Scorx " + tmp;
			var btnPlay = window.document.createElement("button");
			btnPlay.textContent = "Play";
			var btnStop = window.document.createElement("button");
			btnStop.textContent = "Stop";
			target.appendChild(btnPlay);
			target.appendChild(btnStop);
			target.appendChild(el);
			storage_StorageSource.instance.getUrls(paths).then(function(_urls) {
				var urls = _urls;
				console.log("src/client2/PageBook.hx:145:",urls);
				return audio_scorx_MixerModel.instance.createMixer("test",urls).then(function(_mixer) {
					var mixer = _mixer;
					el.textContent = "Mixer ready";
					btnPlay.onclick = function(e) {
						mixer.play();
						return;
					};
					return btnStop.onclick = function(e1) {
						mixer.stop();
						return;
					};
				});
			});
			break;
		case data_VideoChaptertype:
			var el1 = window.document.createElement("video");
			el1.src = "";
			el1.controls = true;
			el1.style.width = "100%";
			target.appendChild(el1);
			storage_StorageSource.instance.getUrl(type.url).then(function(url) {
				console.log("src/client2/PageBook.hx:125:",url);
				return el1.src = url;
			});
			break;
		default:
		}
	}
	,__class__: client2_TypeModel
};
var client2_ChapterTypeModel = function() {
	client2_TypeModel.call(this);
};
$hxClasses["client2.ChapterTypeModel"] = client2_ChapterTypeModel;
client2_ChapterTypeModel.__name__ = ["client2","ChapterTypeModel"];
client2_ChapterTypeModel.__super__ = client2_TypeModel;
client2_ChapterTypeModel.prototype = $extend(client2_TypeModel.prototype,{
	setChapter: function(chapter) {
		if(chapter == null) {
			return;
		}
		if(chapter == this.currentChapter) {
			return;
		}
		this.currentChapter = chapter;
		this.createUI("#chaptertype",this.currentChapter.type);
	}
	,__class__: client2_ChapterTypeModel
});
var client2_SubchapterTypeModel = function() {
	client2_TypeModel.call(this);
};
$hxClasses["client2.SubchapterTypeModel"] = client2_SubchapterTypeModel;
client2_SubchapterTypeModel.__name__ = ["client2","SubchapterTypeModel"];
client2_SubchapterTypeModel.__super__ = client2_TypeModel;
client2_SubchapterTypeModel.prototype = $extend(client2_TypeModel.prototype,{
	setChapter: function(chapter) {
		if(chapter == null) {
			return;
		}
		if(chapter == this.currentChapter) {
			return;
		}
		this.currentChapter = chapter;
		this.createUI("#subchaptertype",this.currentChapter.type);
	}
	,__class__: client2_SubchapterTypeModel
});
var client2_PageContent = function() {
};
$hxClasses["client2.PageContent"] = client2_PageContent;
client2_PageContent.__name__ = ["client2","PageContent"];
client2_PageContent.prototype = {
	init: function() {
		m.mount(window.document.querySelector("#page-content"),new client2_ContentView());
	}
	,__class__: client2_PageContent
};
var client2_ContentView = function() {
};
$hxClasses["client2.ContentView"] = client2_ContentView;
client2_ContentView.__name__ = ["client2","ContentView"];
client2_ContentView.__interfaces__ = [mithril_Mithril];
client2_ContentView.prototype = {
	view: function() {
		if(arguments.length > 0 && arguments[0].tag != this) return arguments[0].tag.view.apply(arguments[0].tag, arguments);
		return [new ui_content_ContentTreeView(client2_ContentManager.instance.content).view()];
	}
	,__class__: client2_ContentView
};
var client2_PageHome = function() {
};
$hxClasses["client2.PageHome"] = client2_PageHome;
client2_PageHome.__name__ = ["client2","PageHome"];
client2_PageHome.prototype = {
	init: function() {
		m.mount(window.document.querySelector("#page-home"),new client2_HomvView());
	}
	,__class__: client2_PageHome
};
var client2_HomvView = function() {
};
$hxClasses["client2.HomvView"] = client2_HomvView;
client2_HomvView.__name__ = ["client2","HomvView"];
client2_HomvView.__interfaces__ = [mithril_Mithril];
client2_HomvView.prototype = {
	shelvesView: function() {
		try {
			return [m.m("div.vsection.light",m.m("div.center.homeshelves",[m.m("header",m.m("h1","Innehåll")),client2_FilterManager.instance.getRoom().shelves.map(function(shelf) {
				return m.m("nav.homeshelfitem" + (shelf == client2_FilterManager.instance.getShelf() ? ".selected" : ""),m.m("a",{ href : "/content" + shelf.path, oncreate : mithril__$M_M_$Impl_$.routeLink},[m.m("img",{ src : "/assets/shelves/" + shelf.id + ".jpg"}),m.m("div.homeshelfitemtext",[m.m("h2",shelf.title),m.m("p",shelf.info)])]));
			})]))];
		} catch( e ) {
			(e instanceof js__$Boot_HaxeError);
			return m.m("h3.error","404 - can not show other shelves for room  " + Std.string(client2_FilterManager.instance.filterContent));
		}
	}
	,cellsView: function(s) {
		try {
			var header = s.title > "" ? m.m("header",m.m("h1",s.title)) : null;
			var copy = s.cells.slice();
			copy.sort(function(a,b) {
				return a.sort - b.sort;
			});
			return m.m("div.vsection.dark",m.m("div.center.homecells",[header,copy.map(function(c) {
				if((c == null ? null : js_Boot.getClass(c)) == data_VideoCell) {
					var c1 = c;
					var styles = { };
					if(c1.gridColumn > "") {
						styles["gridColumn"] = c1.gridColumn;
					}
					if(c1.gridRow > "") {
						styles["gridRow"] = c1.gridRow;
					}
					var tmp = m.m("video",{ src : c1.video, controls : true, style : { width : "100%", height : "100%", backgroundColor : "black"}});
					return m.m("article.homecell",{ style : styles},tmp);
				} else {
					var c2 = c;
					var styles1 = { };
					var aTag = c2.url > "" ? "a" : "div";
					var aHref = c2.url > "" ? { href : c2.url, oncreate : mithril__$M_M_$Impl_$.routeLink} : null;
					var image = c2.image > "" ? m.m("img",{ src : c2.image}) : null;
					if(c2.color > "") {
						styles1["color"] = c2.color;
					}
					if(c2.bgcolor > "") {
						styles1["backgroundColor"] = c2.bgcolor;
					}
					if(c2.bgimage > "") {
						styles1["backgroundImage"] = "url(\"" + c2.bgimage + "\")";
					}
					if(c2.gridColumn > "") {
						styles1["gridColumn"] = c2.gridColumn;
					}
					if(c2.gridRow > "") {
						styles1["gridRow"] = c2.gridRow;
					}
					var tmp1 = m.m(aTag,aHref,[image,markdown_MithrilTools.markdownToView(c2.text)]);
					return m.m("article.homecell",{ style : styles1},tmp1);
				}
			})]));
		} catch( e ) {
			var e1 = (e instanceof js__$Boot_HaxeError) ? e.val : e;
			console.log("src/client2/PageHome.hx:74:","error: " + Std.string(e1));
			return m.m("div.error","Error:" + Std.string(e1));
		}
	}
	,homeView: function() {
		var _gthis = this;
		try {
			var home = client2_FilterManager.instance.getRoom().home;
			if(home == null) {
				return this.shelvesView();
			}
			var copy = home.sections.slice();
			copy.sort(function(a,b) {
				return a.sort - b.sort;
			});
			return [copy.map(function(s) {
				switch(s == null ? null : js_Boot.getClass(s)) {
				case data_SectionCells:
					return _gthis.cellsView(s);
				case data_SectionShelves:
					return _gthis.shelvesView();
				default:
					return m.m("div","unknown shelf");
				}
			})];
		} catch( e ) {
			return m.m("section",m.m("div","Homeview error: " + Std.string((e instanceof js__$Boot_HaxeError) ? e.val : e)));
		}
	}
	,view: function() {
		if(arguments.length > 0 && arguments[0].tag != this) return arguments[0].tag.view.apply(arguments[0].tag, arguments);
		return [this.homeView()];
	}
	,__class__: client2_HomvView
};
var client2_PageSearch = function() {
};
$hxClasses["client2.PageSearch"] = client2_PageSearch;
client2_PageSearch.__name__ = ["client2","PageSearch"];
client2_PageSearch.prototype = {
	init: function() {
		m.mount(window.document.querySelector("#page-search"),new client2_SearchView());
	}
	,__class__: client2_PageSearch
};
var client2_SearchView = function() {
};
$hxClasses["client2.SearchView"] = client2_SearchView;
client2_SearchView.__name__ = ["client2","SearchView"];
client2_SearchView.__interfaces__ = [mithril_Mithril];
client2_SearchView.prototype = {
	view: function() {
		if(arguments.length > 0 && arguments[0].tag != this) return arguments[0].tag.view.apply(arguments[0].tag, arguments);
		return [m.m("div","SearchView"),new client2_UIFilters().view()];
	}
	,__class__: client2_SearchView
};
var client2_UIFilters = function() {
};
$hxClasses["client2.UIFilters"] = client2_UIFilters;
client2_UIFilters.__name__ = ["client2","UIFilters"];
client2_UIFilters.__interfaces__ = [mithril_Mithril];
client2_UIFilters.prototype = {
	view: function() {
		if(arguments.length > 0 && arguments[0].tag != this) return arguments[0].tag.view.apply(arguments[0].tag, arguments);
		var f = client2_FilterManager.instance.filterContent;
		var s = f != null ? "" + f.roomId + "/" + f.shelfId + "/" + f.bookId + "/" + f.chapterId + "/" + f.subchapterId : "null";
		var filterContentView = m.m("div","filter: " + s);
		return m.m(".border",[filterContentView,m.m("span","" + Std.string(client2_FilterManager.instance.getBook())),m.m("span","" + Std.string(client2_FilterManager.instance.getChapter())),m.m("span","" + Std.string(client2_FilterManager.instance.getSubchapter()))]);
	}
	,__class__: client2_UIFilters
};
var client2_PageShelves = function() {
};
$hxClasses["client2.PageShelves"] = client2_PageShelves;
client2_PageShelves.__name__ = ["client2","PageShelves"];
client2_PageShelves.prototype = {
	init: function() {
		m.mount(window.document.querySelector("#page-shelves"),new client2_ShelvesView());
	}
	,__class__: client2_PageShelves
};
var client2_ShelvesView = function() {
};
$hxClasses["client2.ShelvesView"] = client2_ShelvesView;
client2_ShelvesView.__name__ = ["client2","ShelvesView"];
client2_ShelvesView.__interfaces__ = [mithril_Mithril];
client2_ShelvesView.prototype = {
	view: function() {
		if(arguments.length > 0 && arguments[0].tag != this) return arguments[0].tag.view.apply(arguments[0].tag, arguments);
		var shelves = client2_FilterManager.instance.getShelves().map(function(shelf) {
			var books = shelf.books.map(function(book) {
				var selected = book == client2_FilterManager.instance.getBook() ? ".selected" : "";
				return m.m("nav" + selected,m.m("a",{ href : "/content" + book.path, oncreate : mithril__$M_M_$Impl_$.routeLink},[m.m("img",{ src : "/assets/books/" + book.id + ".jpg"}),m.m("div",book.title)]));
			});
			return m.m("section",[m.m("header",m.m("h1",shelf.title)),books]);
		});
		var view;
		try {
			view = m.m("div.shelves",[m.m("section",m.m("header",[m.m("a.btn",{ href : "/content" + client2_FilterManager.instance.getRoom().path, oncreate : mithril__$M_M_$Impl_$.routeLink},"<<"),m.m("a.btn",{ href : "/content" + client2_FilterManager.instance.getRoom().path + "/shelves", oncreate : mithril__$M_M_$Impl_$.routeLink},"Visa alla")])),shelves]);
		} catch( e ) {
			view = m.m("div","error " + Std.string((e instanceof js__$Boot_HaxeError) ? e.val : e));
		}
		return view;
	}
	,__class__: client2_ShelvesView
};
var client2_RoutesManager = function() {
	this.homeHandler = { onmatch : function(args,path) {
		try {
			data_ErrorsAndLogs.addLog("RouteResolver:" + path + ": " + Std.string(args) + "");
			client2_FilterManager.instance.setFilterContent(null);
		} catch( e ) {
			data_ErrorsAndLogs.addError("RouteResolver roomHandler Error: " + Std.string((e instanceof js__$Boot_HaxeError) ? e.val : e));
		}
		return null;
	}, render : function(vnode) {
		return m.m("div","homeHandler");
	}};
	this.shelvesHandler = { onmatch : function(args1,path1) {
		try {
			data_ErrorsAndLogs.addLog("RouteResolver:" + path1 + ": " + Std.string(args1) + "");
			client2_FilterManager.instance.setFilterContent(args1);
			client2_SidewaysManager.instance.set_pageIdx(1);
		} catch( e1 ) {
			data_ErrorsAndLogs.addError("RouteResolver roomHandler Error: " + Std.string((e1 instanceof js__$Boot_HaxeError) ? e1.val : e1));
		}
		return null;
	}, render : function(vnode1) {
		return m.m("div","homeHandler");
	}};
	this.contentHandler = { onmatch : function(args2,path2) {
		try {
			data_ErrorsAndLogs.addLog("RouteResolver:" + path2 + ": " + Std.string(args2) + "");
			client2_FilterManager.instance.setFilterContent(args2);
		} catch( e2 ) {
			data_ErrorsAndLogs.addError("RouteResolver roomHandler Error: " + Std.string((e2 instanceof js__$Boot_HaxeError) ? e2.val : e2));
		}
		return null;
	}, render : function(vnode2) {
		return m.m("div","homeHandler");
	}};
};
$hxClasses["client2.RoutesManager"] = client2_RoutesManager;
client2_RoutesManager.__name__ = ["client2","RoutesManager"];
client2_RoutesManager.prototype = {
	init: function() {
		var routes = { "/" : this.homeHandler, "/content/:roomId" : this.contentHandler, "/content/:roomId/shelves" : this.shelvesHandler, "/content/:roomId/:shelfId" : this.contentHandler, "/content/:roomId/:shelfId/:bookId" : this.contentHandler, "/content/:roomId/:shelfId/:bookId/:chapterId" : this.contentHandler, "/content/:roomId/:shelfId/:bookId/:chapterId/:subchapterId" : this.contentHandler};
		m.route(window.document.querySelector("#routes"),"/",routes);
	}
	,__class__: client2_RoutesManager
};
var client2_SidewaysManager = function() {
	this.inited = false;
	this.pageIdx = 0;
	this._sideways = sideways;
};
$hxClasses["client2.SidewaysManager"] = client2_SidewaysManager;
client2_SidewaysManager.__name__ = ["client2","SidewaysManager"];
client2_SidewaysManager.prototype = {
	set_pageIdx: function(val) {
		if(!this.inited) {
			return val;
		}
		console.log("src/client2/SidewaysManager.hx:20:","SET PG IDX " + val);
		val = Math.min(3,val);
		this.pageIdx = val;
		this.moveToPage(this.pageIdx);
		m.redraw();
		return this.pageIdx;
	}
	,setPageFromContentRef: function(ref) {
		var pageIndex = 0;
		if(ref.subchapterId != null) {
			pageIndex = 2;
		} else if(ref.chapterId != null) {
			pageIndex = 2;
		} else if(ref.bookId != null) {
			pageIndex = 2;
		} else if(ref.shelfId != null) {
			pageIndex = 1;
		} else if(ref.roomId != null) {
			pageIndex = 0;
		}
		this.set_pageIdx(pageIndex);
	}
	,init: function() {
		this._sideways.init(0);
		this.inited = true;
	}
	,moveToPage: function(pageNr) {
		this._sideways.moveToPage2(pageNr);
	}
	,__class__: client2_SidewaysManager
	,__properties__: {set_pageIdx:"set_pageIdx"}
};
var client2_UserManager = function() {
	this.userState = client2_UserMode.Anonymous;
};
$hxClasses["client2.UserManager"] = client2_UserManager;
client2_UserManager.__name__ = ["client2","UserManager"];
client2_UserManager.prototype = {
	get_user: function() {
		return client2__$UserManager_UserState_$Impl_$.toData(this.userState);
	}
	,set_userState: function(state) {
		this.userState = state;
		m.redraw();
		return this.userState;
	}
	,init: function() {
		this.set_userState(client2_UserMode.Anonymous);
		console.log("src/client2/UserManager.hx:40:",this.get_user());
	}
	,getCurrentBrowserUser: function() {
		return new Promise(function(resolve,reject) {
			var unsubscribe = null;
			unsubscribe = firebase.app().auth().onAuthStateChanged(function(user) {
				unsubscribe();
				resolve(user);
				return;
			},reject);
			return unsubscribe;
		});
	}
	,startSession: function() {
		var _gthis = this;
		this.set_userState(client2_UserMode.Loading);
		return this.getCurrentBrowserUser().then(function(browserUser) {
			if(browserUser == null) {
				_gthis.set_userState(client2_UserMode.Anonymous);
				return null;
			}
			console.log("src/client2/UserManager.hx:63:","Browser user found");
			return data_ApiCalls.getAuthRequest("/api/userconfig");
		}).then(function(dataResponse) {
			console.log("src/client2/UserManager.hx:66:",dataResponse);
			if(dataResponse == null) {
				return;
			}
			var tmp = client2_UserMode.User(dataclass_JsonConverter.fromJson(data_UserData,dataResponse.userData));
			_gthis.set_userState(tmp);
			console.log("src/client2/UserManager.hx:72:","------------------------------------");
			console.log("src/client2/UserManager.hx:73:","UserModelLoaded");
			return;
		}).then(function(val) {
			return _gthis.setupOnAuthChange();
		}).then(function(val1) {
			console.log("src/client2/UserManager.hx:77:","finished User loading!");
			return Promise.resolve(true);
		});
	}
	,setupOnAuthChange: function() {
		var _gthis = this;
		haxe_Timer.delay(function() {
			return firebase.app().auth().onAuthStateChanged(function(user) {
				if(user != null) {
					console.log("src/client2/UserManager.hx:86:","--- Browser session user found.");
					console.log("src/client2/UserManager.hx:88:","compare:" + user.email + " " + client2__$UserManager_UserState_$Impl_$.toData(_gthis.userState).email);
					var address = user.email;
					if(!utils__$UserEmail_UserEmail_$Impl_$.isValid(address)) {
						throw new js__$Boot_HaxeError("EmailAddress \"" + address + "\" is invalid");
					}
					if(address.toLowerCase() == client2__$UserManager_UserState_$Impl_$.toData(_gthis.userState).email) {
						return;
					}
					_gthis.set_userState(client2_UserMode.Loading);
					data_ApiCalls.getAuthRequest("/api/userconfig").then(function(dataResponse) {
						console.log("src/client2/UserManager.hx:96:","------------------------------------");
						console.log("src/client2/UserManager.hx:97:","UserModelLoaded : onAuthStateChanged");
						console.log("src/client2/UserManager.hx:98:","" + Std.string(dataResponse));
						var tmp = client2_UserMode.User(dataclass_JsonConverter.fromJson(data_UserData,dataResponse.userData));
						return _gthis.set_userState(tmp);
					})["catch"](function(error) {
						console.log("src/client2/UserManager.hx:102:","--- Could not load userconfig for browser session user");
						console.log("src/client2/UserManager.hx:103:",error);
						return;
					});
					return;
				} else {
					console.log("src/client2/UserManager.hx:108:","--- No browser session user found.");
					_gthis.set_userState(client2_UserMode.Anonymous);
					return;
				}
			},function(error1) {
				console.log("src/client2/UserManager.hx:113:","--- Error: " + Std.string(error1));
				return _gthis.set_userState(client2_UserMode.Anonymous);
			});
		},2000);
		return Promise.resolve(true);
	}
	,signIn: function(email,password) {
		var _gthis = this;
		this.validate(email,password).then(function(valid) {
			_gthis.set_userState(client2_UserMode.Loading);
			return firebase.auth().signInWithEmailAndPassword(email,password);
		}).then(function(user) {
			console.log("src/client2/UserManager.hx:127:","USER " + user);
			return null;
		})["catch"](function(error) {
			console.log("src/client2/UserManager.hx:130:","ERROR" + error);
			console.log("src/client2/UserManager.hx:131:","error:" + error);
			_gthis.set_userState(client2_UserMode.Anonymous);
			return;
		});
	}
	,signOut: function() {
		firebase.auth().signOut();
		this.set_userState(client2_UserMode.Anonymous);
	}
	,validate: function(email,password) {
		return new Promise(function(res,rej) {
			try {
				if(!utils__$UserEmail_UserEmail_$Impl_$.isValid(email)) {
					throw new js__$Boot_HaxeError("User email is not valid: " + email);
				}
				if(!utils__$UserPassword_UserPassword_$Impl_$.isValid(password)) {
					throw new js__$Boot_HaxeError("User password is not valid: " + password);
				}
				res(true);
			} catch( e ) {
				rej((e instanceof js__$Boot_HaxeError) ? e.val : e);
			}
			return;
		});
	}
	,__class__: client2_UserManager
	,__properties__: {set_userState:"set_userState",get_user:"get_user"}
};
var client2__$UserManager_UserState_$Impl_$ = {};
$hxClasses["client2._UserManager.UserState_Impl_"] = client2__$UserManager_UserState_$Impl_$;
client2__$UserManager_UserState_$Impl_$.__name__ = ["client2","_UserManager","UserState_Impl_"];
client2__$UserManager_UserState_$Impl_$._new = function(mode) {
	return mode;
};
client2__$UserManager_UserState_$Impl_$.toData = function(this1) {
	switch(this1._hx_index) {
	case 0:
		return { userData : { firstname : "Anonymous", lastname : "Anonymousson", email : "anon@anon.abc", domains : ["domain1"], access : 0}, userConfig : { domain : "domain1"}};
	case 1:
		return { userData : { firstname : "Anonymous", lastname : "Anonymousson", email : "anon@anon.abc", domains : ["domain1"], access : 0}, userConfig : { domain : "domain1"}};
	case 2:
		return this1.user;
	}
};
client2__$UserManager_UserState_$Impl_$.fromData = function(val) {
	return client2_UserMode.User(val);
};
client2__$UserManager_UserState_$Impl_$.anonymousUser = function() {
	return { userData : { firstname : "Anonymous", lastname : "Anonymousson", email : "anon@anon.abc", domains : ["domain1"], access : 0}, userConfig : { domain : "domain1"}};
};
var client2_UserMode = $hxEnums["client2.UserMode"] = { __ename__ : true, __constructs__ : ["Anonymous","Loading","User"]
	,Anonymous: {_hx_index:0,__enum__:"client2.UserMode",toString:$estr}
	,Loading: {_hx_index:1,__enum__:"client2.UserMode",toString:$estr}
	,User: ($_=function(user) { return {_hx_index:2,user:user,__enum__:"client2.UserMode",toString:$estr}; },$_.__params__ = ["user"],$_)
};
var cx_ArrayTools = function() { };
$hxClasses["cx.ArrayTools"] = cx_ArrayTools;
cx_ArrayTools.__name__ = ["cx","ArrayTools"];
cx_ArrayTools.sortA = function(a,fn) {
	var copy = a.slice();
	copy.sort(fn);
	return copy;
};
cx_ArrayTools.str = function(a) {
	return Std.string(a);
};
cx_ArrayTools.next = function(a,item) {
	var idx = a.indexOf(item);
	if(idx == -1) {
		return null;
	}
	if(idx == a.length - 1) {
		return null;
	}
	return a[idx + 1];
};
cx_ArrayTools.prev = function(a,item) {
	var idx = a.indexOf(item);
	if(idx <= 0) {
		return null;
	}
	return a[idx - 1];
};
cx_ArrayTools.reverse = function(a) {
	var result = [];
	var _g = 0;
	while(_g < a.length) result.unshift(a[_g++]);
	return result;
};
cx_ArrayTools.copyUntil = function(a,f) {
	var result = [];
	var _g = 0;
	while(_g < a.length) {
		var item = a[_g];
		++_g;
		if(f(item)) {
			break;
		}
		result.push(item);
	}
	return result;
};
cx_ArrayTools.copyUntilIncluding = function(a,f) {
	var result = [];
	var _g = 0;
	while(_g < a.length) {
		var item = a[_g];
		++_g;
		result.push(item);
		if(f(item)) {
			break;
		}
	}
	return result;
};
cx_ArrayTools.has = function(a,item) {
	return a.indexOf(item) != -1;
};
cx_ArrayTools.nextOrNull = function(a,item) {
	var idx = a.indexOf(item) + 1;
	if(a == null) {
		return null;
	} else if(idx < 0 || idx > a.length - 1) {
		return null;
	} else {
		return a[idx];
	}
};
cx_ArrayTools.indexOrNull = function(a,idx) {
	if(a == null) {
		return null;
	}
	if(idx < 0 || idx > a.length - 1) {
		return null;
	} else {
		return a[idx];
	}
};
cx_ArrayTools.nullOrEmpty = function(a) {
	if(a != null) {
		return a.length == 0;
	} else {
		return true;
	}
};
cx_ArrayTools.indexOrValue = function(a,idx,fallbackValue) {
	if((a == null ? null : idx < 0 || idx > a.length - 1 ? null : a[idx]) != null) {
		return a[idx];
	} else {
		return fallbackValue;
	}
};
cx_ArrayTools.equals = function(a,b) {
	return a.toString() == b.toString();
};
cx_ArrayTools.unique = function(arr) {
	var result = [];
	var _g = 0;
	while(_g < arr.length) {
		var item = arr[_g];
		++_g;
		if(!Lambda.has(result,item)) {
			result.push(item);
		}
	}
	result.sort(function(a,b) {
		return Reflect.compare(a,b);
	});
	return result;
};
cx_ArrayTools.fromIterator = function(it) {
	var result = [];
	while(it.hasNext()) result.push(it.next());
	return result;
};
cx_ArrayTools.fromIterables = function(it) {
	return cx_ArrayTools.fromIterator($getIterator(it));
};
cx_ArrayTools.fromHashKeys = function(it) {
	return cx_ArrayTools.fromIterator(it);
};
cx_ArrayTools.allNull = function(it) {
	var _g = 0;
	while(_g < it.length) if(it[_g++] != null) {
		return false;
	}
	return true;
};
cx_ArrayTools.doOverlap = function(array1,array2) {
	var _g = 0;
	while(_g < array1.length) if(Lambda.has(array2,array1[_g++])) {
		return true;
	}
	return false;
};
cx_ArrayTools.overlap = function(array1,array2) {
	return Lambda.array(array1.filter(function(value1) {
		return Lambda.has(array2,value1);
	}));
};
cx_ArrayTools.diff = function(array1,array2) {
	var result = [];
	var _g = 0;
	while(_g < array1.length) {
		var item = array1[_g];
		++_g;
		if(!Lambda.has(array2,item)) {
			result.push(item);
		}
	}
	var _g1 = 0;
	while(_g1 < array2.length) {
		var item1 = array2[_g1];
		++_g1;
		if(!Lambda.has(array1,item1)) {
			result.push(item1);
		}
	}
	return result;
};
cx_ArrayTools.hasNot = function(array1,array2) {
	var result = [];
	var _g = 0;
	while(_g < array2.length) {
		var item = array2[_g];
		++_g;
		if(!Lambda.has(array1,item)) {
			result.push(item);
		}
	}
	return result;
};
cx_ArrayTools.hasOtherThan = function(array1,array2) {
	var _g = 0;
	while(_g < array2.length) if(!Lambda.has(array1,array2[_g++])) {
		return true;
	}
	return false;
};
cx_ArrayTools.first = function(array) {
	return array[0];
};
cx_ArrayTools.isFirst = function(array,item) {
	return array[0] == item;
};
cx_ArrayTools.last = function(array) {
	return array[array.length - 1];
};
cx_ArrayTools.isLast = function(array,item) {
	return array[array.length - 1] == item;
};
cx_ArrayTools.secondLast = function(array) {
	return array[array.length - 2];
};
cx_ArrayTools.index = function(array,item) {
	return Lambda.indexOf(array,item);
};
cx_ArrayTools.second = function(array) {
	return array[1];
};
cx_ArrayTools.third = function(array) {
	return array[2];
};
cx_ArrayTools.fourth = function(array) {
	return array[3];
};
cx_ArrayTools.fifth = function(array) {
	return array[4];
};
cx_ArrayTools.sixth = function(array) {
	return array[5];
};
cx_ArrayTools.seventh = function(array) {
	return array[6];
};
cx_ArrayTools.eighth = function(array) {
	return array[7];
};
cx_ArrayTools.nineth = function(array) {
	return array[8];
};
cx_ArrayTools.shuffle = function(a) {
	var t = cx_ArrayTools.range(a.length);
	var arr = [];
	while(t.length > 0) {
		var pos = Std.random(t.length);
		var index = t[pos];
		t.splice(pos,1);
		arr.push(a[index]);
	}
	return arr;
};
cx_ArrayTools.countItem = function(a,item) {
	var cnt = 0;
	var _g = 0;
	while(_g < a.length) if(a[_g++] == item) {
		++cnt;
	}
	return cnt;
};
cx_ArrayTools.sorta = function(a) {
	a.sort(function(a1,b) {
		return Reflect.compare(a1,b);
	});
	return a;
};
cx_ArrayTools.range = function(start,stop,step) {
	if(step == null) {
		step = 1;
	}
	if(null == stop) {
		stop = start;
		start = 0;
	}
	if((stop - start) / step == Infinity) {
		throw new js__$Boot_HaxeError("infinite range");
	}
	var range = [];
	var i = -1;
	var j;
	if(step < 0) {
		while(true) {
			j = start + step * ++i;
			if(!(j > stop)) {
				break;
			}
			range.push(j);
		}
	} else {
		while(true) {
			j = start + step * ++i;
			if(!(j < stop)) {
				break;
			}
			range.push(j);
		}
	}
	return range;
};
cx_ArrayTools.intsMin = function(a) {
	var r = a[0];
	var _g = 0;
	while(_g < a.length) {
		var v = a[_g];
		++_g;
		if(v < r) {
			r = v;
		}
	}
	return r;
};
cx_ArrayTools.trimStrings = function(a) {
	return a.map(function(s) {
		return StringTools.trim(s);
	});
};
cx_ArrayTools.cleaveL = function(a,f) {
	var l = [];
	var r = a.slice();
	var _g = 0;
	while(_g < a.length) {
		var a1 = a[_g];
		++_g;
		l.push(a1);
		r.shift();
		if(f(a1)) {
			break;
		}
	}
	return { left : l, right : r};
};
cx_ArrayTools.cleaveR = function(a,f) {
	var l = [];
	var r = a.slice();
	var _g = 0;
	while(_g < a.length) {
		var a1 = a[_g];
		++_g;
		if(f(a1)) {
			break;
		}
		l.push(a1);
		r.shift();
	}
	return { left : l, right : r};
};
var cx_Cache = function(maxItems) {
	if(maxItems == null) {
		maxItems = 3;
	}
	this.cache = new haxe_ds_StringMap();
	this.prio = [];
	this.max = maxItems;
};
$hxClasses["cx.Cache"] = cx_Cache;
cx_Cache.__name__ = ["cx","Cache"];
cx_Cache.prototype = {
	set: function(key,value) {
		var _this = this.cache;
		if(__map_reserved[key] != null) {
			_this.setReserved(key,value);
		} else {
			_this.h[key] = value;
		}
		this.prio.push(key);
		while(this.prio.length > this.max) this.cache.remove(this.prio.shift());
	}
	,get: function(key) {
		var _this = this.cache;
		if(!(__map_reserved[key] != null ? _this.existsReserved(key) : _this.h.hasOwnProperty(key))) {
			return null;
		}
		var array = this.prio;
		if(array[array.length - 1] != key) {
			HxOverrides.remove(this.prio,key);
			this.prio.push(key);
		}
		var _this1 = this.cache;
		if(__map_reserved[key] != null) {
			return _this1.getReserved(key);
		} else {
			return _this1.h[key];
		}
	}
	,__class__: cx_Cache
};
var cx_CacheSingle = function() {
	this.cache = null;
	this.key = null;
};
$hxClasses["cx.CacheSingle"] = cx_CacheSingle;
cx_CacheSingle.__name__ = ["cx","CacheSingle"];
cx_CacheSingle.prototype = {
	set: function(key,value) {
		if(key != this.key) {
			this.cache = value;
		}
	}
	,get: function(key) {
		if(this.key == key) {
			return this.cache;
		} else {
			return null;
		}
	}
	,__class__: cx_CacheSingle
};
var cx_EnumTools = function() { };
$hxClasses["cx.EnumTools"] = cx_EnumTools;
cx_EnumTools.__name__ = ["cx","EnumTools"];
cx_EnumTools.createFromString = function(e,str) {
	try {
		var type = str;
		var params = [];
		if(str.indexOf("(") > -1) {
			var parIdx = str.indexOf("(");
			type = HxOverrides.substr(str,0,parIdx);
			params = StringTools.replace(StringTools.replace(HxOverrides.substr(str,parIdx,null),"(",""),")","").split(",");
		}
		return Type.createEnum(e,type,params);
	} catch( e1 ) {
	}
	return null;
};
var cx_GUID = function() { };
$hxClasses["cx.GUID"] = cx_GUID;
cx_GUID.__name__ = ["cx","GUID"];
cx_GUID.create = function() {
	var chars = cx_GUID.CHARS;
	var uuid = [];
	var rnd = 0;
	var r;
	var _g = 0;
	while(_g < 36) {
		var i = _g++;
		if(i == 8 || i == 13 || i == 18 || i == 23) {
			uuid[i] = "-";
		} else if(i == 14) {
			uuid[i] = "4";
		} else {
			if(rnd <= 2) {
				rnd = 33554432 + Std.parseInt(Std.string(Math.random() * parseFloat("16777216"))) | 0;
			}
			r = rnd & 15;
			rnd >>= 4;
			uuid[i] = chars[i == 19 ? r & 3 | 8 : r];
		}
	}
	return uuid.join("");
};
var cx_Lorem = function() { };
$hxClasses["cx.Lorem"] = cx_Lorem;
cx_Lorem.__name__ = ["cx","Lorem"];
cx_Lorem.getHeadlineIdx = function() {
	return cx_Lorem.headlineIdx++ % cx_Lorem.headlines.length;
};
cx_Lorem.getLoremIdx = function() {
	return cx_Lorem.loremIdx++ % cx_Lorem.lorem.length;
};
cx_Lorem.getNewline = function() {
	return "\r" + "\r";
};
cx_Lorem.getNextChapter = function() {
	var result = "";
	result = "" + ("#" + cx_Lorem.headlines[cx_Lorem.getHeadlineIdx()]);
	result += cx_Lorem.getNewline();
	result += cx_Lorem.lorem[cx_Lorem.getLoremIdx()];
	result += cx_Lorem.getNewline();
	result += "##" + cx_Lorem.headlines[cx_Lorem.getHeadlineIdx()];
	result += cx_Lorem.getNewline();
	result += cx_Lorem.lorem[cx_Lorem.getLoremIdx()];
	return result;
};
cx_Lorem.getParagraphs = function(nrOfParagraphs) {
	if(nrOfParagraphs == null) {
		nrOfParagraphs = 3;
	}
	nrOfParagraphs = Math.min(nrOfParagraphs,cx_Lorem.lorem.length);
	return cx_Lorem.lorem.slice(0,nrOfParagraphs).join("\r" + "\r");
};
cx_Lorem.getMarkdownParagraphs = function(nrOfParagraphs) {
	if(nrOfParagraphs == null) {
		nrOfParagraphs = 3;
	}
	nrOfParagraphs = Math.min(nrOfParagraphs,cx_Lorem.lorem.length);
	var ret = [];
	var _g1 = 0;
	var _g = nrOfParagraphs;
	while(_g1 < _g) {
		var i = _g1++;
		ret.push(cx_Lorem.headlines[i]);
		ret.push(cx_Lorem.lorem[i]);
	}
	return ret.join("\r" + "\r");
};
var cx_MapTools = function() { };
$hxClasses["cx.MapTools"] = cx_MapTools;
cx_MapTools.__name__ = ["cx","MapTools"];
cx_MapTools.keysToArray = function(it) {
	var result = [];
	while(it.hasNext()) result.push(it.next());
	return result;
};
cx_MapTools.sortarray = function(a) {
	a.sort(function(a1,b) {
		return Reflect.compare(a1,b);
	});
	return a;
};
var cx_MathTools = function() { };
$hxClasses["cx.MathTools"] = cx_MathTools;
cx_MathTools.__name__ = ["cx","MathTools"];
cx_MathTools.rotate = function(x,y,angleDegrees) {
	var angleRadians = angleDegrees * cx_MathTools.PI2Over360;
	var s = Math.sin(angleRadians);
	if(Math.abs(s) <= 0.0000000000009) {
		s = 0;
	}
	var c = Math.cos(angleRadians);
	return { x : x * c - y * s, y : x * s + y * c};
};
cx_MathTools.round2 = function(number,precision) {
	if(precision == null) {
		precision = 6;
	}
	number *= Math.pow(10,precision);
	number = Math.round(number) / Math.pow(10,precision);
	return number;
};
cx_MathTools.floatEquals = function(a,b) {
	return Math.abs(a - b) <= 0.0000000000009;
};
cx_MathTools.intClamp = function(val,min,max) {
	if(val < min) {
		return min;
	} else if(val > max) {
		return max;
	} else {
		return val;
	}
};
var cx_StrTools = function() { };
$hxClasses["cx.StrTools"] = cx_StrTools;
cx_StrTools.__name__ = ["cx","StrTools"];
cx_StrTools.slug = function(str,allowDash) {
	if(allowDash == null) {
		allowDash = true;
	}
	if(str == null) {
		return null;
	}
	str = str.toLowerCase();
	var _g1 = 0;
	var _g = "åàáäâèéëêìíïîòóöôùúüûñç·/_,:;".length;
	while(_g1 < _g) {
		var i = _g1++;
		str = StringTools.replace(str,"åàáäâèéëêìíïîòóöôùúüûñç·/_,:;".charAt(i),"aaaaaeeeeiiiioooouuuunc------".charAt(i));
	}
	var _this_r = new RegExp("[^a-z0-9 -]","g".split("u").join(""));
	str = str.replace(_this_r,"");
	str = StringTools.trim(str);
	var _this_r1 = new RegExp("\\s+","g".split("u").join(""));
	str = str.replace(_this_r1,"-");
	var _this_r2 = new RegExp("-+","g".split("u").join(""));
	str = str.replace(_this_r2,"-");
	if(!allowDash) {
		str = str.split("-").join("");
	}
	return str;
};
cx_StrTools.replaceAll = function(str,search,replace) {
	str = str.split(search).join(replace);
	return str;
};
cx_StrTools.splitTrim = function(str,delimiter) {
	if(delimiter == null) {
		delimiter = ",";
	}
	return str.split(delimiter).map(function(segment) {
		return StringTools.trim(segment);
	});
};
cx_StrTools.trimChar = function(str,char) {
	if(StringTools.startsWith(str,char)) {
		str = HxOverrides.substr(str,char.length,null);
	}
	if(StringTools.endsWith(str,char)) {
		str = HxOverrides.substr(str,0,str.length - char.length);
	}
	return str;
};
cx_StrTools.has = function(str,needle) {
	return str.indexOf(needle) > -1;
};
cx_StrTools.hasAny = function(str,needles) {
	Lambda.iter(needles,function(n) {
		if(str.indexOf(n) > -1) {
			return true;
		} else {
			return null;
		}
	});
	return false;
};
cx_StrTools.removeDoubleBlanks = function(s,blanks) {
	if(blanks == null) {
		blanks = "  ";
	}
	var remove = function(s1) {
		return StringTools.replace(s1,"  "," ");
	};
	var s2 = remove(s);
	while(s2 != s) {
		s2 = s;
		s = remove(s);
	}
	return s2;
};
cx_StrTools.upperCaseFirst = function(str) {
	return HxOverrides.substr(str,0,1).toUpperCase() + HxOverrides.substr(str,1,null);
};
cx_StrTools.after = function(str,needle,until) {
	if(until == null) {
		until = "";
	}
	return str.substring(str.indexOf(needle) + needle.length,until != "" ? str.indexOf(until) > str.indexOf(needle) ? str.indexOf(until) : null : null);
};
cx_StrTools.__super__ = StringTools;
cx_StrTools.prototype = $extend(StringTools.prototype,{
	__class__: cx_StrTools
});
var data_ApiCalls = function() { };
$hxClasses["data.ApiCalls"] = data_ApiCalls;
data_ApiCalls.__name__ = ["data","ApiCalls"];
data_ApiCalls.getAuthRequest = function(url) {
	return data_ApiCalls.getFBUserToken().then(function(token) {
		var request = { method : "get", url : url, headers : { authorization : "Bearer " + token}};
		data_ErrorsAndLogs.addLog("AuthRequest: " + url);
		return m.request(request);
	});
};
data_ApiCalls.getRequest = function(url) {
	data_ErrorsAndLogs.addLog("Request: " + url);
	return m.request({ method : "get", url : url});
};
data_ApiCalls.getFBCurrentUser = function() {
	return firebase.auth().currentUser;
};
data_ApiCalls.getFBUserToken = function() {
	if(data_ApiCalls.getFBCurrentUser() != null) {
		return data_ApiCalls.getFBCurrentUser().getIdToken();
	} else {
		return new Promise(function(res,rej) {
			rej("Firebase.auth().currentUser == null");
			return;
		});
	}
};
var data_ClassMap = function() {
	this.map = new haxe_ds_StringMap();
};
$hxClasses["data.ClassMap"] = data_ClassMap;
data_ClassMap.__name__ = ["data","ClassMap"];
data_ClassMap.prototype = {
	getNew: function(cls,args) {
		var _this = this.map;
		return Type.createInstance(__map_reserved[cls] != null ? _this.getReserved(cls) : _this.h[cls],args);
	}
	,getNewWithFallback: function(cls,args,fallback) {
		var _this = this.map;
		if(__map_reserved[cls] != null ? _this.existsReserved(cls) : _this.h.hasOwnProperty(cls)) {
			var _this1 = this.map;
			return Type.createInstance(__map_reserved[cls] != null ? _this1.getReserved(cls) : _this1.h[cls],args);
		}
		return Type.createInstance(fallback,args);
	}
	,set: function(name,cls) {
		var _this = this.map;
		if(__map_reserved[name] != null) {
			_this.setReserved(name,cls);
		} else {
			_this.h[name] = cls;
		}
	}
	,exists: function(name) {
		var _this = this.map;
		if(__map_reserved[name] != null) {
			return _this.existsReserved(name);
		} else {
			return _this.h.hasOwnProperty(name);
		}
	}
	,__class__: data_ClassMap
};
var data_UserData = function(data1) {
	this.access = 1;
	this.domains = ["kak"];
	this.set_firstname(data1.firstname);
	this.set_lastname(data1.lastname);
	this.set_email(data1.email);
	if(Object.prototype.hasOwnProperty.call(data1,"domains")) {
		this.set_domains(data1.domains);
	}
	if(Object.prototype.hasOwnProperty.call(data1,"access")) {
		this.set_access(data1.access);
	}
};
$hxClasses["data.UserData"] = data_UserData;
data_UserData.__name__ = ["data","UserData"];
data_UserData.__interfaces__ = [DataClass];
data_UserData.validate = function(data1) {
	var output = [];
	if(!Object.prototype.hasOwnProperty.call(data1,"firstname")) {
		output.push("firstname");
	} else if(data1.firstname == null) {
		output.push("firstname");
	}
	if(!Object.prototype.hasOwnProperty.call(data1,"lastname")) {
		output.push("lastname");
	} else if(data1.lastname == null) {
		output.push("lastname");
	}
	if(!Object.prototype.hasOwnProperty.call(data1,"email")) {
		output.push("email");
	} else if(data1.email == null) {
		output.push("email");
	}
	return output;
};
data_UserData.prototype = {
	set_firstname: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for UserData.firstname.");
		}
		return this.firstname = v;
	}
	,set_lastname: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for UserData.lastname.");
		}
		return this.lastname = v;
	}
	,set_email: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for UserData.email.");
		}
		return this.email = v;
	}
	,set_domains: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for UserData.domains.");
		}
		return this.domains = v;
	}
	,set_access: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for UserData.access.");
		}
		return this.access = v;
	}
	,__class__: data_UserData
	,__properties__: {set_access:"set_access",set_domains:"set_domains",set_email:"set_email",set_lastname:"set_lastname",set_firstname:"set_firstname"}
};
var data_UserConfig = function(data1) {
	this.domain = "";
	if(data1 != null) {
		if(Object.prototype.hasOwnProperty.call(data1,"domain")) {
			this.set_domain(data1.domain);
		}
	}
};
$hxClasses["data.UserConfig"] = data_UserConfig;
data_UserConfig.__name__ = ["data","UserConfig"];
data_UserConfig.__interfaces__ = [DataClass];
data_UserConfig.validate = function(data1) {
	return [];
};
data_UserConfig.prototype = {
	set_domain: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for UserConfig.domain.");
		}
		return this.domain = v;
	}
	,__class__: data_UserConfig
	,__properties__: {set_domain:"set_domain"}
};
var data_UserResponse = function(data1) {
	this.errors = [];
	this.set_userData(data1.userData);
	if(Object.prototype.hasOwnProperty.call(data1,"errors")) {
		this.set_errors(data1.errors);
	}
};
$hxClasses["data.UserResponse"] = data_UserResponse;
data_UserResponse.__name__ = ["data","UserResponse"];
data_UserResponse.__interfaces__ = [DataClass];
data_UserResponse.validate = function(data1) {
	var output = [];
	if(!Object.prototype.hasOwnProperty.call(data1,"userData")) {
		output.push("userData");
	} else if(data1.userData == null) {
		output.push("userData");
	}
	return output;
};
data_UserResponse.prototype = {
	set_userData: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for UserResponse.userData.");
		}
		return this.userData = v;
	}
	,set_errors: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for UserResponse.errors.");
		}
		return this.errors = v;
	}
	,__class__: data_UserResponse
	,__properties__: {set_errors:"set_errors",set_userData:"set_userData"}
};
var data_Content = function(data1) {
	this.rooms = [];
	this.dbpath = "content-tree";
	this.path = "";
	this.set_id(data1.id);
	if(Object.prototype.hasOwnProperty.call(data1,"rooms")) {
		this.set_rooms(data1.rooms);
	}
};
$hxClasses["data.Content"] = data_Content;
data_Content.__name__ = ["data","Content"];
data_Content.__interfaces__ = [DataClass];
data_Content.validate = function(data1) {
	var output = [];
	if(!Object.prototype.hasOwnProperty.call(data1,"id")) {
		output.push("id");
	} else if(data1.id == null) {
		output.push("id");
	}
	return output;
};
data_Content.prototype = {
	set_id: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for Content.id.");
		}
		return this.id = v;
	}
	,set_rooms: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for Content.rooms.");
		}
		return this.rooms = v;
	}
	,__class__: data_Content
	,__properties__: {set_rooms:"set_rooms",set_id:"set_id"}
};
var data_Room = function(data1) {
	this.home = null;
	this.sort = 0;
	this.title = "defaultRoomTitle";
	this.shelves = [];
	this.id = "defaultRoomId";
	this.dbpath = "";
	this.path = "";
	if(data1 != null) {
		if(Object.prototype.hasOwnProperty.call(data1,"id")) {
			this.set_id(data1.id);
		}
		if(Object.prototype.hasOwnProperty.call(data1,"shelves")) {
			this.set_shelves(data1.shelves);
		}
		if(Object.prototype.hasOwnProperty.call(data1,"title")) {
			this.set_title(data1.title);
		}
		if(Object.prototype.hasOwnProperty.call(data1,"sort")) {
			this.set_sort(data1.sort);
		}
		if(Object.prototype.hasOwnProperty.call(data1,"home")) {
			this.set_home(data1.home);
		}
	}
};
$hxClasses["data.Room"] = data_Room;
data_Room.__name__ = ["data","Room"];
data_Room.__interfaces__ = [DataClass];
data_Room.validate = function(data1) {
	return [];
};
data_Room.prototype = {
	set_id: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for Room.id.");
		}
		return this.id = v;
	}
	,set_shelves: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for Room.shelves.");
		}
		return this.shelves = v;
	}
	,set_title: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for Room.title.");
		}
		return this.title = v;
	}
	,set_sort: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for Room.sort.");
		}
		return this.sort = v;
	}
	,set_home: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for Room.home.");
		}
		return this.home = v;
	}
	,__class__: data_Room
	,__properties__: {set_home:"set_home",set_sort:"set_sort",set_title:"set_title",set_shelves:"set_shelves",set_id:"set_id"}
};
var data_Home = function(data1) {
	this.sections = [];
	this.title = "Titel för hemsidan";
	if(data1 != null) {
		if(Object.prototype.hasOwnProperty.call(data1,"title")) {
			this.set_title(data1.title);
		}
		if(Object.prototype.hasOwnProperty.call(data1,"sections")) {
			this.set_sections(data1.sections);
		}
	}
};
$hxClasses["data.Home"] = data_Home;
data_Home.__name__ = ["data","Home"];
data_Home.__interfaces__ = [DataClass];
data_Home.validate = function(data1) {
	return [];
};
data_Home.prototype = {
	set_title: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for Home.title.");
		}
		return this.title = v;
	}
	,set_sections: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for Home.sections.");
		}
		return this.sections = v;
	}
	,__class__: data_Home
	,__properties__: {set_sections:"set_sections",set_title:"set_title"}
};
var data_IHomeSection = function() { };
$hxClasses["data.IHomeSection"] = data_IHomeSection;
data_IHomeSection.__name__ = ["data","IHomeSection"];
data_IHomeSection.__interfaces__ = [DataClass];
data_IHomeSection.prototype = {
	__class__: data_IHomeSection
	,__properties__: {set_sort:"set_sort",set_title:"set_title"}
};
var data_SectionShelves = function(data1) {
	this.sort = 200;
	this.title = "Shelves section";
	if(data1 != null) {
		if(Object.prototype.hasOwnProperty.call(data1,"title")) {
			this.set_title(data1.title);
		}
		if(Object.prototype.hasOwnProperty.call(data1,"sort")) {
			this.set_sort(data1.sort);
		}
	}
};
$hxClasses["data.SectionShelves"] = data_SectionShelves;
data_SectionShelves.__name__ = ["data","SectionShelves"];
data_SectionShelves.__interfaces__ = [data_IHomeSection];
data_SectionShelves.validate = function(data1) {
	return [];
};
data_SectionShelves.prototype = {
	set_title: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for SectionShelves.title.");
		}
		return this.title = v;
	}
	,set_sort: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for SectionShelves.sort.");
		}
		return this.sort = v;
	}
	,__class__: data_SectionShelves
	,__properties__: {set_sort:"set_sort",set_title:"set_title"}
};
var data_SectionCells = function(data1) {
	this.cells = [];
	this.sort = 100;
	this.title = "";
	if(data1 != null) {
		if(Object.prototype.hasOwnProperty.call(data1,"title")) {
			this.set_title(data1.title);
		}
		if(Object.prototype.hasOwnProperty.call(data1,"sort")) {
			this.set_sort(data1.sort);
		}
		if(Object.prototype.hasOwnProperty.call(data1,"cells")) {
			this.set_cells(data1.cells);
		}
	}
};
$hxClasses["data.SectionCells"] = data_SectionCells;
data_SectionCells.__name__ = ["data","SectionCells"];
data_SectionCells.__interfaces__ = [data_IHomeSection];
data_SectionCells.validate = function(data1) {
	return [];
};
data_SectionCells.prototype = {
	set_title: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for SectionCells.title.");
		}
		return this.title = v;
	}
	,set_sort: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for SectionCells.sort.");
		}
		return this.sort = v;
	}
	,set_cells: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for SectionCells.cells.");
		}
		return this.cells = v;
	}
	,__class__: data_SectionCells
	,__properties__: {set_cells:"set_cells",set_sort:"set_sort",set_title:"set_title"}
};
var data_IHomeCell = function() { };
$hxClasses["data.IHomeCell"] = data_IHomeCell;
data_IHomeCell.__name__ = ["data","IHomeCell"];
data_IHomeCell.__interfaces__ = [DataClass];
data_IHomeCell.prototype = {
	__class__: data_IHomeCell
	,__properties__: {set_url:"set_url",set_image:"set_image",set_bgimage:"set_bgimage",set_text:"set_text",set_bgcolor:"set_bgcolor",set_color:"set_color",set_sort:"set_sort",set_title:"set_title"}
};
var data_TextCell = function(data1) {
	this.image = "";
	this.url = "";
	this.bgimage = "/assets/background/background.jpg";
	this.bgcolor = "#666";
	this.text = "Celltext...";
	this.color = "white";
	this.gridRow = "";
	this.gridColumn = "";
	this.sort = 100;
	this.title = "Cell Title";
	if(data1 != null) {
		if(Object.prototype.hasOwnProperty.call(data1,"title")) {
			this.set_title(data1.title);
		}
		if(Object.prototype.hasOwnProperty.call(data1,"sort")) {
			this.set_sort(data1.sort);
		}
		if(Object.prototype.hasOwnProperty.call(data1,"gridColumn")) {
			this.set_gridColumn(data1.gridColumn);
		}
		if(Object.prototype.hasOwnProperty.call(data1,"gridRow")) {
			this.set_gridRow(data1.gridRow);
		}
		if(Object.prototype.hasOwnProperty.call(data1,"color")) {
			this.set_color(data1.color);
		}
		if(Object.prototype.hasOwnProperty.call(data1,"text")) {
			this.set_text(data1.text);
		}
		if(Object.prototype.hasOwnProperty.call(data1,"bgcolor")) {
			this.set_bgcolor(data1.bgcolor);
		}
		if(Object.prototype.hasOwnProperty.call(data1,"bgimage")) {
			this.set_bgimage(data1.bgimage);
		}
		if(Object.prototype.hasOwnProperty.call(data1,"url")) {
			this.set_url(data1.url);
		}
		if(Object.prototype.hasOwnProperty.call(data1,"image")) {
			this.set_image(data1.image);
		}
	}
};
$hxClasses["data.TextCell"] = data_TextCell;
data_TextCell.__name__ = ["data","TextCell"];
data_TextCell.__interfaces__ = [data_IHomeCell];
data_TextCell.validate = function(data1) {
	return [];
};
data_TextCell.prototype = {
	set_title: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for TextCell.title.");
		}
		return this.title = v;
	}
	,set_sort: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for TextCell.sort.");
		}
		return this.sort = v;
	}
	,set_gridColumn: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for TextCell.gridColumn.");
		}
		return this.gridColumn = v;
	}
	,set_gridRow: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for TextCell.gridRow.");
		}
		return this.gridRow = v;
	}
	,set_color: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for TextCell.color.");
		}
		return this.color = v;
	}
	,set_text: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for TextCell.text.");
		}
		return this.text = v;
	}
	,set_bgcolor: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for TextCell.bgcolor.");
		}
		return this.bgcolor = v;
	}
	,set_bgimage: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for TextCell.bgimage.");
		}
		return this.bgimage = v;
	}
	,set_url: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for TextCell.url.");
		}
		return this.url = v;
	}
	,set_image: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for TextCell.image.");
		}
		return this.image = v;
	}
	,__class__: data_TextCell
	,__properties__: {set_image:"set_image",set_url:"set_url",set_bgimage:"set_bgimage",set_bgcolor:"set_bgcolor",set_text:"set_text",set_color:"set_color",set_gridRow:"set_gridRow",set_gridColumn:"set_gridColumn",set_sort:"set_sort",set_title:"set_title"}
};
var data_VideoCell = function(data1) {
	this.video = "/assets/video/tada.mp4";
	this.image = "";
	this.url = "";
	this.bgimage = "/assets/background/background.jpg";
	this.bgcolor = "#666";
	this.text = "Celltext...";
	this.color = "white";
	this.gridRow = "";
	this.gridColumn = "";
	this.sort = 100;
	this.title = "Cell Title";
	if(data1 != null) {
		if(Object.prototype.hasOwnProperty.call(data1,"title")) {
			this.set_title(data1.title);
		}
		if(Object.prototype.hasOwnProperty.call(data1,"sort")) {
			this.set_sort(data1.sort);
		}
		if(Object.prototype.hasOwnProperty.call(data1,"gridColumn")) {
			this.set_gridColumn(data1.gridColumn);
		}
		if(Object.prototype.hasOwnProperty.call(data1,"gridRow")) {
			this.set_gridRow(data1.gridRow);
		}
		if(Object.prototype.hasOwnProperty.call(data1,"color")) {
			this.set_color(data1.color);
		}
		if(Object.prototype.hasOwnProperty.call(data1,"text")) {
			this.set_text(data1.text);
		}
		if(Object.prototype.hasOwnProperty.call(data1,"bgcolor")) {
			this.set_bgcolor(data1.bgcolor);
		}
		if(Object.prototype.hasOwnProperty.call(data1,"bgimage")) {
			this.set_bgimage(data1.bgimage);
		}
		if(Object.prototype.hasOwnProperty.call(data1,"url")) {
			this.set_url(data1.url);
		}
		if(Object.prototype.hasOwnProperty.call(data1,"image")) {
			this.set_image(data1.image);
		}
		if(Object.prototype.hasOwnProperty.call(data1,"video")) {
			this.set_video(data1.video);
		}
	}
};
$hxClasses["data.VideoCell"] = data_VideoCell;
data_VideoCell.__name__ = ["data","VideoCell"];
data_VideoCell.__interfaces__ = [data_IHomeCell];
data_VideoCell.validate = function(data1) {
	return [];
};
data_VideoCell.prototype = {
	set_title: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for VideoCell.title.");
		}
		return this.title = v;
	}
	,set_sort: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for VideoCell.sort.");
		}
		return this.sort = v;
	}
	,set_gridColumn: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for VideoCell.gridColumn.");
		}
		return this.gridColumn = v;
	}
	,set_gridRow: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for VideoCell.gridRow.");
		}
		return this.gridRow = v;
	}
	,set_color: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for VideoCell.color.");
		}
		return this.color = v;
	}
	,set_text: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for VideoCell.text.");
		}
		return this.text = v;
	}
	,set_bgcolor: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for VideoCell.bgcolor.");
		}
		return this.bgcolor = v;
	}
	,set_bgimage: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for VideoCell.bgimage.");
		}
		return this.bgimage = v;
	}
	,set_url: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for VideoCell.url.");
		}
		return this.url = v;
	}
	,set_image: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for VideoCell.image.");
		}
		return this.image = v;
	}
	,set_video: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for VideoCell.video.");
		}
		return this.video = v;
	}
	,__class__: data_VideoCell
	,__properties__: {set_video:"set_video",set_image:"set_image",set_url:"set_url",set_bgimage:"set_bgimage",set_bgcolor:"set_bgcolor",set_text:"set_text",set_color:"set_color",set_gridRow:"set_gridRow",set_gridColumn:"set_gridColumn",set_sort:"set_sort",set_title:"set_title"}
};
var data_Shelf = function(data1) {
	this.type = "content";
	this.sort = 0;
	this.books = [];
	this.info = "defaultShelfInfo";
	this.access = 0;
	this.title = "defaultShelfTitle";
	this.id = "defaultShelfId";
	this.dbpath = "";
	this.path = "";
	if(data1 != null) {
		if(Object.prototype.hasOwnProperty.call(data1,"id")) {
			this.set_id(data1.id);
		}
		if(Object.prototype.hasOwnProperty.call(data1,"title")) {
			this.set_title(data1.title);
		}
		if(Object.prototype.hasOwnProperty.call(data1,"access")) {
			this.set_access(data1.access);
		}
		if(Object.prototype.hasOwnProperty.call(data1,"info")) {
			this.set_info(data1.info);
		}
		if(Object.prototype.hasOwnProperty.call(data1,"books")) {
			this.set_books(data1.books);
		}
		if(Object.prototype.hasOwnProperty.call(data1,"sort")) {
			this.set_sort(data1.sort);
		}
		if(Object.prototype.hasOwnProperty.call(data1,"type")) {
			this.set_type(data1.type);
		}
	}
};
$hxClasses["data.Shelf"] = data_Shelf;
data_Shelf.__name__ = ["data","Shelf"];
data_Shelf.__interfaces__ = [DataClass];
data_Shelf.validate = function(data1) {
	return [];
};
data_Shelf.prototype = {
	set_id: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for Shelf.id.");
		}
		return this.id = v;
	}
	,set_title: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for Shelf.title.");
		}
		return this.title = v;
	}
	,set_access: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for Shelf.access.");
		}
		return this.access = v;
	}
	,set_info: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for Shelf.info.");
		}
		return this.info = v;
	}
	,set_books: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for Shelf.books.");
		}
		return this.books = v;
	}
	,set_sort: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for Shelf.sort.");
		}
		return this.sort = v;
	}
	,set_type: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for Shelf.type.");
		}
		return this.type = v;
	}
	,__class__: data_Shelf
	,__properties__: {set_type:"set_type",set_sort:"set_sort",set_books:"set_books",set_info:"set_info",set_access:"set_access",set_title:"set_title",set_id:"set_id"}
};
var data_Book = function(data1) {
	this.sort = 0;
	this.chapters = [];
	this.info = "defaultBookInfo";
	this.type = "standard";
	this.access = 0;
	this.title = "defaultBookTitle";
	this.id = "defaultBookId";
	this.dbpath = "";
	this.path = "";
	if(data1 != null) {
		if(Object.prototype.hasOwnProperty.call(data1,"id")) {
			this.set_id(data1.id);
		}
		if(Object.prototype.hasOwnProperty.call(data1,"title")) {
			this.set_title(data1.title);
		}
		if(Object.prototype.hasOwnProperty.call(data1,"access")) {
			this.set_access(data1.access);
		}
		if(Object.prototype.hasOwnProperty.call(data1,"type")) {
			this.set_type(data1.type);
		}
		if(Object.prototype.hasOwnProperty.call(data1,"info")) {
			this.set_info(data1.info);
		}
		if(Object.prototype.hasOwnProperty.call(data1,"chapters")) {
			this.set_chapters(data1.chapters);
		}
		if(Object.prototype.hasOwnProperty.call(data1,"sort")) {
			this.set_sort(data1.sort);
		}
	}
};
$hxClasses["data.Book"] = data_Book;
data_Book.__name__ = ["data","Book"];
data_Book.__interfaces__ = [DataClass];
data_Book.validate = function(data1) {
	return [];
};
data_Book.prototype = {
	set_id: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for Book.id.");
		}
		return this.id = v;
	}
	,set_title: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for Book.title.");
		}
		return this.title = v;
	}
	,set_access: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for Book.access.");
		}
		return this.access = v;
	}
	,set_type: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for Book.type.");
		}
		return this.type = v;
	}
	,set_info: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for Book.info.");
		}
		return this.info = v;
	}
	,set_chapters: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for Book.chapters.");
		}
		return this.chapters = v;
	}
	,set_sort: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for Book.sort.");
		}
		return this.sort = v;
	}
	,__class__: data_Book
	,__properties__: {set_sort:"set_sort",set_chapters:"set_chapters",set_info:"set_info",set_type:"set_type",set_access:"set_access",set_title:"set_title",set_id:"set_id"}
};
var data_Chapter = function(data1) {
	this.type = null;
	this.subchapters = [];
	this.sort = 0;
	this.text = "defaultChapterText";
	this.info = "defaultChapterInfo";
	this.access = 0;
	this.title = "defaultChapterTitle";
	this.id = "defaultChapterId";
	this.dbpath = "";
	this.path = "";
	if(data1 != null) {
		if(Object.prototype.hasOwnProperty.call(data1,"id")) {
			this.set_id(data1.id);
		}
		if(Object.prototype.hasOwnProperty.call(data1,"title")) {
			this.set_title(data1.title);
		}
		if(Object.prototype.hasOwnProperty.call(data1,"access")) {
			this.set_access(data1.access);
		}
		if(Object.prototype.hasOwnProperty.call(data1,"info")) {
			this.set_info(data1.info);
		}
		if(Object.prototype.hasOwnProperty.call(data1,"text")) {
			this.set_text(data1.text);
		}
		if(Object.prototype.hasOwnProperty.call(data1,"sort")) {
			this.set_sort(data1.sort);
		}
		if(Object.prototype.hasOwnProperty.call(data1,"subchapters")) {
			this.set_subchapters(data1.subchapters);
		}
		if(Object.prototype.hasOwnProperty.call(data1,"type")) {
			this.set_type(data1.type);
		}
	}
};
$hxClasses["data.Chapter"] = data_Chapter;
data_Chapter.__name__ = ["data","Chapter"];
data_Chapter.__interfaces__ = [DataClass];
data_Chapter.validate = function(data1) {
	return [];
};
data_Chapter.prototype = {
	set_id: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for Chapter.id.");
		}
		return this.id = v;
	}
	,set_title: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for Chapter.title.");
		}
		return this.title = v;
	}
	,set_access: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for Chapter.access.");
		}
		return this.access = v;
	}
	,set_info: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for Chapter.info.");
		}
		return this.info = v;
	}
	,set_text: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for Chapter.text.");
		}
		return this.text = v;
	}
	,set_sort: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for Chapter.sort.");
		}
		return this.sort = v;
	}
	,set_subchapters: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for Chapter.subchapters.");
		}
		return this.subchapters = v;
	}
	,set_type: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for Chapter.type.");
		}
		return this.type = v;
	}
	,__class__: data_Chapter
	,__properties__: {set_type:"set_type",set_subchapters:"set_subchapters",set_sort:"set_sort",set_text:"set_text",set_info:"set_info",set_access:"set_access",set_title:"set_title",set_id:"set_id"}
};
var data_IChaptertype = function() { };
$hxClasses["data.IChaptertype"] = data_IChaptertype;
data_IChaptertype.__name__ = ["data","IChaptertype"];
data_IChaptertype.__interfaces__ = [DataClass];
var data_StandardChaptertype = function(data1) {
};
$hxClasses["data.StandardChaptertype"] = data_StandardChaptertype;
data_StandardChaptertype.__name__ = ["data","StandardChaptertype"];
data_StandardChaptertype.__interfaces__ = [data_IChaptertype];
data_StandardChaptertype.validate = function(data1) {
	return [];
};
data_StandardChaptertype.prototype = {
	__class__: data_StandardChaptertype
};
var data_VideoChaptertype = function(data1) {
	this.url = "/test/Vinjett.mp4";
	if(data1 != null) {
		if(Object.prototype.hasOwnProperty.call(data1,"url")) {
			this.set_url(data1.url);
		}
	}
};
$hxClasses["data.VideoChaptertype"] = data_VideoChaptertype;
data_VideoChaptertype.__name__ = ["data","VideoChaptertype"];
data_VideoChaptertype.__interfaces__ = [data_IChaptertype];
data_VideoChaptertype.validate = function(data1) {
	return [];
};
data_VideoChaptertype.prototype = {
	set_url: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for VideoChaptertype.url.");
		}
		return this.url = v;
	}
	,__class__: data_VideoChaptertype
	,__properties__: {set_url:"set_url"}
};
var data_RosettaChaptertype = function(data1) {
	this.data = "{xyz:123}";
	if(data1 != null) {
		if(Object.prototype.hasOwnProperty.call(data1,"data")) {
			this.set_data(data1.data);
		}
	}
};
$hxClasses["data.RosettaChaptertype"] = data_RosettaChaptertype;
data_RosettaChaptertype.__name__ = ["data","RosettaChaptertype"];
data_RosettaChaptertype.__interfaces__ = [data_IChaptertype];
data_RosettaChaptertype.validate = function(data1) {
	return [];
};
data_RosettaChaptertype.prototype = {
	set_data: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for RosettaChaptertype.data.");
		}
		return this.data = v;
	}
	,__class__: data_RosettaChaptertype
	,__properties__: {set_data:"set_data"}
};
var data_PdfChaptertype = function(data1) {
	this.filename = "/test.pdf";
	if(data1 != null) {
		if(Object.prototype.hasOwnProperty.call(data1,"filename")) {
			this.set_filename(data1.filename);
		}
	}
};
$hxClasses["data.PdfChaptertype"] = data_PdfChaptertype;
data_PdfChaptertype.__name__ = ["data","PdfChaptertype"];
data_PdfChaptertype.__interfaces__ = [data_IChaptertype];
data_PdfChaptertype.validate = function(data1) {
	return [];
};
data_PdfChaptertype.prototype = {
	set_filename: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for PdfChaptertype.filename.");
		}
		return this.filename = v;
	}
	,__class__: data_PdfChaptertype
	,__properties__: {set_filename:"set_filename"}
};
var data_PitchChaptertype = function(data1) {
};
$hxClasses["data.PitchChaptertype"] = data_PitchChaptertype;
data_PitchChaptertype.__name__ = ["data","PitchChaptertype"];
data_PitchChaptertype.__interfaces__ = [data_IChaptertype];
data_PitchChaptertype.validate = function(data1) {
	return [];
};
data_PitchChaptertype.prototype = {
	__class__: data_PitchChaptertype
};
var data_ScorxmixerChaptertype = function(data1) {
	this.paths = ["/scorx/_test/200.mp3","/scorx/_test/100.mp3"];
	if(data1 != null) {
		if(Object.prototype.hasOwnProperty.call(data1,"paths")) {
			this.set_paths(data1.paths);
		}
	}
};
$hxClasses["data.ScorxmixerChaptertype"] = data_ScorxmixerChaptertype;
data_ScorxmixerChaptertype.__name__ = ["data","ScorxmixerChaptertype"];
data_ScorxmixerChaptertype.__interfaces__ = [data_IChaptertype];
data_ScorxmixerChaptertype.validate = function(data1) {
	return [];
};
data_ScorxmixerChaptertype.prototype = {
	set_paths: function(v) {
		if(v == null) {
			throw new js__$Boot_HaxeError("DataClass validation failed for ScorxmixerChaptertype.paths.");
		}
		return this.paths = v;
	}
	,__class__: data_ScorxmixerChaptertype
	,__properties__: {set_paths:"set_paths"}
};
var data_ContentFilters = function() { };
$hxClasses["data.ContentFilters"] = data_ContentFilters;
data_ContentFilters.__name__ = ["data","ContentFilters"];
data_ContentFilters.filterRoom = function(ct,roomId) {
	return new data_Content({ id : ct.id, rooms : ct.rooms.filter(function(room) {
		return room.id == roomId;
	})});
};
data_ContentFilters.fiterRoomAndShelfHome = function(ct) {
	return new data_Content({ id : ct.id, rooms : ct.rooms.filter(function(room) {
		return room.id == "home";
	}).map(function(room1) {
		return new data_Room({ id : room1.id, title : room1.title, shelves : room1.shelves.filter(function(shelf) {
			console.log("src/data/Content.hx:190:",shelf.id);
			return shelf.id == "home";
		})});
	})});
};
data_ContentFilters.filterAccess = function(ct,access) {
	if(access == null) {
		access = 0;
	}
	return new data_Content({ id : ct.id, rooms : ct.rooms.map(function(room) {
		return new data_Room({ id : room.id, shelves : room.shelves.filter(function(shelf) {
			return shelf.access <= access;
		}).map(function(shelf1) {
			return new data_Shelf({ id : shelf1.id, title : shelf1.title, info : "" + shelf1.info, access : shelf1.access, books : shelf1.books.filter(function(book) {
				return book.access <= access;
			}).map(function(book1) {
				return new data_Book({ id : book1.id, title : book1.title, access : book1.access, type : book1.type, info : "" + book1.info, chapters : book1.chapters.filter(function(chapter) {
					return chapter.access <= access;
				}).map(function(chapter1) {
					return new data_Chapter({ id : chapter1.id, title : chapter1.title, access : chapter1.access, info : chapter1.info, text : chapter1.text, subchapters : chapter1.subchapters.filter(function(s) {
						return s.access <= access;
					})});
				})});
			})});
		})});
	})});
};
data_ContentFilters.sort = function(ct) {
	var copy = ct.rooms.slice();
	copy.sort(function(a,b) {
		return a.sort - b.sort;
	});
	Lambda.iter(copy,function(room) {
		var copy1 = room.shelves.slice();
		copy1.sort(function(a1,b1) {
			return a1.sort - b1.sort;
		});
		Lambda.iter(copy1,function(shelf) {
			var copy2 = shelf.books.slice();
			copy2.sort(function(a2,b2) {
				return a2.sort - b2.sort;
			});
			return copy2;
		});
		return;
	});
	return ct;
};
var data_ContentUtils = function() { };
$hxClasses["data.ContentUtils"] = data_ContentUtils;
data_ContentUtils.__name__ = ["data","ContentUtils"];
data_ContentUtils.getContentInit = function() {
	return new data_Content({ id : "tree0", rooms : [new data_Room({ id : "room0", title : "TestRoom", home : new data_Home({ title : "Här är titel för hemsidan", sections : [new data_SectionShelves({ sort : 200}),new data_SectionCells({ sort : 100, cells : [new data_TextCell({ title : "Cell0", gridColumn : "span 2", gridRow : "span 2", bgcolor : "#0F154D", url : "/content/room0/shelf1/book2", text : "#Välkommen till Körakademin hösten 2018!                        \r\n\r\n###Vi lyfter svensk körsång!\r\n\r\nKörakademin finns till för att ge dej som körsångare nya möjligheter att utvecklas. Vi spelar in mängder av körmusik som du hittar på scorx.org och vi skapar övningsmaterial för rösten, notläsning mm.\r\n\r\n                        "}),new data_VideoCell({ gridColumn : "span 2"}),new data_TextCell({ title : "Cell1", bgcolor : "#43245D", color : "white", gridColumn : "span 2", image : "", text : "\r\n\r\n## ScorX Player                        \r\n\r\när en musikmixer som hjälper dig att öva din körstämma hemma vid datorn eller i mobilen/plattan. Lyssna, följ med i notbilden och sjung med! \r\n\r\n"})]}),new data_SectionCells({ sort : 300, cells : [new data_TextCell({ title : "Cell1", bgcolor : "#0F154D", color : "white", gridColumn : "span 2", image : "", text : "\r\n\r\n##Körakademin Plus\r\n\r\när en kostnadsfri nätbaserad distanskurs för körsångare. Här får du fri tillgång till alla våra inspelningar och allt vårt övriga övningsmaterial för notläsning, gehör, rösten med mera. \r\n\r\n"}),new data_TextCell({ title : "Cell1", bgcolor : "#6E1841", color : "white", gridColumn : "span 2", image : "", text : "\r\n###Sjunger du i en Sensus-kör?                        \r\n\r\nSom registrerad körsångare i Sensus får du som medlemsförmån gratis använda 12 PLAY- titlar per termin ur vårt musikbibliotek i ScorX. Du får tillgång till detta genom att bli medlem i ScorX-gruppen **Körakademin Sensus**.\r\n\r\n"}),new data_TextCell({ title : "Cell1", bgcolor : "#6E1841", color : "white", gridColumn : "", image : "", text : "\r\n                        \r\n###Sök bland 800 Scorx-titlar                        \r\n\r\nNu kan du hitta ännu fler...\r\n\r\n"}),new data_TextCell({ title : "Cell1", bgcolor : "#312632", color : "white", gridColumn : "", image : "", text : "\r\n                        \r\n###Möt våra inspelningsteam                        \r\n\r\nHundratals sånger finns inspelade i ScorX bibliotek. Men vilka är rösterna bakom inspelningarna? \r\n\r\n"})]})]}), shelves : [new data_Shelf({ id : "shelf0", title : "Default page shelves", access : 0, books : [new data_Book({ id : "book0", title : "Bok 0", access : 0, chapters : [new data_Chapter({ id : "chapter0", title : "Kapitel 1", text : "/@score a b c @/ hej /@media /test/abc.png@/", access : 1, subchapters : [new data_Chapter({ id : "sub0", title : "Sub", access : 0}),new data_Chapter({ id : "vidc1", title : "Video", access : 0, type : new data_VideoChaptertype({ url : "/test/Stamtoner.mp4"})}),new data_Chapter({ id : "pdf1", title : "Pdf", access : 0, type : new data_PdfChaptertype()}),new data_Chapter({ id : "ros0", title : "Rosetta", access : 0, type : new data_RosettaChaptertype()}),new data_Chapter({ id : "pitch1", title : "Pitch", access : 0, type : new data_PitchChaptertype()}),new data_Chapter({ id : "scorx0", title : "Scorx", access : 0, type : new data_ScorxmixerChaptertype({ paths : ["/scorx/_test/200.mp3","/scorx/_test/100.mp3"]})})]}),new data_Chapter({ id : "vidc1", title : "Videokapitel 1", type : new data_VideoChaptertype()}),new data_Chapter({ id : "pdf1", title : "Pdfkapitel 1", type : new data_PdfChaptertype()}),new data_Chapter({ id : "rosetta1", title : "Rosetta 1", type : new data_RosettaChaptertype()}),new data_Chapter({ id : "pitch1", title : "Pitch 1", type : new data_PitchChaptertype()}),new data_Chapter({ id : "scorx1", title : "Scorxmixer 1", type : new data_ScorxmixerChaptertype({ paths : ["/scorx/_test/200.mp3","/scorx/_test/100.mp3"]})})]}),new data_Book({ id : "book1", title : "Bok 1", access : 1, chapters : [new data_Chapter({ id : "chapter0", title : "Kapitel 1", access : 1, subchapters : [new data_Chapter({ id : "sub0", title : "Sub0", access : 0}),new data_Chapter({ id : "sub1", title : "Sub1", access : 0})]})]})]}),new data_Shelf({ id : "shelf1", title : "Ytterligare en bokhylla", access : 0, books : [new data_Book({ id : "book2", title : "En bok bland alla andra", access : 0, chapters : [new data_Chapter({ id : "chapter0", title : "Chapter Access 0", access : 0, subchapters : []}),new data_Chapter({ id : "chapter1", title : "Chapter Access 1", access : 1, subchapters : []}),new data_Chapter({ id : "chapter2", title : "Chapter Access 2", access : 2, subchapters : []})]})]})]})]});
};
data_ContentUtils.randomRooms = function(count) {
	if(count == null) {
		count = 2;
	}
};
data_ContentUtils.randomBooks = function(count) {
	if(count == null) {
		count = 2;
	}
	var _g = [];
	var _g2 = 0;
	while(_g2 < count) _g.push(_g2++);
	return _g.map(function(i) {
		var book = new data_Book({ title : "Book" + i, id : "book" + i});
		book.set_chapters(data_ContentUtils.randomChapters(book.id,7));
		return book;
	});
};
data_ContentUtils.randomChapters = function(bookId,count) {
	if(count == null) {
		count = 4;
	}
	var _g = [];
	var _g2 = 0;
	while(_g2 < count) _g.push(_g2++);
	return _g.map(function(i) {
		var text = cx_Lorem.getNextChapter();
		var type;
		switch(data_ContentUtils.typeCounter++ % 8) {
		case 2:
			type = new data_VideoChaptertype({ url : "/assets/video/tada.mp4"});
			break;
		case 3:
			type = new data_ScorxmixerChaptertype({ paths : ["/scorx/_test/200.mp3","/scorx/_test/100.mp3"]});
			break;
		default:
			type = new data_StandardChaptertype();
		}
		var chapter = new data_Chapter({ title : "Chapter" + i, id : "" + bookId + "/chap" + i, text : text, type : type});
		chapter.set_subchapters(data_ContentUtils.randomSubchapters(chapter.id,8));
		return chapter;
	});
};
data_ContentUtils.randomSubchapters = function(chapterId,count) {
	if(count == null) {
		count = 2;
	}
	var _g = [];
	var _g2 = 0;
	while(_g2 < count) _g.push(_g2++);
	return _g.map(function(i) {
		var text = cx_Lorem.getNextChapter();
		var type;
		switch(data_ContentUtils.typeCounter++ % 8) {
		case 2:
			type = new data_VideoChaptertype({ url : "/assets/video/tada.mp4"});
			break;
		case 3:
			type = new data_ScorxmixerChaptertype({ paths : ["/scorx/_test2/200.mp3","/scorx/_test2/100.mp3","/scorx/_test2/110.mp3","/scorx/_test2/120.mp3","/scorx/_test2/130.mp3"]});
			break;
		default:
			type = new data_StandardChaptertype();
		}
		return new data_Chapter({ title : "Subchapter" + i, id : "" + chapterId + "/sub" + i, text : text, type : type});
	});
};
var data_ContentModel = function() {
	console.log("src/data/ContentModel.hx:15:","new content");
	this.set_content(data_ContentUtils.getContentInit());
};
$hxClasses["data.ContentModel"] = data_ContentModel;
data_ContentModel.__name__ = ["data","ContentModel"];
data_ContentModel.prototype = {
	set_content: function(u) {
		var updatePaths = function(tree) {
			tree.path = "";
			Lambda.iter(tree.rooms,function(room) {
				room.path = tree.path + "/" + room.id;
				Lambda.iter(room.shelves,function(shelf) {
					shelf.path = room.path + "/" + shelf.id;
					Lambda.iter(shelf.books,function(book) {
						book.path = shelf.path + "/" + book.id;
						Lambda.iter(book.chapters,function(chapter) {
							chapter.path = book.path + "/" + chapter.id;
							Lambda.iter(chapter.subchapters,function(sub) {
								return sub.path = chapter.path + "/" + sub.id;
							});
							return;
						});
						return;
					});
					return;
				});
				return;
			});
		};
		var updateDbPaths = function(tree1) {
			tree1.dbpath = "content-tree";
			Lambda.iter(tree1.rooms,function(room1) {
				room1.dbpath = tree1.dbpath + "/rooms/" + tree1.rooms.indexOf(room1);
				Lambda.iter(room1.shelves,function(shelf1) {
					shelf1.dbpath = room1.dbpath + "/shelves/" + room1.shelves.indexOf(shelf1);
					Lambda.iter(shelf1.books,function(book1) {
						book1.dbpath = shelf1.dbpath + "/books/" + shelf1.books.indexOf(book1);
						Lambda.iter(book1.chapters,function(chapter1) {
							chapter1.dbpath = book1.dbpath + "/chapters/" + book1.chapters.indexOf(chapter1);
							Lambda.iter(chapter1.subchapters,function(sub1) {
								return sub1.dbpath = chapter1.dbpath + "/subchapters/" + chapter1.subchapters.indexOf(sub1);
							});
							return;
						});
						return;
					});
					return;
				});
				return;
			});
		};
		this.content = u;
		updatePaths(this.content);
		updateDbPaths(this.content);
		m.redraw();
		return u;
	}
	,__class__: data_ContentModel
	,__properties__: {set_content:"set_content"}
};
var data_ErrorsAndLogs = function() { };
$hxClasses["data.ErrorsAndLogs"] = data_ErrorsAndLogs;
data_ErrorsAndLogs.__name__ = ["data","ErrorsAndLogs"];
data_ErrorsAndLogs.addLog = function(log) {
	data_ErrorsAndLogs.logs.unshift(log);
	console.log("src/data/ErrorsAndLogs.hx:14:",log);
};
data_ErrorsAndLogs.addErrors = function(err) {
	Lambda.iter(err,function(e) {
		data_ErrorsAndLogs.addError(e);
		return;
	});
};
data_ErrorsAndLogs.addError = function(e) {
	data_ErrorsAndLogs.errors.unshift(e);
	console.log("src/data/ErrorsAndLogs.hx:26:",e);
};
data_ErrorsAndLogs.addErrorsIfAny = function(err) {
	if(err != null && err.length > 0) {
		data_ErrorsAndLogs.addErrors(err);
	}
};
var data_FilterModel = function() {
};
$hxClasses["data.FilterModel"] = data_FilterModel;
data_FilterModel.__name__ = ["data","FilterModel"];
data_FilterModel.prototype = {
	setFilterContent: function(ref) {
		this.filterContent = ref;
		data_PagesModel.instance.setPageFromContentRef(ref);
		m.redraw();
	}
	,getRoom: function() {
		var _gthis = this;
		try {
			return data_ContentModel.instance.content.rooms.filter(function(room) {
				return room.id == _gthis.filterContent.roomId;
			})[0];
		} catch( e ) {
			(e instanceof js__$Boot_HaxeError);
			return data_ContentModel.instance.content.rooms[0];
		}
	}
	,getShelves: function() {
		var _gthis = this;
		try {
			var shelves = this.getRoom().shelves;
			if(this.filterContent != null && this.filterContent.shelfId != null) {
				shelves = shelves.filter(function(shelf) {
					return shelf.id == _gthis.filterContent.shelfId;
				});
			}
			return shelves;
		} catch( e ) {
			(e instanceof js__$Boot_HaxeError);
			return [];
		}
	}
	,getShelf: function() {
		var _gthis = this;
		try {
			return this.getRoom().shelves.filter(function(shelf) {
				return shelf.id == _gthis.filterContent.shelfId;
			})[0];
		} catch( e ) {
			(e instanceof js__$Boot_HaxeError);
			return null;
		}
	}
	,getBook: function() {
		var _gthis = this;
		try {
			return this.getShelf().books.filter(function(book) {
				return book.id == _gthis.filterContent.bookId;
			})[0];
		} catch( e ) {
			(e instanceof js__$Boot_HaxeError);
			return null;
		}
	}
	,getChapters: function() {
		try {
			return this.getBook().chapters;
		} catch( e ) {
			(e instanceof js__$Boot_HaxeError);
			return null;
		}
	}
	,getChapter: function() {
		var _gthis = this;
		try {
			if(this.filterContent.chapterId != null) {
				return this.getChapters().filter(function(chapter) {
					return chapter.id == _gthis.filterContent.chapterId;
				})[0];
			} else {
				return this.getChapters()[0];
			}
		} catch( e ) {
			(e instanceof js__$Boot_HaxeError);
			return null;
		}
	}
	,getSubchapters: function() {
		try {
			return this.getChapter().subchapters;
		} catch( e ) {
			(e instanceof js__$Boot_HaxeError);
			return null;
		}
	}
	,getSubchapter: function() {
		var _gthis = this;
		try {
			if(this.filterContent.subchapterId != null) {
				return this.getSubchapters().filter(function(sub) {
					return sub.id == _gthis.filterContent.subchapterId;
				})[0];
			} else {
				return this.getSubchapters()[0];
			}
		} catch( e ) {
			(e instanceof js__$Boot_HaxeError);
			return null;
		}
	}
	,__class__: data_FilterModel
};
var data_FilterTools = function() { };
$hxClasses["data.FilterTools"] = data_FilterTools;
data_FilterTools.__name__ = ["data","FilterTools"];
data_FilterTools.getShelvesOfType = function(shelves,type) {
	return shelves.filter(function(shelf) {
		return shelf.type == type;
	});
};
data_FilterTools.getShelvesExcludeType = function(shelves,type) {
	return shelves.filter(function(shelf) {
		return shelf.type != type;
	});
};
var data_FirebaseModel = function() {
	this.app = null;
};
$hxClasses["data.FirebaseModel"] = data_FirebaseModel;
data_FirebaseModel.__name__ = ["data","FirebaseModel"];
data_FirebaseModel.prototype = {
	init: function() {
		this.app = firebase.initializeApp({ apiKey : "AIzaSyBGLErhUSfQHA4wOtkid206KVE-96QEN04", authDomain : "fb-stack.firebaseapp.com", databaseURL : "https://fb-stack.firebaseio.com", projectId : "fb-stack", storageBucket : "fb-stack.appspot.com", messagingSenderId : "665827748546"});
	}
	,__class__: data_FirebaseModel
};
var data_PagesModel = function() {
	this.pageWidth = "100%";
	this.pageIdx = 0;
};
$hxClasses["data.PagesModel"] = data_PagesModel;
data_PagesModel.__name__ = ["data","PagesModel"];
data_PagesModel.prototype = {
	set_pageIdx: function(val) {
		this.pageIdx = val;
		m.redraw();
		return this.pageIdx;
	}
	,set_pageWidth: function(val) {
		this.pageWidth = val;
		m.redraw();
		return this.pageWidth;
	}
	,setPageFromContentRef: function(ref) {
		var pageIndex = 0;
		if(ref.subchapterId != null) {
			pageIndex = 2;
		} else if(ref.chapterId != null) {
			pageIndex = 2;
		} else if(ref.bookId != null) {
			pageIndex = 2;
		} else if(ref.shelfId != null) {
			pageIndex = 1;
		} else if(ref.roomId != null) {
			pageIndex = 0;
		}
		this.set_pageIdx(pageIndex);
	}
	,__class__: data_PagesModel
	,__properties__: {set_pageWidth:"set_pageWidth",set_pageIdx:"set_pageIdx"}
};
var data_StorageMap = function() {
	this.map = new haxe_ds_StringMap();
};
$hxClasses["data.StorageMap"] = data_StorageMap;
data_StorageMap.__name__ = ["data","StorageMap"];
data_StorageMap.prototype = {
	get: function(src) {
		var _gthis = this;
		var _this = this.map;
		if(__map_reserved[src] != null ? _this.existsReserved(src) : _this.h.hasOwnProperty(src)) {
			console.log("src/data/StorageMap.hx:23:","Get " + src + " from cache");
			var _this1 = this.map;
			if(__map_reserved[src] != null) {
				return _this1.getReserved(src);
			} else {
				return _this1.h[src];
			}
		}
		console.log("src/data/StorageMap.hx:26:",src + " does not exist");
		firebase.storage().ref(src).getDownloadURL().then(function(downloadUrl) {
			console.log("src/data/StorageMap.hx:29:","found " + src + ":" + downloadUrl);
			var _this2 = _gthis.map;
			if(__map_reserved[src] != null) {
				_this2.setReserved(src,downloadUrl);
			} else {
				_this2.h[src] = downloadUrl;
			}
			m.redraw();
			return downloadUrl;
		})["catch"](function(e) {
			console.log("src/data/StorageMap.hx:34:","error " + e);
			m.redraw();
			return data_StorageMap.NONEXISTING;
		});
		return this.getDefault(src);
	}
	,getDefault: function(src) {
		if(haxe_io_Path.extension(src) == "mp3") {
			return data_StorageMap.DEFAULT_MP3;
		} else {
			return data_StorageMap.DEFAULT_IMG;
		}
	}
	,__class__: data_StorageMap
};
var dataclass_CircularReferenceHandling = $hxEnums["dataclass.CircularReferenceHandling"] = { __ename__ : true, __constructs__ : ["ThrowException","SetToNull","TrackReferences"]
	,ThrowException: {_hx_index:0,__enum__:"dataclass.CircularReferenceHandling",toString:$estr}
	,SetToNull: {_hx_index:1,__enum__:"dataclass.CircularReferenceHandling",toString:$estr}
	,TrackReferences: {_hx_index:2,__enum__:"dataclass.CircularReferenceHandling",toString:$estr}
};
var dataclass_Rtti = function() { };
$hxClasses["dataclass.Rtti"] = dataclass_Rtti;
dataclass_Rtti.__name__ = ["dataclass","Rtti"];
dataclass_Rtti.rttiData = function(cls) {
	return haxe_rtti_Meta.getType(cls)["dataClassRtti"][0];
};
var dataclass_Converter = function(options) {
	this.useClassInfo = false;
	if(options == null) {
		options = { };
	}
	this.valueConverters = new haxe_ds_StringMap();
	var this1 = this.valueConverters;
	var value = new dataclass_DateValueConverter(Object.prototype.hasOwnProperty.call(options,"dateFormat") ? options.dateFormat : "%Y-%m-%dT%H:%M:%SZ");
	var _this = this1;
	if(__map_reserved["Date"] != null) {
		_this.setReserved("Date",value);
	} else {
		_this.h["Date"] = value;
	}
	this.circularReferences = Object.prototype.hasOwnProperty.call(options,"circularReferences") ? options.circularReferences : dataclass_CircularReferenceHandling.ThrowException;
};
$hxClasses["dataclass.Converter"] = dataclass_Converter;
dataclass_Converter.__name__ = ["dataclass","Converter"];
dataclass_Converter.enumType = function(name) {
	var _this = dataclass_Converter.enumCache;
	if(__map_reserved[name] != null ? _this.existsReserved(name) : _this.h.hasOwnProperty(name)) {
		var _this1 = dataclass_Converter.enumCache;
		if(__map_reserved[name] != null) {
			return _this1.getReserved(name);
		} else {
			return _this1.h[name];
		}
	}
	var output = $hxEnums[name];
	if(output == null) {
		throw new js__$Boot_HaxeError("Enum not found: " + name);
	}
	var _this2 = dataclass_Converter.enumCache;
	if(__map_reserved[name] != null) {
		_this2.setReserved(name,output);
	} else {
		_this2.h[name] = output;
	}
	return output;
};
dataclass_Converter.classType = function(name) {
	var _this = dataclass_Converter.classCache;
	if(__map_reserved[name] != null ? _this.existsReserved(name) : _this.h.hasOwnProperty(name)) {
		var _this1 = dataclass_Converter.classCache;
		if(__map_reserved[name] != null) {
			return _this1.getReserved(name);
		} else {
			return _this1.h[name];
		}
	}
	var output = $hxClasses[name];
	if(output == null) {
		throw new js__$Boot_HaxeError("Class not found: " + name);
	}
	var _this2 = dataclass_Converter.classCache;
	if(__map_reserved[name] != null) {
		_this2.setReserved(name,output);
	} else {
		_this2.h[name] = output;
	}
	return output;
};
dataclass_Converter.prototype = {
	toDataClass: function(cls,json) {
		var refCount = new haxe_ds_IntMap();
		var refAssign = new haxe_ds_IntMap();
		var output = this._toDataClass(cls,json,refCount,refAssign);
		this.assignReferences(refCount,refAssign);
		return output;
	}
	,toAnonymousStructure: function(cls,json) {
		var refCount = new haxe_ds_IntMap();
		var refAssign = new haxe_ds_IntMap();
		var output = this._toAnonymousStructure(cls,json,refCount,refAssign,0,false);
		this.assignReferences(refCount,refAssign);
		return output;
	}
	,assignReferences: function(refCount,refAssign) {
		var refId = refAssign.keys();
		while(refId.hasNext()) {
			var refId1 = refId.next();
			var _g = 0;
			var _g1 = refAssign.h[refId1];
			while(_g < _g1.length) {
				var data = _g1[_g];
				++_g;
				Reflect.setProperty(refCount.h[refId1],data.field,refCount.h[data.obj]);
			}
		}
	}
	,_toAnonymousStructure: function(cls,inputData,refCount,refAssign,currentId,toDataClass) {
		var rtti = dataclass_Rtti.rttiData(cls);
		var outputData = { };
		if(this.circularReferences == dataclass_CircularReferenceHandling.TrackReferences && !toDataClass && Object.prototype.hasOwnProperty.call(inputData,"$id")) {
			currentId = inputData["$id"];
		}
		var _g = 0;
		var _g1 = Reflect.fields(rtti);
		while(_g < _g1.length) {
			var field = _g1[_g];
			++_g;
			if(Object.prototype.hasOwnProperty.call(inputData,field)) {
				var input = inputData[field];
				var data = rtti[field];
				if(this.circularReferences == dataclass_CircularReferenceHandling.TrackReferences && input != null && Object.prototype.hasOwnProperty.call(input,"$ref") && (StringTools.startsWith(data,"DataClass<") || StringTools.startsWith(data,"Interface<"))) {
					var refData = { obj : Reflect.field(input,"$ref"), field : field};
					if(!refAssign.h.hasOwnProperty(currentId)) {
						refAssign.h[currentId] = [refData];
					} else {
						refAssign.h[currentId].push(refData);
					}
				} else {
					outputData[field] = this.toField(rtti[field],input,refCount,refAssign,toDataClass);
				}
			}
		}
		if(this.circularReferences == dataclass_CircularReferenceHandling.TrackReferences && !toDataClass && currentId > 0) {
			refCount.h[currentId] = outputData;
		}
		return outputData;
	}
	,_toDataClass: function(cls,json,refCount,refAssign) {
		var inputData = json;
		var currentId = 0;
		if(this.circularReferences == dataclass_CircularReferenceHandling.TrackReferences && Object.prototype.hasOwnProperty.call(inputData,"$id")) {
			currentId = inputData["$id"];
		}
		var output = Type.createInstance(cls,[this._toAnonymousStructure(cls,inputData,refCount,refAssign,currentId,true)]);
		if(currentId > 0 && this.circularReferences == dataclass_CircularReferenceHandling.TrackReferences) {
			refCount.h[currentId] = output;
		}
		return output;
	}
	,toField: function(data,value,refCount,refAssign,toDataClass) {
		if(value == null) {
			if(StringTools.startsWith(data,"Option<")) {
				return haxe_ds_Option.None;
			} else {
				return value;
			}
		}
		var _this = this.valueConverters;
		if(__map_reserved[data] != null ? _this.existsReserved(data) : _this.h.hasOwnProperty(data)) {
			var _this1 = this.valueConverters;
			return (__map_reserved[data] != null ? _this1.getReserved(data) : _this1.h[data]).input(value);
		} else if(Lambda.has(dataclass_Converter.directConversions,data)) {
			return value;
		} else if(StringTools.startsWith(data,"Array<")) {
			var arrayType = data.substring(6,data.length - 1);
			var _g = [];
			var _g1 = 0;
			var _g2 = js_Boot.__cast(value , Array);
			while(_g1 < _g2.length) _g.push(this.toField(arrayType,_g2[_g1++],refCount,refAssign,toDataClass));
			return _g;
		} else if(StringTools.startsWith(data,"Enum<")) {
			return Type.createEnum(dataclass_Converter.enumType(data.substring(5,data.length - 1)),value);
		} else if(StringTools.startsWith(data,"DataClass<") || StringTools.startsWith(data,"Interface<")) {
			if(StringTools.startsWith(data,"Interface<") && !this.useClassInfo) {
				throw new js__$Boot_HaxeError("Cannot instantiate interface " + data.substring(10,data.length - 1) + ", please use TypedJsonConverter instead.");
			}
			var classT = this.useClassInfo ? dataclass_Converter.classType(Reflect.field(value,dataclass_Converter.typedClassFieldName)) : dataclass_Converter.classType(data.substring(10,data.length - 1));
			if(toDataClass) {
				return this._toDataClass(classT,value,refCount,refAssign);
			} else {
				return this._toAnonymousStructure(classT,value,refCount,refAssign,0,toDataClass);
			}
		} else if(StringTools.startsWith(data,"Option<")) {
			return haxe_ds_Option.Some(this.toField(data.substring(7,data.length - 1),value,refCount,refAssign,toDataClass));
		} else if(StringTools.startsWith(data,"StringMap<")) {
			var mapType = data.substring(10,data.length - 1);
			var output = new haxe_ds_StringMap();
			var object = value;
			var _g3 = 0;
			var _g11 = Reflect.fields(object);
			while(_g3 < _g11.length) {
				var key = _g11[_g3];
				++_g3;
				var value1 = this.toField(mapType,object[key],refCount,refAssign,toDataClass);
				if(__map_reserved[key] != null) {
					output.setReserved(key,value1);
				} else {
					output.h[key] = value1;
				}
			}
			return output;
		} else if(StringTools.startsWith(data,"IntMap<")) {
			var mapType1 = data.substring(7,data.length - 1);
			var output1 = new haxe_ds_IntMap();
			var object1 = value;
			var _g4 = 0;
			var _g12 = Reflect.fields(object1);
			while(_g4 < _g12.length) {
				var key1 = _g12[_g4];
				++_g4;
				var key2 = Std.parseInt(key1);
				var value2 = this.toField(mapType1,object1[key1],refCount,refAssign,toDataClass);
				output1.h[key2] = value2;
			}
			return output1;
		} else {
			throw new js__$Boot_HaxeError("Unsupported DataClass converter: " + data);
		}
	}
	,fromDataClass: function(cls) {
		return this._fromDataClass(cls,new haxe_ds_ObjectMap(),0);
	}
	,_fromDataClass: function(dataClass,refs,refcounter) {
		if(refs.h.__keys__[dataClass.__id__] != null) {
			switch(this.circularReferences._hx_index) {
			case 0:
				throw new js__$Boot_HaxeError("Converting circular DataClass structure.");
			case 1:
				return null;
			case 2:
				return { "$ref" : refs.h[dataClass.__id__]};
			}
		} else {
			refs.set(dataClass,++refcounter);
		}
		var outputData = this.circularReferences == dataclass_CircularReferenceHandling.TrackReferences ? { "$id" : refcounter} : { };
		var rtti = dataclass_Rtti.rttiData(dataClass == null ? null : js_Boot.getClass(dataClass));
		var _g = 0;
		var _g1 = Reflect.fields(rtti);
		while(_g < _g1.length) {
			var field = _g1[_g];
			++_g;
			var input = Reflect.getProperty(dataClass,field);
			outputData[field] = this.convertToJsonField(rtti[field],input,refs,refcounter);
		}
		if(this.circularReferences == dataclass_CircularReferenceHandling.SetToNull) {
			refs.remove(dataClass);
		}
		if(this.useClassInfo) {
			outputData[dataclass_Converter.typedClassFieldName] = Type.getClassName(dataClass == null ? null : js_Boot.getClass(dataClass));
		}
		return outputData;
	}
	,convertToJsonField: function(data,value,refs,refcounter) {
		if(value == null) {
			return value;
		}
		var _this = this.valueConverters;
		if(__map_reserved[data] != null ? _this.existsReserved(data) : _this.h.hasOwnProperty(data)) {
			var _this1 = this.valueConverters;
			return (__map_reserved[data] != null ? _this1.getReserved(data) : _this1.h[data]).output(value);
		} else if(Lambda.has(dataclass_Converter.directConversions,data)) {
			return value;
		} else if(StringTools.startsWith(data,"Array<")) {
			var arrayType = data.substring(6,data.length - 1);
			var _g = [];
			var _g1 = 0;
			var _g2 = js_Boot.__cast(value , Array);
			while(_g1 < _g2.length) _g.push(this.convertToJsonField(arrayType,_g2[_g1++],refs,refcounter));
			return _g;
		} else if(StringTools.startsWith(data,"Enum<")) {
			return Std.string(value);
		} else if(StringTools.startsWith(data,"DataClass<") || StringTools.startsWith(data,"Interface<")) {
			if(StringTools.startsWith(data,"Interface<") && !this.useClassInfo) {
				throw new js__$Boot_HaxeError("Cannot convert interface " + data.substring(6,data.length - 1) + " to JSON, use TypedJsonConverter instead.");
			}
			return this._fromDataClass(value,refs,refcounter);
		} else if(StringTools.startsWith(data,"Option<")) {
			var option = value;
			switch(option._hx_index) {
			case 0:
				return option.v;
			case 1:
				return null;
			}
		} else if(StringTools.startsWith(data,"StringMap<")) {
			var mapType = data.substring(10,data.length - 1);
			var map = js_Boot.__cast(value , haxe_ds_StringMap);
			var output = { };
			var key = map.keys();
			while(key.hasNext()) {
				var key1 = key.next();
				output[key1] = this.convertToJsonField(mapType,__map_reserved[key1] != null ? map.getReserved(key1) : map.h[key1],refs,refcounter);
			}
			return output;
		} else if(StringTools.startsWith(data,"IntMap<")) {
			var mapType1 = data.substring(7,data.length - 1);
			var map1 = js_Boot.__cast(value , haxe_ds_IntMap);
			var output1 = { };
			var key2 = map1.keys();
			while(key2.hasNext()) {
				var key3 = key2.next();
				var value1 = this.convertToJsonField(mapType1,map1.h[key3],refs,refcounter);
				output1[key3 == null ? "null" : "" + key3] = value1;
			}
			return output1;
		} else {
			throw new js__$Boot_HaxeError("Unsupported DataClass converter: " + data);
		}
	}
	,__class__: dataclass_Converter
};
var dataclass_StringIntValueConverter = function() {
};
$hxClasses["dataclass.StringIntValueConverter"] = dataclass_StringIntValueConverter;
dataclass_StringIntValueConverter.__name__ = ["dataclass","StringIntValueConverter"];
dataclass_StringIntValueConverter.prototype = {
	input: function(input) {
		return Std.parseInt(StringTools.replace(input," ",""));
	}
	,output: function(input) {
		if(input == null) {
			return "null";
		} else {
			return "" + input;
		}
	}
	,__class__: dataclass_StringIntValueConverter
};
var dataclass_StringBoolValueConverter = function(boolValues) {
	this.boolValues = boolValues;
};
$hxClasses["dataclass.StringBoolValueConverter"] = dataclass_StringBoolValueConverter;
dataclass_StringBoolValueConverter.__name__ = ["dataclass","StringBoolValueConverter"];
dataclass_StringBoolValueConverter.prototype = {
	input: function(input) {
		return this.boolValues.tru == StringTools.trim(input);
	}
	,output: function(input) {
		if(input == true) {
			return this.boolValues.tru;
		} else {
			return this.boolValues.fals;
		}
	}
	,__class__: dataclass_StringBoolValueConverter
};
var dataclass_StringFloatValueConverter = function(separator) {
	this.separator = separator;
	this.other = separator == "," ? "." : ",";
};
$hxClasses["dataclass.StringFloatValueConverter"] = dataclass_StringFloatValueConverter;
dataclass_StringFloatValueConverter.__name__ = ["dataclass","StringFloatValueConverter"];
dataclass_StringFloatValueConverter.prototype = {
	input: function(input) {
		return parseFloat(StringTools.replace(StringTools.replace(StringTools.replace(input," ",""),this.other,""),this.separator,"."));
	}
	,output: function(input) {
		return StringTools.replace(input == null ? "null" : "" + input,".",this.separator);
	}
	,__class__: dataclass_StringFloatValueConverter
};
var dataclass_StringCurrencyValueConverter = function(separator,cents) {
	if(cents == null) {
		cents = 100;
	}
	this.floatConverter = new dataclass_StringFloatValueConverter(separator);
	this.separator = separator;
	this.cents = cents;
};
$hxClasses["dataclass.StringCurrencyValueConverter"] = dataclass_StringCurrencyValueConverter;
dataclass_StringCurrencyValueConverter.__name__ = ["dataclass","StringCurrencyValueConverter"];
dataclass_StringCurrencyValueConverter.prototype = {
	input: function(input) {
		return this.floatConverter.input(input) * this.cents | 0;
	}
	,output: function(input) {
		var maxlen = (input == null ? "null" : "" + input).length;
		var output = this.floatConverter.output(input / this.cents);
		return HxOverrides.substr(output,0,maxlen + (output.indexOf(this.separator) >= 0 ? 1 : 0));
	}
	,__class__: dataclass_StringCurrencyValueConverter
};
var dataclass_StringDateValueConverter = function(format) {
	this.format = format;
};
$hxClasses["dataclass.StringDateValueConverter"] = dataclass_StringDateValueConverter;
dataclass_StringDateValueConverter.__name__ = ["dataclass","StringDateValueConverter"];
dataclass_StringDateValueConverter.prototype = {
	input: function(input) {
		return HxOverrides.strDate(input);
	}
	,output: function(input) {
		return DateTools.format(input,this.format);
	}
	,__class__: dataclass_StringDateValueConverter
};
var dataclass_DateValueConverter = function(format) {
	this.format = format;
};
$hxClasses["dataclass.DateValueConverter"] = dataclass_DateValueConverter;
dataclass_DateValueConverter.__name__ = ["dataclass","DateValueConverter"];
dataclass_DateValueConverter.getTimeZone = function() {
	var now = new Date();
	now = new Date(now.getFullYear(),now.getMonth(),now.getDate(),0,0,0);
	return 86400000. * Math.round(now.getTime() / 24 / 3600 / 1000) - now.getTime();
};
dataclass_DateValueConverter.prototype = {
	input: function(input) {
		var s = StringTools.trim(input);
		if(StringTools.endsWith(s,"Z")) {
			return new Date(s);
		}
		return HxOverrides.strDate(s);
	}
	,output: function(input) {
		var time;
		if(StringTools.endsWith(this.format,"Z")) {
			var t = -dataclass_DateValueConverter.getTimeZone();
			time = new Date(input.getTime() + t);
		} else {
			time = input;
		}
		return DateTools.format(time,this.format);
	}
	,__class__: dataclass_DateValueConverter
};
var dataclass_JsonConverter = function(options) {
	dataclass_Converter.call(this,options);
};
$hxClasses["dataclass.JsonConverter"] = dataclass_JsonConverter;
dataclass_JsonConverter.__name__ = ["dataclass","JsonConverter"];
dataclass_JsonConverter.fromJson = function(cls,json) {
	return dataclass_JsonConverter.current.toDataClass(cls,json);
};
dataclass_JsonConverter.toJson = function(cls) {
	return dataclass_JsonConverter.current.fromDataClass(cls);
};
dataclass_JsonConverter.__super__ = dataclass_Converter;
dataclass_JsonConverter.prototype = $extend(dataclass_Converter.prototype,{
	__class__: dataclass_JsonConverter
});
var dataclass_StringJsonConverter = function(options) {
	if(options == null) {
		options = { };
	}
	dataclass_JsonConverter.call(this,options);
	var value = new dataclass_StringIntValueConverter();
	var _this = this.valueConverters;
	if(__map_reserved["Int"] != null) {
		_this.setReserved("Int",value);
	} else {
		_this.h["Int"] = value;
	}
	var this1 = this.valueConverters;
	var value1 = new dataclass_StringDateValueConverter(Object.prototype.hasOwnProperty.call(options,"dateFormat") ? options.dateFormat : "%Y-%m-%d %H:%M:%S");
	var _this1 = this1;
	if(__map_reserved["Date"] != null) {
		_this1.setReserved("Date",value1);
	} else {
		_this1.h["Date"] = value1;
	}
	var this2 = this.valueConverters;
	var value2 = new dataclass_StringFloatValueConverter(Object.prototype.hasOwnProperty.call(options,"floatDelimiter") ? options.floatDelimiter : ".");
	var _this2 = this2;
	if(__map_reserved["Float"] != null) {
		_this2.setReserved("Float",value2);
	} else {
		_this2.h["Float"] = value2;
	}
	var this3 = this.valueConverters;
	var value3 = new dataclass_StringBoolValueConverter(Object.prototype.hasOwnProperty.call(options,"boolValues") ? { tru : options.boolValues.tru, fals : options.boolValues.fals} : { tru : "1", fals : "0"});
	var _this3 = this3;
	if(__map_reserved["Bool"] != null) {
		_this3.setReserved("Bool",value3);
	} else {
		_this3.h["Bool"] = value3;
	}
};
$hxClasses["dataclass.StringJsonConverter"] = dataclass_StringJsonConverter;
dataclass_StringJsonConverter.__name__ = ["dataclass","StringJsonConverter"];
dataclass_StringJsonConverter.__super__ = dataclass_JsonConverter;
dataclass_StringJsonConverter.prototype = $extend(dataclass_JsonConverter.prototype,{
	__class__: dataclass_StringJsonConverter
});
var dataclass_TypedJsonConverter = function(options) {
	dataclass_Converter.call(this,options);
	this.useClassInfo = true;
};
$hxClasses["dataclass.TypedJsonConverter"] = dataclass_TypedJsonConverter;
dataclass_TypedJsonConverter.__name__ = ["dataclass","TypedJsonConverter"];
dataclass_TypedJsonConverter.fromTypedJson = function(cls,json) {
	return dataclass_TypedJsonConverter.current.toDataClass(cls,json);
};
dataclass_TypedJsonConverter.toTypedJson = function(cls) {
	return dataclass_TypedJsonConverter.current.fromDataClass(cls);
};
dataclass_TypedJsonConverter.__super__ = dataclass_Converter;
dataclass_TypedJsonConverter.prototype = $extend(dataclass_Converter.prototype,{
	__class__: dataclass_TypedJsonConverter
});
var haxe_Timer = function(time_ms) {
	var me = this;
	this.id = setInterval(function() {
		me.run();
	},time_ms);
};
$hxClasses["haxe.Timer"] = haxe_Timer;
haxe_Timer.__name__ = ["haxe","Timer"];
haxe_Timer.delay = function(f,time_ms) {
	var t = new haxe_Timer(time_ms);
	t.run = function() {
		t.stop();
		f();
	};
	return t;
};
haxe_Timer.prototype = {
	stop: function() {
		if(this.id == null) {
			return;
		}
		clearInterval(this.id);
		this.id = null;
	}
	,run: function() {
	}
	,__class__: haxe_Timer
};
var haxe_ds_IntMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.IntMap"] = haxe_ds_IntMap;
haxe_ds_IntMap.__name__ = ["haxe","ds","IntMap"];
haxe_ds_IntMap.__interfaces__ = [haxe_IMap];
haxe_ds_IntMap.prototype = {
	keys: function() {
		var a = [];
		for( var key in this.h ) if(this.h.hasOwnProperty(key)) {
			a.push(key | 0);
		}
		return HxOverrides.iter(a);
	}
	,__class__: haxe_ds_IntMap
};
var haxe_ds_List = function() {
	this.length = 0;
};
$hxClasses["haxe.ds.List"] = haxe_ds_List;
haxe_ds_List.__name__ = ["haxe","ds","List"];
haxe_ds_List.prototype = {
	add: function(item) {
		var x = new haxe_ds__$List_ListNode(item,null);
		if(this.h == null) {
			this.h = x;
		} else {
			this.q.next = x;
		}
		this.q = x;
		this.length++;
	}
	,iterator: function() {
		return new haxe_ds__$List_ListIterator(this.h);
	}
	,map: function(f) {
		var b = new haxe_ds_List();
		var l = this.h;
		while(l != null) {
			var v = l.item;
			l = l.next;
			b.add(f(v));
		}
		return b;
	}
	,__class__: haxe_ds_List
};
var haxe_ds__$List_ListNode = function(item,next) {
	this.item = item;
	this.next = next;
};
$hxClasses["haxe.ds._List.ListNode"] = haxe_ds__$List_ListNode;
haxe_ds__$List_ListNode.__name__ = ["haxe","ds","_List","ListNode"];
haxe_ds__$List_ListNode.prototype = {
	__class__: haxe_ds__$List_ListNode
};
var haxe_ds__$List_ListIterator = function(head) {
	this.head = head;
};
$hxClasses["haxe.ds._List.ListIterator"] = haxe_ds__$List_ListIterator;
haxe_ds__$List_ListIterator.__name__ = ["haxe","ds","_List","ListIterator"];
haxe_ds__$List_ListIterator.prototype = {
	hasNext: function() {
		return this.head != null;
	}
	,next: function() {
		var val = this.head.item;
		this.head = this.head.next;
		return val;
	}
	,__class__: haxe_ds__$List_ListIterator
};
var haxe_ds_ObjectMap = function() {
	this.h = { __keys__ : { }};
};
$hxClasses["haxe.ds.ObjectMap"] = haxe_ds_ObjectMap;
haxe_ds_ObjectMap.__name__ = ["haxe","ds","ObjectMap"];
haxe_ds_ObjectMap.__interfaces__ = [haxe_IMap];
haxe_ds_ObjectMap.prototype = {
	set: function(key,value) {
		var id = key.__id__ || (key.__id__ = ++haxe_ds_ObjectMap.count);
		this.h[id] = value;
		this.h.__keys__[id] = key;
	}
	,remove: function(key) {
		var id = key.__id__;
		if(this.h.__keys__[id] == null) {
			return false;
		}
		delete(this.h[id]);
		delete(this.h.__keys__[id]);
		return true;
	}
	,__class__: haxe_ds_ObjectMap
};
var haxe_ds_Option = $hxEnums["haxe.ds.Option"] = { __ename__ : true, __constructs__ : ["Some","None"]
	,Some: ($_=function(v) { return {_hx_index:0,v:v,__enum__:"haxe.ds.Option",toString:$estr}; },$_.__params__ = ["v"],$_)
	,None: {_hx_index:1,__enum__:"haxe.ds.Option",toString:$estr}
};
var haxe_io_Path = function(path) {
	switch(path) {
	case ".":case "..":
		this.dir = path;
		this.file = "";
		return;
	}
	var c1 = path.lastIndexOf("/");
	var c2 = path.lastIndexOf("\\");
	if(c1 < c2) {
		this.dir = HxOverrides.substr(path,0,c2);
		path = HxOverrides.substr(path,c2 + 1,null);
		this.backslash = true;
	} else if(c2 < c1) {
		this.dir = HxOverrides.substr(path,0,c1);
		path = HxOverrides.substr(path,c1 + 1,null);
	} else {
		this.dir = null;
	}
	var cp = path.lastIndexOf(".");
	if(cp != -1) {
		this.ext = HxOverrides.substr(path,cp + 1,null);
		this.file = HxOverrides.substr(path,0,cp);
	} else {
		this.ext = null;
		this.file = path;
	}
};
$hxClasses["haxe.io.Path"] = haxe_io_Path;
haxe_io_Path.__name__ = ["haxe","io","Path"];
haxe_io_Path.extension = function(path) {
	var s = new haxe_io_Path(path);
	if(s.ext == null) {
		return "";
	}
	return s.ext;
};
haxe_io_Path.prototype = {
	__class__: haxe_io_Path
};
var haxe_rtti_Meta = function() { };
$hxClasses["haxe.rtti.Meta"] = haxe_rtti_Meta;
haxe_rtti_Meta.__name__ = ["haxe","rtti","Meta"];
haxe_rtti_Meta.getType = function(t) {
	var meta = haxe_rtti_Meta.getMeta(t);
	if(meta == null || meta.obj == null) {
		return { };
	} else {
		return meta.obj;
	}
};
haxe_rtti_Meta.getMeta = function(t) {
	return t.__meta__;
};
var haxe_xml_XmlParserException = function(message,xml,position) {
	this.xml = xml;
	this.message = message;
	this.position = position;
	this.lineNumber = 1;
	this.positionAtLine = 0;
	var _g1 = 0;
	while(_g1 < position) {
		var c = xml.charCodeAt(_g1++);
		if(c == 10) {
			this.lineNumber++;
			this.positionAtLine = 0;
		} else if(c != 13) {
			this.positionAtLine++;
		}
	}
};
$hxClasses["haxe.xml.XmlParserException"] = haxe_xml_XmlParserException;
haxe_xml_XmlParserException.__name__ = ["haxe","xml","XmlParserException"];
haxe_xml_XmlParserException.prototype = {
	toString: function() {
		return Type.getClassName(js_Boot.getClass(this)) + ": " + this.message + " at line " + this.lineNumber + " char " + this.positionAtLine;
	}
	,__class__: haxe_xml_XmlParserException
};
var haxe_xml_Parser = function() { };
$hxClasses["haxe.xml.Parser"] = haxe_xml_Parser;
haxe_xml_Parser.__name__ = ["haxe","xml","Parser"];
haxe_xml_Parser.parse = function(str,strict) {
	if(strict == null) {
		strict = false;
	}
	var doc = Xml.createDocument();
	haxe_xml_Parser.doParse(str,strict,0,doc);
	return doc;
};
haxe_xml_Parser.doParse = function(str,strict,p,parent) {
	if(p == null) {
		p = 0;
	}
	var xml = null;
	var state = 1;
	var next = 1;
	var aname = null;
	var start = 0;
	var nsubs = 0;
	var nbrackets = 0;
	var c = str.charCodeAt(p);
	var buf = new StringBuf();
	var escapeNext = 1;
	var attrValQuote = -1;
	while(c == c) {
		switch(state) {
		case 0:
			switch(c) {
			case 9:case 10:case 13:case 32:
				break;
			default:
				state = next;
				continue;
			}
			break;
		case 1:
			if(c == 60) {
				state = 0;
				next = 2;
			} else {
				start = p;
				state = 13;
				continue;
			}
			break;
		case 2:
			switch(c) {
			case 33:
				if(str.charCodeAt(p + 1) == 91) {
					p += 2;
					if(HxOverrides.substr(str,p,6).toUpperCase() != "CDATA[") {
						throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected <![CDATA[",str,p));
					}
					p += 5;
					state = 17;
					start = p + 1;
				} else if(str.charCodeAt(p + 1) == 68 || str.charCodeAt(p + 1) == 100) {
					if(HxOverrides.substr(str,p + 2,6).toUpperCase() != "OCTYPE") {
						throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected <!DOCTYPE",str,p));
					}
					p += 8;
					state = 16;
					start = p + 1;
				} else if(str.charCodeAt(p + 1) != 45 || str.charCodeAt(p + 2) != 45) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected <!--",str,p));
				} else {
					p += 2;
					state = 15;
					start = p + 1;
				}
				break;
			case 47:
				if(parent == null) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected node name",str,p));
				}
				start = p + 1;
				state = 0;
				next = 10;
				break;
			case 63:
				state = 14;
				start = p;
				break;
			default:
				state = 3;
				start = p;
				continue;
			}
			break;
		case 3:
			if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45)) {
				if(p == start) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected node name",str,p));
				}
				xml = Xml.createElement(HxOverrides.substr(str,start,p - start));
				parent.addChild(xml);
				++nsubs;
				state = 0;
				next = 4;
				continue;
			}
			break;
		case 4:
			switch(c) {
			case 47:
				state = 11;
				break;
			case 62:
				state = 9;
				break;
			default:
				state = 5;
				start = p;
				continue;
			}
			break;
		case 5:
			if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45)) {
				if(start == p) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected attribute name",str,p));
				}
				var tmp = HxOverrides.substr(str,start,p - start);
				aname = tmp;
				if(xml.exists(tmp)) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Duplicate attribute [" + tmp + "]",str,p));
				}
				state = 0;
				next = 6;
				continue;
			}
			break;
		case 6:
			if(c == 61) {
				state = 0;
				next = 7;
			} else {
				throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected =",str,p));
			}
			break;
		case 7:
			switch(c) {
			case 34:case 39:
				buf = new StringBuf();
				state = 8;
				start = p + 1;
				attrValQuote = c;
				break;
			default:
				throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected \"",str,p));
			}
			break;
		case 8:
			switch(c) {
			case 38:
				var len = p - start;
				buf.b += len == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len);
				state = 18;
				escapeNext = 8;
				start = p + 1;
				break;
			case 60:case 62:
				if(strict) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Invalid unescaped " + String.fromCharCode(c) + " in attribute value",str,p));
				} else if(c == attrValQuote) {
					var len1 = p - start;
					buf.b += len1 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len1);
					var val = buf.b;
					buf = new StringBuf();
					xml.set(aname,val);
					state = 0;
					next = 4;
				}
				break;
			default:
				if(c == attrValQuote) {
					var len2 = p - start;
					buf.b += len2 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len2);
					var val1 = buf.b;
					buf = new StringBuf();
					xml.set(aname,val1);
					state = 0;
					next = 4;
				}
			}
			break;
		case 9:
			p = haxe_xml_Parser.doParse(str,strict,p,xml);
			start = p;
			state = 1;
			break;
		case 10:
			if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45)) {
				if(start == p) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected node name",str,p));
				}
				if(parent.nodeType != Xml.Element) {
					throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + parent.nodeType);
				}
				if(HxOverrides.substr(str,start,p - start) != parent.nodeName) {
					if(parent.nodeType != Xml.Element) {
						throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + parent.nodeType);
					}
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected </" + parent.nodeName + ">",str,p));
				}
				state = 0;
				next = 12;
				continue;
			}
			break;
		case 11:
			if(c == 62) {
				state = 1;
			} else {
				throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected >",str,p));
			}
			break;
		case 12:
			if(c == 62) {
				if(nsubs == 0) {
					parent.addChild(Xml.createPCData(""));
				}
				return p;
			} else {
				throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected >",str,p));
			}
			break;
		case 13:
			if(c == 60) {
				var len3 = p - start;
				buf.b += len3 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len3);
				var child = Xml.createPCData(buf.b);
				buf = new StringBuf();
				parent.addChild(child);
				++nsubs;
				state = 0;
				next = 2;
			} else if(c == 38) {
				var len4 = p - start;
				buf.b += len4 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len4);
				state = 18;
				escapeNext = 13;
				start = p + 1;
			}
			break;
		case 14:
			if(c == 63 && str.charCodeAt(p + 1) == 62) {
				++p;
				parent.addChild(Xml.createProcessingInstruction(HxOverrides.substr(str,start + 1,p - start - 2)));
				++nsubs;
				state = 1;
			}
			break;
		case 15:
			if(c == 45 && str.charCodeAt(p + 1) == 45 && str.charCodeAt(p + 2) == 62) {
				parent.addChild(Xml.createComment(HxOverrides.substr(str,start,p - start)));
				++nsubs;
				p += 2;
				state = 1;
			}
			break;
		case 16:
			if(c == 91) {
				++nbrackets;
			} else if(c == 93) {
				--nbrackets;
			} else if(c == 62 && nbrackets == 0) {
				parent.addChild(Xml.createDocType(HxOverrides.substr(str,start,p - start)));
				++nsubs;
				state = 1;
			}
			break;
		case 17:
			if(c == 93 && str.charCodeAt(p + 1) == 93 && str.charCodeAt(p + 2) == 62) {
				parent.addChild(Xml.createCData(HxOverrides.substr(str,start,p - start)));
				++nsubs;
				p += 2;
				state = 1;
			}
			break;
		case 18:
			if(c == 59) {
				var s = HxOverrides.substr(str,start,p - start);
				if(s.charCodeAt(0) == 35) {
					var c1 = s.charCodeAt(1) == 120 ? Std.parseInt("0" + HxOverrides.substr(s,1,s.length - 1)) : Std.parseInt(HxOverrides.substr(s,1,s.length - 1));
					buf.b += String.fromCharCode(c1);
				} else {
					var _this = haxe_xml_Parser.escapes;
					if(!(__map_reserved[s] != null ? _this.existsReserved(s) : _this.h.hasOwnProperty(s))) {
						if(strict) {
							throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Undefined entity: " + s,str,p));
						}
						buf.b += Std.string("&" + s + ";");
					} else {
						var _this1 = haxe_xml_Parser.escapes;
						buf.b += Std.string(__map_reserved[s] != null ? _this1.getReserved(s) : _this1.h[s]);
					}
				}
				start = p + 1;
				state = escapeNext;
			} else if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45) && c != 35) {
				if(strict) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Invalid character in entity: " + String.fromCharCode(c),str,p));
				}
				buf.b += "&";
				var len5 = p - start;
				buf.b += len5 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len5);
				start = p--;
				state = escapeNext;
			}
			break;
		}
		c = str.charCodeAt(++p);
	}
	if(state == 1) {
		start = p;
		state = 13;
	}
	if(state == 13) {
		if(p != start || nsubs == 0) {
			var len6 = p - start;
			buf.b += len6 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len6);
			parent.addChild(Xml.createPCData(buf.b));
		}
		return p;
	}
	if(!strict && state == 18 && escapeNext == 13) {
		buf.b += "&";
		var len7 = p - start;
		buf.b += len7 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len7);
		parent.addChild(Xml.createPCData(buf.b));
		return p;
	}
	throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Unexpected end",str,p));
};
var haxe_xml_Printer = function(pretty) {
	this.output = new StringBuf();
	this.pretty = pretty;
};
$hxClasses["haxe.xml.Printer"] = haxe_xml_Printer;
haxe_xml_Printer.__name__ = ["haxe","xml","Printer"];
haxe_xml_Printer.print = function(xml,pretty) {
	if(pretty == null) {
		pretty = false;
	}
	var printer = new haxe_xml_Printer(pretty);
	printer.writeNode(xml,"");
	return printer.output.b;
};
haxe_xml_Printer.prototype = {
	writeNode: function(value,tabs) {
		switch(value.nodeType) {
		case 0:
			this.output.b += Std.string(tabs + "<");
			if(value.nodeType != Xml.Element) {
				throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + value.nodeType);
			}
			this.output.b += Std.string(value.nodeName);
			var attribute = value.attributes();
			while(attribute.hasNext()) {
				var attribute1 = attribute.next();
				this.output.b += Std.string(" " + attribute1 + "=\"");
				var input = StringTools.htmlEscape(value.get(attribute1),true);
				this.output.b += Std.string(input);
				this.output.b += "\"";
			}
			if(this.hasChildren(value)) {
				this.output.b += ">";
				if(this.pretty) {
					this.output.b += "\n";
				}
				if(value.nodeType != Xml.Document && value.nodeType != Xml.Element) {
					throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + value.nodeType);
				}
				var child = HxOverrides.iter(value.children);
				while(child.hasNext()) this.writeNode(child.next(),this.pretty ? tabs + "\t" : tabs);
				this.output.b += Std.string(tabs + "</");
				if(value.nodeType != Xml.Element) {
					throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + value.nodeType);
				}
				this.output.b += Std.string(value.nodeName);
				this.output.b += ">";
				if(this.pretty) {
					this.output.b += "\n";
				}
			} else {
				this.output.b += "/>";
				if(this.pretty) {
					this.output.b += "\n";
				}
			}
			break;
		case 1:
			if(value.nodeType == Xml.Document || value.nodeType == Xml.Element) {
				throw new js__$Boot_HaxeError("Bad node type, unexpected " + value.nodeType);
			}
			var nodeValue = value.nodeValue;
			if(nodeValue.length != 0) {
				var input1 = tabs + StringTools.htmlEscape(nodeValue);
				this.output.b += Std.string(input1);
				if(this.pretty) {
					this.output.b += "\n";
				}
			}
			break;
		case 2:
			this.output.b += Std.string(tabs + "<![CDATA[");
			if(value.nodeType == Xml.Document || value.nodeType == Xml.Element) {
				throw new js__$Boot_HaxeError("Bad node type, unexpected " + value.nodeType);
			}
			this.output.b += Std.string(StringTools.trim(value.nodeValue));
			this.output.b += "]]>";
			if(this.pretty) {
				this.output.b += "\n";
			}
			break;
		case 3:
			if(value.nodeType == Xml.Document || value.nodeType == Xml.Element) {
				throw new js__$Boot_HaxeError("Bad node type, unexpected " + value.nodeType);
			}
			var commentContent = value.nodeValue;
			var _this_r = new RegExp("[\n\r\t]+","g".split("u").join(""));
			commentContent = commentContent.replace(_this_r,"");
			commentContent = "<!--" + commentContent + "-->";
			this.output.b += tabs == null ? "null" : "" + tabs;
			this.output.b += Std.string(StringTools.trim(commentContent));
			if(this.pretty) {
				this.output.b += "\n";
			}
			break;
		case 4:
			if(value.nodeType == Xml.Document || value.nodeType == Xml.Element) {
				throw new js__$Boot_HaxeError("Bad node type, unexpected " + value.nodeType);
			}
			this.output.b += Std.string("<!DOCTYPE " + value.nodeValue + ">");
			if(this.pretty) {
				this.output.b += "\n";
			}
			break;
		case 5:
			if(value.nodeType == Xml.Document || value.nodeType == Xml.Element) {
				throw new js__$Boot_HaxeError("Bad node type, unexpected " + value.nodeType);
			}
			this.output.b += Std.string("<?" + value.nodeValue + "?>");
			if(this.pretty) {
				this.output.b += "\n";
			}
			break;
		case 6:
			if(value.nodeType != Xml.Document && value.nodeType != Xml.Element) {
				throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + value.nodeType);
			}
			var child1 = HxOverrides.iter(value.children);
			while(child1.hasNext()) this.writeNode(child1.next(),tabs);
			break;
		}
	}
	,hasChildren: function(value) {
		if(value.nodeType != Xml.Document && value.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + value.nodeType);
		}
		var child = HxOverrides.iter(value.children);
		while(child.hasNext()) {
			var child1 = child.next();
			switch(child1.nodeType) {
			case 0:case 1:
				return true;
			case 2:case 3:
				if(child1.nodeType == Xml.Document || child1.nodeType == Xml.Element) {
					throw new js__$Boot_HaxeError("Bad node type, unexpected " + child1.nodeType);
				}
				if(StringTools.ltrim(child1.nodeValue).length != 0) {
					return true;
				}
				break;
			default:
			}
		}
		return false;
	}
	,__class__: haxe_xml_Printer
};
var hxlazy_Lazy = function() { };
$hxClasses["hxlazy.Lazy"] = hxlazy_Lazy;
hxlazy_Lazy.__name__ = ["hxlazy","Lazy"];
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
$hxClasses["js._Boot.HaxeError"] = js__$Boot_HaxeError;
js__$Boot_HaxeError.__name__ = ["js","_Boot","HaxeError"];
js__$Boot_HaxeError.wrap = function(val) {
	if((val instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	__class__: js__$Boot_HaxeError
});
var js_Boot = function() { };
$hxClasses["js.Boot"] = js_Boot;
js_Boot.__name__ = ["js","Boot"];
js_Boot.getClass = function(o) {
	if((o instanceof Array) && o.__enum__ == null) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o.__enum__) {
			var e = $hxEnums[o.__enum__];
			var n = e.__constructs__[o._hx_index];
			var con = e[n];
			if(con.__params__) {
				s += "\t";
				var tmp = n + "(";
				var _g = [];
				var _g1 = 0;
				var _g2 = con.__params__;
				while(_g1 < _g2.length) {
					var p = _g2[_g1];
					++_g1;
					_g.push(js_Boot.__string_rec(o[p],s));
				}
				return tmp + _g.join(",") + ")";
			} else {
				return n;
			}
		}
		if((o instanceof Array)) {
			var l = o.length;
			var i;
			var str = "[";
			s += "\t";
			var _g11 = 0;
			var _g3 = l;
			while(_g11 < _g3) {
				var i1 = _g11++;
				str += (i1 > 0 ? "," : "") + js_Boot.__string_rec(o[i1],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e1 ) {
			var e2 = (e1 instanceof js__$Boot_HaxeError) ? e1.val : e1;
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str1 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str1.length != 2) {
			str1 += ", \n";
		}
		str1 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str1 += "\n" + s + "}";
		return str1;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g1 = 0;
		var _g = intf.length;
		while(_g1 < _g) {
			var i = intf[_g1++];
			if(i == cl || js_Boot.__interfLoop(i,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		if((o instanceof Array)) {
			return o.__enum__ == null;
		} else {
			return false;
		}
		break;
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return true;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return ((o | 0) === o);
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if((o instanceof cl)) {
					return true;
				}
				if(js_Boot.__interfLoop(js_Boot.getClass(o),cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if((o instanceof cl)) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class ? o.__name__ != null : false) {
			return true;
		}
		if(cl == Enum ? o.__ename__ != null : false) {
			return true;
		}
		return $hxEnums[o.__enum__] == cl;
	}
};
js_Boot.__cast = function(o,t) {
	if(js_Boot.__instanceof(o,t)) {
		return o;
	} else {
		throw new js__$Boot_HaxeError("Cannot cast " + Std.string(o) + " to " + Std.string(t));
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var js_html_compat_ArrayBuffer = function(a) {
	if((a instanceof Array) && a.__enum__ == null) {
		this.a = a;
		this.byteLength = a.length;
	} else {
		var len = a;
		this.a = [];
		var _g1 = 0;
		while(_g1 < len) this.a[_g1++] = 0;
		this.byteLength = len;
	}
};
$hxClasses["js.html.compat.ArrayBuffer"] = js_html_compat_ArrayBuffer;
js_html_compat_ArrayBuffer.__name__ = ["js","html","compat","ArrayBuffer"];
js_html_compat_ArrayBuffer.sliceImpl = function(begin,end) {
	var u = new Uint8Array(this,begin,end == null ? null : end - begin);
	var result = new ArrayBuffer(u.byteLength);
	new Uint8Array(result).set(u);
	return result;
};
js_html_compat_ArrayBuffer.prototype = {
	slice: function(begin,end) {
		return new js_html_compat_ArrayBuffer(this.a.slice(begin,end));
	}
	,__class__: js_html_compat_ArrayBuffer
};
var js_html_compat_Uint8Array = function() { };
$hxClasses["js.html.compat.Uint8Array"] = js_html_compat_Uint8Array;
js_html_compat_Uint8Array.__name__ = ["js","html","compat","Uint8Array"];
js_html_compat_Uint8Array._new = function(arg1,offset,length) {
	var arr;
	if(typeof(arg1) == "number") {
		arr = [];
		var _g1 = 0;
		var _g = arg1;
		while(_g1 < _g) {
			var i = _g1++;
			arr[i] = 0;
		}
		arr.byteLength = arr.length;
		arr.byteOffset = 0;
		arr.buffer = new js_html_compat_ArrayBuffer(arr);
	} else if((arg1 instanceof js_html_compat_ArrayBuffer)) {
		var buffer = arg1;
		if(offset == null) {
			offset = 0;
		}
		if(length == null) {
			length = buffer.byteLength - offset;
		}
		if(offset == 0) {
			arr = buffer.a;
		} else {
			arr = buffer.a.slice(offset,offset + length);
		}
		arr.byteLength = arr.length;
		arr.byteOffset = offset;
		arr.buffer = buffer;
	} else if((arg1 instanceof Array) && arg1.__enum__ == null) {
		arr = arg1.slice();
		arr.byteLength = arr.length;
		arr.byteOffset = 0;
		arr.buffer = new js_html_compat_ArrayBuffer(arr);
	} else {
		throw new js__$Boot_HaxeError("TODO " + Std.string(arg1));
	}
	arr.subarray = js_html_compat_Uint8Array._subarray;
	arr.set = js_html_compat_Uint8Array._set;
	return arr;
};
js_html_compat_Uint8Array._set = function(arg,offset) {
	if(offset == null) {
		offset = 0;
	}
	if((arg.buffer instanceof js_html_compat_ArrayBuffer)) {
		var a = arg;
		if(arg.byteLength + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g1 = 0;
		var _g = arg.byteLength;
		while(_g1 < _g) {
			var i = _g1++;
			this[i + offset] = a[i];
		}
	} else if((arg instanceof Array) && arg.__enum__ == null) {
		var a1 = arg;
		if(a1.length + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g11 = 0;
		var _g2 = a1.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			this[i1 + offset] = a1[i1];
		}
	} else {
		throw new js__$Boot_HaxeError("TODO");
	}
};
js_html_compat_Uint8Array._subarray = function(start,end) {
	var a = js_html_compat_Uint8Array._new(this.slice(start,end));
	a.byteOffset = start;
	return a;
};
var markdown_Node = function() { };
$hxClasses["markdown.Node"] = markdown_Node;
markdown_Node.__name__ = ["markdown","Node"];
markdown_Node.prototype = {
	__class__: markdown_Node
};
var markdown_NodeVisitor = function() { };
$hxClasses["markdown.NodeVisitor"] = markdown_NodeVisitor;
markdown_NodeVisitor.__name__ = ["markdown","NodeVisitor"];
markdown_NodeVisitor.prototype = {
	__class__: markdown_NodeVisitor
};
var markdown_ElementNode = function(tag,children) {
	this.tag = tag;
	this.children = children;
	this.attributes = new haxe_ds_StringMap();
};
$hxClasses["markdown.ElementNode"] = markdown_ElementNode;
markdown_ElementNode.__name__ = ["markdown","ElementNode"];
markdown_ElementNode.__interfaces__ = [markdown_Node];
markdown_ElementNode.empty = function(tag) {
	return new markdown_ElementNode(tag,null);
};
markdown_ElementNode.withTag = function(tag) {
	return new markdown_ElementNode(tag,[]);
};
markdown_ElementNode.text = function(tag,text) {
	return new markdown_ElementNode(tag,[new markdown_TextNode(text)]);
};
markdown_ElementNode.prototype = {
	isEmpty: function() {
		return this.children == null;
	}
	,accept: function(visitor) {
		if(visitor.visitElementBefore(this)) {
			var _g = 0;
			var _g1 = this.children;
			while(_g < _g1.length) _g1[_g++].accept(visitor);
			visitor.visitElementAfter(this);
		}
	}
	,__class__: markdown_ElementNode
};
var markdown_TextNode = function(text) {
	this.text = text;
};
$hxClasses["markdown.TextNode"] = markdown_TextNode;
markdown_TextNode.__name__ = ["markdown","TextNode"];
markdown_TextNode.__interfaces__ = [markdown_Node];
markdown_TextNode.prototype = {
	accept: function(visitor) {
		visitor.visitText(this);
	}
	,__class__: markdown_TextNode
};
var markdown_BlockParser = function(lines,document) {
	this.lines = lines;
	this.document = document;
	this.pos = 0;
};
$hxClasses["markdown.BlockParser"] = markdown_BlockParser;
markdown_BlockParser.__name__ = ["markdown","BlockParser"];
markdown_BlockParser.prototype = {
	get_current: function() {
		return this.lines[this.pos];
	}
	,get_next: function() {
		if(this.pos >= this.lines.length - 1) {
			return null;
		}
		return this.lines[this.pos + 1];
	}
	,advance: function() {
		this.pos++;
	}
	,get_isDone: function() {
		return this.pos >= this.lines.length;
	}
	,matches: function(ereg) {
		if(this.pos >= this.lines.length) {
			return false;
		}
		return ereg.match(this.lines[this.pos]);
	}
	,matchesNext: function(ereg) {
		if(this.get_next() == null) {
			return false;
		}
		return ereg.match(this.get_next());
	}
	,__class__: markdown_BlockParser
	,__properties__: {get_isDone:"get_isDone",get_next:"get_next",get_current:"get_current"}
};
var markdown_BlockSyntax = function() {
};
$hxClasses["markdown.BlockSyntax"] = markdown_BlockSyntax;
markdown_BlockSyntax.__name__ = ["markdown","BlockSyntax"];
markdown_BlockSyntax.__properties__ = {get_syntaxes:"get_syntaxes"};
markdown_BlockSyntax.get_syntaxes = function() {
	if(markdown_BlockSyntax.syntaxes == null) {
		markdown_BlockSyntax.syntaxes = [new markdown_EmptyBlockSyntax(),new markdown_BlockHtmlSyntax(),new markdown_SetextHeaderSyntax(),new markdown_HeaderSyntax(),new markdown_CodeBlockSyntax(),new markdown_GitHubCodeBlockSyntax(),new markdown_BlockquoteSyntax(),new markdown_HorizontalRuleSyntax(),new markdown_UnorderedListSyntax(),new markdown_OrderedListSyntax(),new markdown_TableSyntax(),new markdown_ParagraphSyntax()];
	}
	return markdown_BlockSyntax.syntaxes;
};
markdown_BlockSyntax.isAtBlockEnd = function(parser) {
	if(parser.pos >= parser.lines.length) {
		return true;
	}
	var _g = 0;
	var _g1 = markdown_BlockSyntax.get_syntaxes();
	while(_g < _g1.length) {
		var syntax = _g1[_g];
		++_g;
		if(syntax.canParse(parser) && syntax.get_canEndBlock()) {
			return true;
		}
	}
	return false;
};
markdown_BlockSyntax.prototype = {
	get_pattern: function() {
		return null;
	}
	,get_canEndBlock: function() {
		return true;
	}
	,canParse: function(parser) {
		return this.get_pattern().match(parser.lines[parser.pos]);
	}
	,parse: function(parser) {
		return null;
	}
	,parseChildLines: function(parser) {
		var childLines = [];
		while(parser.pos < parser.lines.length) {
			if(!this.get_pattern().match(parser.lines[parser.pos])) {
				break;
			}
			childLines.push(this.get_pattern().matched(1));
			parser.advance();
		}
		return childLines;
	}
	,__class__: markdown_BlockSyntax
	,__properties__: {get_canEndBlock:"get_canEndBlock",get_pattern:"get_pattern"}
};
var markdown_EmptyBlockSyntax = function() {
	markdown_BlockSyntax.call(this);
};
$hxClasses["markdown.EmptyBlockSyntax"] = markdown_EmptyBlockSyntax;
markdown_EmptyBlockSyntax.__name__ = ["markdown","EmptyBlockSyntax"];
markdown_EmptyBlockSyntax.__super__ = markdown_BlockSyntax;
markdown_EmptyBlockSyntax.prototype = $extend(markdown_BlockSyntax.prototype,{
	get_pattern: function() {
		return markdown_BlockSyntax.RE_EMPTY;
	}
	,parse: function(parser) {
		parser.advance();
		return null;
	}
	,__class__: markdown_EmptyBlockSyntax
});
var markdown_SetextHeaderSyntax = function() {
	markdown_BlockSyntax.call(this);
};
$hxClasses["markdown.SetextHeaderSyntax"] = markdown_SetextHeaderSyntax;
markdown_SetextHeaderSyntax.__name__ = ["markdown","SetextHeaderSyntax"];
markdown_SetextHeaderSyntax.__super__ = markdown_BlockSyntax;
markdown_SetextHeaderSyntax.prototype = $extend(markdown_BlockSyntax.prototype,{
	canParse: function(parser) {
		return parser.matchesNext(markdown_BlockSyntax.RE_SETEXT);
	}
	,parse: function(parser) {
		var re = markdown_BlockSyntax.RE_SETEXT;
		re.match(parser.get_next());
		var tag = re.matched(1).charAt(0) == "=" ? "h1" : "h2";
		var contents = parser.document.parseInline(parser.lines[parser.pos]);
		parser.advance();
		parser.advance();
		return new markdown_ElementNode(tag,contents);
	}
	,__class__: markdown_SetextHeaderSyntax
});
var markdown_HeaderSyntax = function() {
	markdown_BlockSyntax.call(this);
};
$hxClasses["markdown.HeaderSyntax"] = markdown_HeaderSyntax;
markdown_HeaderSyntax.__name__ = ["markdown","HeaderSyntax"];
markdown_HeaderSyntax.__super__ = markdown_BlockSyntax;
markdown_HeaderSyntax.prototype = $extend(markdown_BlockSyntax.prototype,{
	get_pattern: function() {
		return markdown_BlockSyntax.RE_HEADER;
	}
	,parse: function(parser) {
		this.get_pattern().match(parser.lines[parser.pos]);
		parser.advance();
		return new markdown_ElementNode("h" + this.get_pattern().matched(1).length,parser.document.parseInline(StringTools.trim(this.get_pattern().matched(2))));
	}
	,__class__: markdown_HeaderSyntax
});
var markdown_BlockquoteSyntax = function() {
	markdown_BlockSyntax.call(this);
};
$hxClasses["markdown.BlockquoteSyntax"] = markdown_BlockquoteSyntax;
markdown_BlockquoteSyntax.__name__ = ["markdown","BlockquoteSyntax"];
markdown_BlockquoteSyntax.__super__ = markdown_BlockSyntax;
markdown_BlockquoteSyntax.prototype = $extend(markdown_BlockSyntax.prototype,{
	get_pattern: function() {
		return markdown_BlockSyntax.RE_BLOCKQUOTE;
	}
	,parseChildLines: function(parser) {
		var childLines = [];
		while(parser.pos < parser.lines.length) if(this.get_pattern().match(parser.lines[parser.pos])) {
			childLines.push(this.get_pattern().matched(1));
			parser.advance();
		} else {
			var nextMatch = parser.get_next() != null && this.get_pattern().match(parser.get_next());
			if(StringTools.trim(parser.lines[parser.pos]) == "" && nextMatch) {
				childLines.push("");
				childLines.push(this.get_pattern().matched(1));
				parser.advance();
				parser.advance();
			} else {
				break;
			}
		}
		return childLines;
	}
	,parse: function(parser) {
		var childLines = this.parseChildLines(parser);
		return new markdown_ElementNode("blockquote",parser.document.parseLines(childLines));
	}
	,__class__: markdown_BlockquoteSyntax
});
var markdown_CodeBlockSyntax = function() {
	markdown_BlockSyntax.call(this);
};
$hxClasses["markdown.CodeBlockSyntax"] = markdown_CodeBlockSyntax;
markdown_CodeBlockSyntax.__name__ = ["markdown","CodeBlockSyntax"];
markdown_CodeBlockSyntax.__super__ = markdown_BlockSyntax;
markdown_CodeBlockSyntax.prototype = $extend(markdown_BlockSyntax.prototype,{
	get_pattern: function() {
		return markdown_BlockSyntax.RE_INDENT;
	}
	,parseChildLines: function(parser) {
		var childLines = [];
		while(parser.pos < parser.lines.length) if(this.get_pattern().match(parser.lines[parser.pos])) {
			childLines.push(this.get_pattern().matched(1));
			parser.advance();
		} else {
			var nextMatch = parser.get_next() != null && this.get_pattern().match(parser.get_next());
			if(StringTools.trim(parser.lines[parser.pos]) == "" && nextMatch) {
				childLines.push("");
				childLines.push(this.get_pattern().matched(1));
				parser.advance();
				parser.advance();
			} else {
				break;
			}
		}
		return childLines;
	}
	,parse: function(parser) {
		var childLines = this.parseChildLines(parser);
		childLines.push("");
		return new markdown_ElementNode("pre",[markdown_ElementNode.text("code",StringTools.htmlEscape(childLines.join("\n")))]);
	}
	,__class__: markdown_CodeBlockSyntax
});
var markdown_GitHubCodeBlockSyntax = function() {
	markdown_BlockSyntax.call(this);
};
$hxClasses["markdown.GitHubCodeBlockSyntax"] = markdown_GitHubCodeBlockSyntax;
markdown_GitHubCodeBlockSyntax.__name__ = ["markdown","GitHubCodeBlockSyntax"];
markdown_GitHubCodeBlockSyntax.__super__ = markdown_BlockSyntax;
markdown_GitHubCodeBlockSyntax.prototype = $extend(markdown_BlockSyntax.prototype,{
	get_pattern: function() {
		return markdown_BlockSyntax.RE_CODE;
	}
	,parseChildLines: function(parser) {
		var childLines = [];
		parser.advance();
		while(parser.pos < parser.lines.length) if(!this.get_pattern().match(parser.lines[parser.pos])) {
			childLines.push(parser.lines[parser.pos]);
			parser.advance();
		} else {
			parser.advance();
			break;
		}
		return childLines;
	}
	,parse: function(parser) {
		var syntax = this.get_pattern().matched(1);
		var code = markdown_ElementNode.text("code",StringTools.htmlEscape(this.parseChildLines(parser).join("\n")));
		if(syntax != null && syntax.length > 0) {
			var _this = code.attributes;
			var value = "prettyprint " + syntax;
			if(__map_reserved["class"] != null) {
				_this.setReserved("class",value);
			} else {
				_this.h["class"] = value;
			}
		}
		return new markdown_ElementNode("pre",[code]);
	}
	,__class__: markdown_GitHubCodeBlockSyntax
});
var markdown_HorizontalRuleSyntax = function() {
	markdown_BlockSyntax.call(this);
};
$hxClasses["markdown.HorizontalRuleSyntax"] = markdown_HorizontalRuleSyntax;
markdown_HorizontalRuleSyntax.__name__ = ["markdown","HorizontalRuleSyntax"];
markdown_HorizontalRuleSyntax.__super__ = markdown_BlockSyntax;
markdown_HorizontalRuleSyntax.prototype = $extend(markdown_BlockSyntax.prototype,{
	get_pattern: function() {
		return markdown_BlockSyntax.RE_HR;
	}
	,parse: function(parser) {
		parser.advance();
		return markdown_ElementNode.empty("hr");
	}
	,__class__: markdown_HorizontalRuleSyntax
});
var markdown_BlockHtmlSyntax = function() {
	markdown_BlockSyntax.call(this);
};
$hxClasses["markdown.BlockHtmlSyntax"] = markdown_BlockHtmlSyntax;
markdown_BlockHtmlSyntax.__name__ = ["markdown","BlockHtmlSyntax"];
markdown_BlockHtmlSyntax.__super__ = markdown_BlockSyntax;
markdown_BlockHtmlSyntax.prototype = $extend(markdown_BlockSyntax.prototype,{
	get_pattern: function() {
		return markdown_BlockSyntax.RE_HTML;
	}
	,get_canEndBlock: function() {
		return false;
	}
	,parse: function(parser) {
		var childLines = [];
		while(parser.pos < parser.lines.length && !parser.matches(markdown_BlockSyntax.RE_EMPTY)) {
			childLines.push(parser.lines[parser.pos]);
			parser.advance();
		}
		return new markdown_TextNode(childLines.join("\n"));
	}
	,__class__: markdown_BlockHtmlSyntax
});
var markdown_ListItem = function(lines) {
	this.forceBlock = false;
	this.lines = lines;
};
$hxClasses["markdown.ListItem"] = markdown_ListItem;
markdown_ListItem.__name__ = ["markdown","ListItem"];
markdown_ListItem.prototype = {
	__class__: markdown_ListItem
};
var markdown_ParagraphSyntax = function() {
	markdown_BlockSyntax.call(this);
};
$hxClasses["markdown.ParagraphSyntax"] = markdown_ParagraphSyntax;
markdown_ParagraphSyntax.__name__ = ["markdown","ParagraphSyntax"];
markdown_ParagraphSyntax.__super__ = markdown_BlockSyntax;
markdown_ParagraphSyntax.prototype = $extend(markdown_BlockSyntax.prototype,{
	get_canEndBlock: function() {
		return false;
	}
	,canParse: function(parser) {
		return true;
	}
	,parse: function(parser) {
		var childLines = [];
		while(!markdown_BlockSyntax.isAtBlockEnd(parser)) {
			childLines.push(StringTools.ltrim(parser.lines[parser.pos]));
			parser.advance();
		}
		return new markdown_ElementNode("p",parser.document.parseInline(childLines.join("\n")));
	}
	,__class__: markdown_ParagraphSyntax
});
var markdown_ListSyntax = function(listTag) {
	markdown_BlockSyntax.call(this);
	this.listTag = listTag;
};
$hxClasses["markdown.ListSyntax"] = markdown_ListSyntax;
markdown_ListSyntax.__name__ = ["markdown","ListSyntax"];
markdown_ListSyntax.__super__ = markdown_BlockSyntax;
markdown_ListSyntax.prototype = $extend(markdown_BlockSyntax.prototype,{
	get_canEndBlock: function() {
		return false;
	}
	,parse: function(parser) {
		var items = [];
		var childLines = [];
		var endItem = function() {
			if(childLines.length > 0) {
				items.push(new markdown_ListItem(childLines));
				childLines = [];
			}
		};
		var match;
		var tryMatch = function(pattern) {
			match = pattern;
			return pattern.match(parser.lines[parser.pos]);
		};
		while(parser.pos < parser.lines.length) {
			if(tryMatch(markdown_BlockSyntax.RE_EMPTY)) {
				childLines.push("");
			} else if(tryMatch(markdown_BlockSyntax.RE_UL) || tryMatch(markdown_BlockSyntax.RE_OL)) {
				endItem();
				var tmp = match.matched(1);
				childLines.push(tmp);
			} else if(tryMatch(markdown_BlockSyntax.RE_INDENT)) {
				var tmp1 = match.matched(1);
				childLines.push(tmp1);
			} else if(markdown_BlockSyntax.isAtBlockEnd(parser)) {
				break;
			} else {
				if(childLines.length > 0 && childLines[childLines.length - 1] == "") {
					break;
				}
				childLines.push(parser.lines[parser.pos]);
			}
			parser.advance();
		}
		endItem();
		var _g1 = 0;
		var _g = items.length;
		while(_g1 < _g) {
			var i = _g1++;
			var len = items[i].lines.length;
			var _g3 = 1;
			var _g2 = len + 1;
			while(_g3 < _g2) if(markdown_BlockSyntax.RE_EMPTY.match(items[i].lines[len - _g3++])) {
				if(i < items.length - 1) {
					items[i].forceBlock = true;
					items[i + 1].forceBlock = true;
				}
				items[i].lines.pop();
			} else {
				break;
			}
		}
		var itemNodes = [];
		var _g4 = 0;
		while(_g4 < items.length) {
			var item = items[_g4];
			++_g4;
			var blockItem = item.forceBlock || item.lines.length > 1;
			var blocksInList = [markdown_BlockSyntax.RE_BLOCKQUOTE,markdown_BlockSyntax.RE_HEADER,markdown_BlockSyntax.RE_HR,markdown_BlockSyntax.RE_INDENT,markdown_BlockSyntax.RE_UL,markdown_BlockSyntax.RE_OL];
			if(!blockItem) {
				var _g11 = 0;
				while(_g11 < blocksInList.length) if(blocksInList[_g11++].match(item.lines[0])) {
					blockItem = true;
					break;
				}
			}
			if(blockItem) {
				var children = parser.document.parseLines(item.lines);
				if(!item.forceBlock && children.length == 1) {
					if((children[0] instanceof markdown_ElementNode)) {
						var node = children[0];
						if(node.tag == "p") {
							children = node.children;
						}
					}
				}
				itemNodes.push(new markdown_ElementNode("li",children));
			} else {
				itemNodes.push(new markdown_ElementNode("li",parser.document.parseInline(item.lines[0])));
			}
		}
		return new markdown_ElementNode(this.listTag,itemNodes);
	}
	,__class__: markdown_ListSyntax
});
var markdown_UnorderedListSyntax = function() {
	markdown_ListSyntax.call(this,"ul");
};
$hxClasses["markdown.UnorderedListSyntax"] = markdown_UnorderedListSyntax;
markdown_UnorderedListSyntax.__name__ = ["markdown","UnorderedListSyntax"];
markdown_UnorderedListSyntax.__super__ = markdown_ListSyntax;
markdown_UnorderedListSyntax.prototype = $extend(markdown_ListSyntax.prototype,{
	get_pattern: function() {
		return markdown_BlockSyntax.RE_UL;
	}
	,__class__: markdown_UnorderedListSyntax
});
var markdown_OrderedListSyntax = function() {
	markdown_ListSyntax.call(this,"ol");
};
$hxClasses["markdown.OrderedListSyntax"] = markdown_OrderedListSyntax;
markdown_OrderedListSyntax.__name__ = ["markdown","OrderedListSyntax"];
markdown_OrderedListSyntax.__super__ = markdown_ListSyntax;
markdown_OrderedListSyntax.prototype = $extend(markdown_ListSyntax.prototype,{
	get_pattern: function() {
		return markdown_BlockSyntax.RE_OL;
	}
	,__class__: markdown_OrderedListSyntax
});
var markdown_TableSyntax = function() {
	markdown_BlockSyntax.call(this);
};
$hxClasses["markdown.TableSyntax"] = markdown_TableSyntax;
markdown_TableSyntax.__name__ = ["markdown","TableSyntax"];
markdown_TableSyntax.__super__ = markdown_BlockSyntax;
markdown_TableSyntax.prototype = $extend(markdown_BlockSyntax.prototype,{
	get_pattern: function() {
		return markdown_TableSyntax.TABLE_PATTERN;
	}
	,get_canEndBlock: function() {
		return false;
	}
	,parse: function(parser) {
		var lines = [];
		while(parser.pos < parser.lines.length && parser.matches(markdown_TableSyntax.TABLE_PATTERN)) {
			lines.push(parser.lines[parser.pos]);
			parser.advance();
		}
		var heads = [];
		var rows = [];
		var headLine = lines.shift();
		var alignLine = lines.shift();
		var aligns = [];
		if(alignLine != null) {
			markdown_TableSyntax.CELL_PATTERN.map(alignLine,function(e) {
				var text = e.matched(2);
				aligns.push(text.charAt(0) == ":" ? text.charAt(text.length - 1) == ":" ? "center" : "left" : text.charAt(text.length - 1) == ":" ? "right" : "left");
				return "";
			});
		}
		var index = 0;
		markdown_TableSyntax.CELL_PATTERN.map(headLine,function(e1) {
			var text1 = StringTools.trim(e1.matched(2));
			var cell = new markdown_ElementNode("th",parser.document.parseInline(text1));
			if(aligns[index] != "left") {
				var _this = cell.attributes;
				var value = aligns[index];
				if(__map_reserved["align"] != null) {
					_this.setReserved("align",value);
				} else {
					_this.h["align"] = value;
				}
			}
			heads.push(cell);
			index += 1;
			return "";
		});
		var _g = 0;
		while(_g < lines.length) {
			var line = lines[_g++];
			var cols = [[]];
			rows.push(new markdown_ElementNode("tr",cols[0]));
			markdown_TableSyntax.CELL_PATTERN.map(line,(function(index1,cols1) {
				return function(e2) {
					var text2 = StringTools.trim(e2.matched(2));
					var cell1 = new markdown_ElementNode("td",parser.document.parseInline(text2));
					if(aligns[index1[0]] != "left") {
						var _this1 = cell1.attributes;
						var value1 = aligns[index1[0]];
						if(__map_reserved["align"] != null) {
							_this1.setReserved("align",value1);
						} else {
							_this1.h["align"] = value1;
						}
					}
					cols1[0].push(cell1);
					index1[0] += 1;
					return "";
				};
			})([0],cols));
		}
		return new markdown_ElementNode("table",[new markdown_ElementNode("thead",heads),new markdown_ElementNode("tbody",rows)]);
	}
	,__class__: markdown_TableSyntax
});
var markdown_HtmlRenderer = function() {
};
$hxClasses["markdown.HtmlRenderer"] = markdown_HtmlRenderer;
markdown_HtmlRenderer.__name__ = ["markdown","HtmlRenderer"];
markdown_HtmlRenderer.__interfaces__ = [markdown_NodeVisitor];
markdown_HtmlRenderer.sortAttributes = function(a,b) {
	var ia = markdown_HtmlRenderer.attributeOrder.indexOf(a);
	var ib = markdown_HtmlRenderer.attributeOrder.indexOf(a);
	if(ia > -1 && ib > -1) {
		return ia - ib;
	}
	return Reflect.compare(a,b);
};
markdown_HtmlRenderer.prototype = {
	render: function(nodes) {
		this.buffer = new StringBuf();
		var _g = 0;
		while(_g < nodes.length) nodes[_g++].accept(this);
		return this.buffer.b;
	}
	,visitText: function(text) {
		this.buffer.b += Std.string(text.text);
	}
	,visitElementBefore: function(element) {
		if(this.buffer.b != "" && markdown_HtmlRenderer.BLOCK_TAGS.match(element.tag)) {
			this.buffer.b += "\n";
		}
		this.buffer.b += Std.string("<" + element.tag);
		var _g = [];
		var k = element.attributes.keys();
		while(k.hasNext()) _g.push(k.next());
		_g.sort(markdown_HtmlRenderer.sortAttributes);
		var _g1 = 0;
		while(_g1 < _g.length) {
			var name = _g[_g1];
			++_g1;
			var _this = element.attributes;
			this.buffer.b += Std.string(" " + name + "=\"" + (__map_reserved[name] != null ? _this.getReserved(name) : _this.h[name]) + "\"");
		}
		if(element.children == null) {
			this.buffer.b += " />";
			return false;
		} else {
			this.buffer.b += ">";
			return true;
		}
	}
	,visitElementAfter: function(element) {
		this.buffer.b += Std.string("</" + element.tag + ">");
	}
	,__class__: markdown_HtmlRenderer
};
var markdown_InlineSyntax = function(pattern) {
	this.pattern = new EReg(pattern,"m");
};
$hxClasses["markdown.InlineSyntax"] = markdown_InlineSyntax;
markdown_InlineSyntax.__name__ = ["markdown","InlineSyntax"];
markdown_InlineSyntax.prototype = {
	tryMatch: function(parser) {
		if(this.pattern.match(parser.get_currentSource()) && this.pattern.matchedPos().pos == 0) {
			parser.writeText();
			if(this.onMatch(parser)) {
				parser.consume(this.pattern.matched(0).length);
			}
			return true;
		}
		return false;
	}
	,onMatch: function(parser) {
		return false;
	}
	,__class__: markdown_InlineSyntax
};
var markdown_AutolinkSyntaxWithoutBrackets = function() {
	markdown_InlineSyntax.call(this,"\\b((http|https|ftp)://[^\\s]*)\\b");
};
$hxClasses["markdown.AutolinkSyntaxWithoutBrackets"] = markdown_AutolinkSyntaxWithoutBrackets;
markdown_AutolinkSyntaxWithoutBrackets.__name__ = ["markdown","AutolinkSyntaxWithoutBrackets"];
markdown_AutolinkSyntaxWithoutBrackets.__super__ = markdown_InlineSyntax;
markdown_AutolinkSyntaxWithoutBrackets.prototype = $extend(markdown_InlineSyntax.prototype,{
	tryMatch: function(parser) {
		return markdown_InlineSyntax.prototype.tryMatch.call(this,parser);
	}
	,onMatch: function(parser) {
		var url = this.pattern.matched(1);
		var anchor = markdown_ElementNode.text("a",StringTools.htmlEscape(url));
		var _this = anchor.attributes;
		if(__map_reserved["href"] != null) {
			_this.setReserved("href",url);
		} else {
			_this.h["href"] = url;
		}
		parser.addNode(anchor);
		return true;
	}
	,__class__: markdown_AutolinkSyntaxWithoutBrackets
});
var markdown_TextSyntax = function(pattern,substitute) {
	markdown_InlineSyntax.call(this,pattern);
	this.substitute = substitute;
};
$hxClasses["markdown.TextSyntax"] = markdown_TextSyntax;
markdown_TextSyntax.__name__ = ["markdown","TextSyntax"];
markdown_TextSyntax.__super__ = markdown_InlineSyntax;
markdown_TextSyntax.prototype = $extend(markdown_InlineSyntax.prototype,{
	onMatch: function(parser) {
		if(this.substitute == null) {
			parser.advanceBy(this.pattern.matched(0).length);
			return false;
		}
		parser.addNode(parser.createText(this.substitute));
		return true;
	}
	,__class__: markdown_TextSyntax
});
var markdown_AutolinkSyntax = function() {
	markdown_InlineSyntax.call(this,"<((http|https|ftp)://[^>]*)>");
};
$hxClasses["markdown.AutolinkSyntax"] = markdown_AutolinkSyntax;
markdown_AutolinkSyntax.__name__ = ["markdown","AutolinkSyntax"];
markdown_AutolinkSyntax.__super__ = markdown_InlineSyntax;
markdown_AutolinkSyntax.prototype = $extend(markdown_InlineSyntax.prototype,{
	onMatch: function(parser) {
		var url = this.pattern.matched(1);
		var anchor = markdown_ElementNode.text("a",StringTools.htmlEscape(url));
		var _this = anchor.attributes;
		if(__map_reserved["href"] != null) {
			_this.setReserved("href",url);
		} else {
			_this.h["href"] = url;
		}
		parser.addNode(anchor);
		return true;
	}
	,__class__: markdown_AutolinkSyntax
});
var markdown_TagSyntax = function(pattern,tag,end) {
	markdown_InlineSyntax.call(this,pattern);
	this.tag = tag;
	this.endPattern = new EReg(end == null ? pattern : end,"m");
};
$hxClasses["markdown.TagSyntax"] = markdown_TagSyntax;
markdown_TagSyntax.__name__ = ["markdown","TagSyntax"];
markdown_TagSyntax.__super__ = markdown_InlineSyntax;
markdown_TagSyntax.prototype = $extend(markdown_InlineSyntax.prototype,{
	onMatch: function(parser) {
		parser.stack.push(new markdown_TagState(parser.pos,parser.pos + this.pattern.matched(0).length,this));
		return true;
	}
	,onMatchEnd: function(parser,state) {
		parser.addNode(new markdown_ElementNode(this.tag,state.children));
		return true;
	}
	,__class__: markdown_TagSyntax
});
var markdown_LinkSyntax = function(linkResolver) {
	markdown_TagSyntax.call(this,"\\[",null,markdown_LinkSyntax.linkPattern);
	this.linkResolver = linkResolver;
};
$hxClasses["markdown.LinkSyntax"] = markdown_LinkSyntax;
markdown_LinkSyntax.__name__ = ["markdown","LinkSyntax"];
markdown_LinkSyntax.__super__ = markdown_TagSyntax;
markdown_LinkSyntax.prototype = $extend(markdown_TagSyntax.prototype,{
	onMatchEnd: function(parser,state) {
		var url;
		var title;
		if(this.endPattern.matched(1) == null || this.endPattern.matched(1) == "") {
			if(this.linkResolver == null) {
				return false;
			}
			if(state.children.length != 1) {
				return false;
			}
			if(!(state.children[0] instanceof markdown_TextNode)) {
				return false;
			}
			var node = this.linkResolver(state.children[0].text);
			if(node == null) {
				return false;
			}
			parser.addNode(node);
			return true;
		}
		if(this.endPattern.matched(3) != null && this.endPattern.matched(3) != "") {
			url = this.endPattern.matched(3);
			title = this.endPattern.matched(4);
			if(StringTools.startsWith(url,"<") && StringTools.endsWith(url,">")) {
				url = url.substring(1,url.length - 1);
			}
		} else {
			var id = this.endPattern.matched(2);
			if(id == "") {
				id = parser.source.substring(state.startPos + 1,parser.pos);
			}
			id = id.toLowerCase();
			var _this = parser.document.refLinks;
			var link = __map_reserved[id] != null ? _this.getReserved(id) : _this.h[id];
			if(link == null) {
				return false;
			}
			url = link.url;
			title = link.title;
		}
		var anchor = new markdown_ElementNode("a",state.children);
		var this1 = anchor.attributes;
		var value = StringTools.htmlEscape(url);
		var _this1 = this1;
		if(__map_reserved["href"] != null) {
			_this1.setReserved("href",value);
		} else {
			_this1.h["href"] = value;
		}
		if(title != null && title != "") {
			var this2 = anchor.attributes;
			var value1 = StringTools.htmlEscape(title);
			var _this2 = this2;
			if(__map_reserved["title"] != null) {
				_this2.setReserved("title",value1);
			} else {
				_this2.h["title"] = value1;
			}
		}
		parser.addNode(anchor);
		return true;
	}
	,__class__: markdown_LinkSyntax
});
var markdown_ImgSyntax = function(linkResolver) {
	markdown_TagSyntax.call(this,"!\\[",null,markdown_ImgSyntax.linkPattern);
	this.linkResolver = linkResolver;
};
$hxClasses["markdown.ImgSyntax"] = markdown_ImgSyntax;
markdown_ImgSyntax.__name__ = ["markdown","ImgSyntax"];
markdown_ImgSyntax.__super__ = markdown_TagSyntax;
markdown_ImgSyntax.prototype = $extend(markdown_TagSyntax.prototype,{
	onMatchEnd: function(parser,state) {
		var url;
		var title;
		if(this.endPattern.matched(1) == null || this.endPattern.matched(1) == "") {
			if(this.linkResolver == null) {
				return false;
			}
			if(state.children.length != 1) {
				return false;
			}
			if(!(state.children[0] instanceof markdown_TextNode)) {
				return false;
			}
			var node = this.linkResolver(state.children[0].text);
			if(node == null) {
				return false;
			}
			parser.addNode(node);
			return true;
		}
		if(this.endPattern.matched(3) != null && this.endPattern.matched(3) != "") {
			url = this.endPattern.matched(3);
			title = this.endPattern.matched(4);
			if(StringTools.startsWith(url,"<") && StringTools.endsWith(url,">")) {
				url = url.substring(1,url.length - 1);
			}
		} else {
			var id = this.endPattern.matched(2);
			if(id == "") {
				id = parser.source.substring(state.startPos + 1,parser.pos);
			}
			id = id.toLowerCase();
			var _this = parser.document.refLinks;
			var link = __map_reserved[id] != null ? _this.getReserved(id) : _this.h[id];
			if(link == null) {
				return false;
			}
			url = link.url;
			title = link.title;
		}
		var img = new markdown_ElementNode("img",null);
		var this1 = img.attributes;
		var value = StringTools.htmlEscape(url);
		var _this1 = this1;
		if(__map_reserved["src"] != null) {
			_this1.setReserved("src",value);
		} else {
			_this1.h["src"] = value;
		}
		if(state.children.length == 1 && (state.children[0] instanceof markdown_TextNode)) {
			var value1 = state.children[0].text;
			var _this2 = img.attributes;
			if(__map_reserved["alt"] != null) {
				_this2.setReserved("alt",value1);
			} else {
				_this2.h["alt"] = value1;
			}
		}
		if(title != null && title != "") {
			var this2 = img.attributes;
			var value2 = StringTools.htmlEscape(title);
			var _this3 = this2;
			if(__map_reserved["title"] != null) {
				_this3.setReserved("title",value2);
			} else {
				_this3.h["title"] = value2;
			}
		}
		parser.addNode(img);
		return true;
	}
	,__class__: markdown_ImgSyntax
});
var markdown_CodeSyntax = function(pattern) {
	markdown_InlineSyntax.call(this,pattern);
};
$hxClasses["markdown.CodeSyntax"] = markdown_CodeSyntax;
markdown_CodeSyntax.__name__ = ["markdown","CodeSyntax"];
markdown_CodeSyntax.__super__ = markdown_InlineSyntax;
markdown_CodeSyntax.prototype = $extend(markdown_InlineSyntax.prototype,{
	onMatch: function(parser) {
		parser.addNode(markdown_ElementNode.text("code",StringTools.htmlEscape(this.pattern.matched(1))));
		return true;
	}
	,__class__: markdown_CodeSyntax
});
var markdown_InlineParser = function(source,document) {
	this.start = 0;
	this.pos = 0;
	this.source = source;
	this.document = document;
	this.stack = [];
	if(document.inlineSyntaxes != null) {
		this.syntaxes = [];
		var _g = 0;
		var _g1 = document.inlineSyntaxes;
		while(_g < _g1.length) this.syntaxes.push(_g1[_g++]);
		var _g2 = 0;
		var _g11 = markdown_InlineParser.defaultSyntaxes;
		while(_g2 < _g11.length) this.syntaxes.push(_g11[_g2++]);
	} else {
		this.syntaxes = markdown_InlineParser.defaultSyntaxes;
	}
	var _this = this.syntaxes;
	var x = new markdown_LinkSyntax(document.linkResolver);
	_this.splice(1,0,x);
};
$hxClasses["markdown.InlineParser"] = markdown_InlineParser;
markdown_InlineParser.__name__ = ["markdown","InlineParser"];
markdown_InlineParser.prototype = {
	parse: function() {
		this.stack.push(new markdown_TagState(0,0,null));
		while(!this.get_isDone()) {
			var matched = false;
			var _g1 = 1;
			var _g = this.stack.length;
			while(_g1 < _g) if(this.stack[this.stack.length - _g1++].tryMatch(this)) {
				matched = true;
				break;
			}
			if(matched) {
				continue;
			}
			var _g2 = 0;
			var _g11 = this.syntaxes;
			while(_g2 < _g11.length) if(_g11[_g2++].tryMatch(this)) {
				matched = true;
				break;
			}
			if(matched) {
				continue;
			}
			this.advanceBy(1);
		}
		return this.stack[0].close(this);
	}
	,writeText: function() {
		this.writeTextRange(this.start,this.pos);
		this.start = this.pos;
	}
	,writeTextRange: function(start,end) {
		if(end > start) {
			var text = this.source.substring(start,end);
			var nodes = this.stack[this.stack.length - 1].children;
			if(nodes.length > 0 && (nodes[nodes.length - 1] instanceof markdown_TextNode)) {
				var newNode = this.createText("" + nodes[nodes.length - 1].text + text);
				nodes[nodes.length - 1] = newNode;
			} else {
				nodes.push(this.createText(text));
			}
		}
	}
	,createText: function(text) {
		return new markdown_TextNode(this.unescape(text));
	}
	,addNode: function(node) {
		this.stack[this.stack.length - 1].children.push(node);
	}
	,get_currentSource: function() {
		return this.source.substring(this.pos,this.source.length);
	}
	,get_isDone: function() {
		return this.pos == this.source.length;
	}
	,advanceBy: function(length) {
		this.pos += length;
	}
	,consume: function(length) {
		this.pos += length;
		this.start = this.pos;
	}
	,unescape: function(text) {
		var _this_r = new RegExp("\\\\([\\\\`*_{}[\\]()#+-.!])","g".split("u").join(""));
		text = text.replace(_this_r,"$1");
		text = StringTools.replace(text,"\t","    ");
		return text;
	}
	,__class__: markdown_InlineParser
	,__properties__: {get_isDone:"get_isDone",get_currentSource:"get_currentSource"}
};
var markdown_TagState = function(startPos,endPos,syntax) {
	this.startPos = startPos;
	this.endPos = endPos;
	this.syntax = syntax;
	this.children = [];
};
$hxClasses["markdown.TagState"] = markdown_TagState;
markdown_TagState.__name__ = ["markdown","TagState"];
markdown_TagState.prototype = {
	tryMatch: function(parser) {
		if(this.syntax.endPattern.match(parser.get_currentSource()) && this.syntax.endPattern.matchedPos().pos == 0) {
			this.close(parser);
			return true;
		}
		return false;
	}
	,close: function(parser) {
		var index = parser.stack.indexOf(this);
		var unmatchedTags = parser.stack.splice(index + 1,parser.stack.length - index);
		var _g = 0;
		while(_g < unmatchedTags.length) {
			var unmatched = unmatchedTags[_g];
			++_g;
			parser.writeTextRange(unmatched.startPos,unmatched.endPos);
			var _g1 = 0;
			var _g2 = unmatched.children;
			while(_g1 < _g2.length) this.children.push(_g2[_g1++]);
		}
		parser.writeText();
		parser.stack.pop();
		if(parser.stack.length == 0) {
			return this.children;
		}
		if(this.syntax.onMatchEnd(parser,this)) {
			parser.consume(this.syntax.endPattern.matched(0).length);
		} else {
			parser.start = this.startPos;
			parser.advanceBy(this.syntax.endPattern.matched(0).length);
		}
		return null;
	}
	,__class__: markdown_TagState
};
var markdown_MarkdownTools = function() { };
$hxClasses["markdown.MarkdownTools"] = markdown_MarkdownTools;
markdown_MarkdownTools.__name__ = ["markdown","MarkdownTools"];
markdown_MarkdownTools.getBlocks = function(markdown1,additionalInlineSyntaxes) {
	var document = new Document();
	if(additionalInlineSyntaxes != null) {
		var _g = 0;
		while(_g < additionalInlineSyntaxes.length) document.inlineSyntaxes.push(additionalInlineSyntaxes[_g++]);
	}
	var blocks = null;
	try {
		var _this_r = new RegExp("(\r\n|\r)","g".split("u").join(""));
		var lines = markdown1.replace(_this_r,"\n").split("\n");
		document.parseRefLinks(lines);
		blocks = document.parseLines(lines);
		return blocks;
	} catch( e ) {
		console.log("src/markdown/MarkdownTools.hx:37:",(e instanceof js__$Boot_HaxeError) ? e.val : e);
		return null;
	}
};
var markdown_MithrilRenderer = function() {
	this.syntaxRenderers = [];
};
$hxClasses["markdown.MithrilRenderer"] = markdown_MithrilRenderer;
markdown_MithrilRenderer.__name__ = ["markdown","MithrilRenderer"];
markdown_MithrilRenderer.prototype = {
	markdownToView: function(md,syntaxRenderers) {
		this.syntaxRenderers = syntaxRenderers;
		return this.buildView(markdown_MarkdownTools.getBlocks(md,this.syntaxRenderers),{ tag : "div", attrs : { className : "markdown"}, children : []});
	}
	,buildView: function(mdNodes,parent) {
		var _g = 0;
		while(_g < mdNodes.length) {
			var mdNode = mdNodes[_g];
			++_g;
			switch(mdNode == null ? null : js_Boot.getClass(mdNode)) {
			case markdown_ElementNode:
				var node = mdNode;
				var attributes = { };
				var _g1 = [];
				var k = node.attributes.keys();
				while(k.hasNext()) _g1.push(k.next());
				var _g2 = 0;
				while(_g2 < _g1.length) {
					var name = _g1[_g2];
					++_g2;
					var _this = node.attributes;
					attributes[name] = __map_reserved[name] != null ? _this.getReserved(name) : _this.h[name];
				}
				if(node.tag == "a") {
					attributes["target"] = "_blank";
				}
				var child = { tag : node.tag, attrs : attributes, children : []};
				parent.children.push(child);
				this.buildView(node.children,child);
				break;
			case markdown_TextNode:
				parent.children.push({ tag : "span", text : mdNode.text});
				break;
			case markdown_inlineRenderer_SyntaxRendererNode:
				var node1 = [mdNode];
				try {
					this.syntaxRenderers.filter((function(node2) {
						return function(sr) {
							return node2[0].tag == Type.getClassName(sr == null ? null : js_Boot.getClass(sr));
						};
					})(node1))[0].render(parent,node1[0].data);
				} catch( e ) {
					console.log("src/markdown/MithrilRenderer.hx:82:","error: " + Std.string((e instanceof js__$Boot_HaxeError) ? e.val : e));
				}
				break;
			}
		}
		return parent;
	}
	,__class__: markdown_MithrilRenderer
};
var markdown_MithrilRendererCache = function() {
	this.cache = new haxe_ds_StringMap();
};
$hxClasses["markdown.MithrilRendererCache"] = markdown_MithrilRendererCache;
markdown_MithrilRendererCache.__name__ = ["markdown","MithrilRendererCache"];
markdown_MithrilRendererCache.prototype = {
	clearCache: function() {
		var key = this.cache.keys();
		while(key.hasNext()) {
			var key1 = key.next();
			console.log("src/markdown/MithrilRendererCache.hx:16:","clear markdown dache");
			this.cache.remove(key1);
		}
	}
	,clearCacheKey: function(key) {
		var _this = this.cache;
		if(__map_reserved[key] != null ? _this.existsReserved(key) : _this.h.hasOwnProperty(key)) {
			this.cache.remove(key);
		}
	}
	,markdownToView: function(id,md,syntaxRenderers) {
		var _this = this.cache;
		if(__map_reserved[id] != null ? _this.existsReserved(id) : _this.h.hasOwnProperty(id)) {
			var _this1 = this.cache;
			if(__map_reserved[id] != null) {
				return _this1.getReserved(id);
			} else {
				return _this1.h[id];
			}
		}
		var view = markdown_MithrilRenderer.instance.markdownToView(md,syntaxRenderers);
		console.log("src/markdown/MithrilRendererCache.hx:35:","save " + id + " to cache");
		var _this2 = this.cache;
		if(__map_reserved[id] != null) {
			_this2.setReserved(id,view);
		} else {
			_this2.h[id] = view;
		}
		return view;
	}
	,__class__: markdown_MithrilRendererCache
};
var markdown_MithrilTools = function() { };
$hxClasses["markdown.MithrilTools"] = markdown_MithrilTools;
markdown_MithrilTools.__name__ = ["markdown","MithrilTools"];
markdown_MithrilTools.markdownToView = function(md,additionalInlineSyntaxes) {
	return markdown_MithrilTools.buildView(markdown_MarkdownTools.getBlocks(md,additionalInlineSyntaxes));
};
markdown_MithrilTools.buildView = function(mdNodes,parent) {
	if(parent == null) {
		parent = { tag : "div", attrs : { className : "markdown"}, children : []};
	}
	var _g = 0;
	while(_g < mdNodes.length) {
		var mdNode = mdNodes[_g];
		++_g;
		switch(mdNode == null ? null : js_Boot.getClass(mdNode)) {
		case markdown_ElementNode:
			var node = mdNode;
			var attributes = { };
			var _g1 = [];
			var k = node.attributes.keys();
			while(k.hasNext()) _g1.push(k.next());
			var _g2 = 0;
			while(_g2 < _g1.length) {
				var name = _g1[_g2];
				++_g2;
				var _this = node.attributes;
				attributes[name] = __map_reserved[name] != null ? _this.getReserved(name) : _this.h[name];
			}
			if(node.tag == "a") {
				attributes["target"] = "_blank";
			}
			var child = { tag : node.tag, attrs : attributes, children : []};
			parent.children.push(child);
			markdown_MithrilTools.buildView(node.children,child);
			break;
		case markdown_TextNode:
			parent.children.push({ tag : "span", text : mdNode.text});
			break;
		case markdown_ast_DataNode:
			var node1 = mdNode;
			var child1 = markdown_MithrilTools.cache.get(node1.data);
			if(child1 == null) {
				var child2 = "data-node: " + Std.string(node1.data);
				child1 = { tag : "h3", attrs : { }, children : [{ tag : "span", text : child2}]};
				markdown_MithrilTools.cache.set(node1.data,child1);
			}
			parent.children.push(child1);
			break;
		case markdown_ast_ErrorNode:
			parent.children.push({ tag : "span", attrs : { className : "error"}, children : ["Error: " + mdNode.msg]});
			break;
		case ui_MediaNode:
			var node2 = mdNode;
			var child3 = "media-node: " + Std.string(node2.data);
			parent.children.push({ tag : "h3", attrs : { }, children : [{ tag : "span", text : child3}]});
			var child4 = new ui_media_StorageMedia(node2.data).view();
			parent.children.push(child4);
			break;
		case ui_StringRenderNode:
			var code = mdNode.code;
			var child5 = m.m("div",m.trust(ui_StringRendererMapper.instance.get("score").renderFromCode(code)));
			parent.children.push(child5);
			break;
		default:
			console.log("src/markdown/MithrilTools.hx:124:","OTHER NODE");
		}
	}
	return parent;
};
var markdown_XNode = function(data) {
	markdown_ElementNode.call(this,"xnode",[]);
	this.data = data;
};
$hxClasses["markdown.XNode"] = markdown_XNode;
markdown_XNode.__name__ = ["markdown","XNode"];
markdown_XNode.__super__ = markdown_ElementNode;
markdown_XNode.prototype = $extend(markdown_ElementNode.prototype,{
	__class__: markdown_XNode
});
var markdown_ast_DataNode = function(tag,data) {
	markdown_ElementNode.call(this,tag,[]);
	this.data = data;
};
$hxClasses["markdown.ast.DataNode"] = markdown_ast_DataNode;
markdown_ast_DataNode.__name__ = ["markdown","ast","DataNode"];
markdown_ast_DataNode.__super__ = markdown_ElementNode;
markdown_ast_DataNode.prototype = $extend(markdown_ElementNode.prototype,{
	__class__: markdown_ast_DataNode
});
var markdown_ast_ErrorNode = function(tag,msg) {
	markdown_ElementNode.call(this,tag,[]);
	this.msg = msg;
};
$hxClasses["markdown.ast.ErrorNode"] = markdown_ast_ErrorNode;
markdown_ast_ErrorNode.__name__ = ["markdown","ast","ErrorNode"];
markdown_ast_ErrorNode.__super__ = markdown_ElementNode;
markdown_ast_ErrorNode.prototype = $extend(markdown_ElementNode.prototype,{
	__class__: markdown_ast_ErrorNode
});
var markdown_inlineRenderer_InlineSyntaxRenderer = function(pattern) {
	markdown_InlineSyntax.call(this,pattern);
};
$hxClasses["markdown.inlineRenderer.InlineSyntaxRenderer"] = markdown_inlineRenderer_InlineSyntaxRenderer;
markdown_inlineRenderer_InlineSyntaxRenderer.__name__ = ["markdown","inlineRenderer","InlineSyntaxRenderer"];
markdown_inlineRenderer_InlineSyntaxRenderer.__super__ = markdown_InlineSyntax;
markdown_inlineRenderer_InlineSyntaxRenderer.prototype = $extend(markdown_InlineSyntax.prototype,{
	render: function(parent,code) {
		parent.children.push({ tag : "h1", attrs : { className : "error"}, text : ["InlineSyntaxRenderer"]});
	}
	,__class__: markdown_inlineRenderer_InlineSyntaxRenderer
});
var markdown_inlineRenderer_SyntaxRendererNode = function(tag,data) {
	markdown_ast_DataNode.call(this,tag,data);
};
$hxClasses["markdown.inlineRenderer.SyntaxRendererNode"] = markdown_inlineRenderer_SyntaxRendererNode;
markdown_inlineRenderer_SyntaxRendererNode.__name__ = ["markdown","inlineRenderer","SyntaxRendererNode"];
markdown_inlineRenderer_SyntaxRendererNode.__super__ = markdown_ast_DataNode;
markdown_inlineRenderer_SyntaxRendererNode.prototype = $extend(markdown_ast_DataNode.prototype,{
	__class__: markdown_inlineRenderer_SyntaxRendererNode
});
var markdown_inlineRenderer_QInlineSyntaxRenderer = function() {
	markdown_inlineRenderer_InlineSyntaxRenderer.call(this,markdown_inlineRenderer_QInlineSyntaxRenderer.REGEX);
};
$hxClasses["markdown.inlineRenderer.QInlineSyntaxRenderer"] = markdown_inlineRenderer_QInlineSyntaxRenderer;
markdown_inlineRenderer_QInlineSyntaxRenderer.__name__ = ["markdown","inlineRenderer","QInlineSyntaxRenderer"];
markdown_inlineRenderer_QInlineSyntaxRenderer.__super__ = markdown_inlineRenderer_InlineSyntaxRenderer;
markdown_inlineRenderer_QInlineSyntaxRenderer.prototype = $extend(markdown_inlineRenderer_InlineSyntaxRenderer.prototype,{
	onMatch: function(parser) {
		var code = this.pattern.matched(1);
		parser.addNode(new markdown_inlineRenderer_SyntaxRendererNode(Type.getClassName(js_Boot.getClass(this)),code));
		return true;
	}
	,render: function(parent,code) {
		var renderer = ui_StringRendererMapper.instance.get("score");
		renderer.renderFromCode(code);
		parent.children.push({ tag : "div", attrs : { className : "score"}, text : ["Hello from QSyntaxRenderer "]});
		var child = m.m("div",m.trust(renderer.renderFromCode(code)));
		parent.children.push(child);
	}
	,__class__: markdown_inlineRenderer_QInlineSyntaxRenderer
});
var markdown_syntax_TestcodeSyntax = function() {
	markdown_InlineSyntax.call(this,markdown_syntax_TestcodeSyntax.REGEX);
};
$hxClasses["markdown.syntax.TestcodeSyntax"] = markdown_syntax_TestcodeSyntax;
markdown_syntax_TestcodeSyntax.__name__ = ["markdown","syntax","TestcodeSyntax"];
markdown_syntax_TestcodeSyntax.__super__ = markdown_InlineSyntax;
markdown_syntax_TestcodeSyntax.prototype = $extend(markdown_InlineSyntax.prototype,{
	onMatch: function(parser) {
		parser.addNode(new markdown_ast_DataNode("testcode",this.pattern.matched(1)));
		return true;
	}
	,__class__: markdown_syntax_TestcodeSyntax
});
var mithril__$M_M_$Impl_$ = function() { };
$hxClasses["mithril._M.M_Impl_"] = mithril__$M_M_$Impl_$;
mithril__$M_M_$Impl_$.__name__ = ["mithril","_M","M_Impl_"];
mithril__$M_M_$Impl_$.routeLink = function(vnode) {
	return m.route.link(vnode);
};
var nx3_Constants = function() { };
$hxClasses["nx3.Constants"] = nx3_Constants;
nx3_Constants.__name__ = ["nx3","Constants"];
var nx3_EAllotment = $hxEnums["nx3.EAllotment"] = { __ename__ : true, __constructs__ : ["LeftAlign","Equal","Logaritmic","Linear"]
	,LeftAlign: {_hx_index:0,__enum__:"nx3.EAllotment",toString:$estr}
	,Equal: {_hx_index:1,__enum__:"nx3.EAllotment",toString:$estr}
	,Logaritmic: {_hx_index:2,__enum__:"nx3.EAllotment",toString:$estr}
	,Linear: {_hx_index:3,__enum__:"nx3.EAllotment",toString:$estr}
};
var nx3_EBarType = $hxEnums["nx3.EBarType"] = { __ename__ : true, __constructs__ : ["Normal","Repeat","Ignore","Folded"]
	,Normal: {_hx_index:0,__enum__:"nx3.EBarType",toString:$estr}
	,Repeat: {_hx_index:1,__enum__:"nx3.EBarType",toString:$estr}
	,Ignore: {_hx_index:2,__enum__:"nx3.EBarType",toString:$estr}
	,Folded: {_hx_index:3,__enum__:"nx3.EBarType",toString:$estr}
};
var nx3_EBarline = $hxEnums["nx3.EBarline"] = { __ename__ : true, __constructs__ : ["Normal","None","Double","Final","Dotted","Breath","EndRepeat","EndAndStartRepeat"]
	,Normal: {_hx_index:0,__enum__:"nx3.EBarline",toString:$estr}
	,None: {_hx_index:1,__enum__:"nx3.EBarline",toString:$estr}
	,Double: {_hx_index:2,__enum__:"nx3.EBarline",toString:$estr}
	,Final: {_hx_index:3,__enum__:"nx3.EBarline",toString:$estr}
	,Dotted: {_hx_index:4,__enum__:"nx3.EBarline",toString:$estr}
	,Breath: {_hx_index:5,__enum__:"nx3.EBarline",toString:$estr}
	,EndRepeat: {_hx_index:6,__enum__:"nx3.EBarline",toString:$estr}
	,EndAndStartRepeat: {_hx_index:7,__enum__:"nx3.EBarline",toString:$estr}
};
var nx3_EBarlineLeft = $hxEnums["nx3.EBarlineLeft"] = { __ename__ : true, __constructs__ : ["None","Single","Double","StartRepeat"]
	,None: {_hx_index:0,__enum__:"nx3.EBarlineLeft",toString:$estr}
	,Single: {_hx_index:1,__enum__:"nx3.EBarlineLeft",toString:$estr}
	,Double: {_hx_index:2,__enum__:"nx3.EBarlineLeft",toString:$estr}
	,StartRepeat: {_hx_index:3,__enum__:"nx3.EBarlineLeft",toString:$estr}
};
var nx3_EBeamflagType = $hxEnums["nx3.EBeamflagType"] = { __ename__ : true, __constructs__ : ["None","Start16","End16","Full16"]
	,None: {_hx_index:0,__enum__:"nx3.EBeamflagType",toString:$estr}
	,Start16: {_hx_index:1,__enum__:"nx3.EBeamflagType",toString:$estr}
	,End16: {_hx_index:2,__enum__:"nx3.EBeamflagType",toString:$estr}
	,Full16: {_hx_index:3,__enum__:"nx3.EBeamflagType",toString:$estr}
};
var nx3_EClef = $hxEnums["nx3.EClef"] = { __ename__ : true, __constructs__ : ["ClefG","ClefF","ClefC"]
	,ClefG: {_hx_index:0,__enum__:"nx3.EClef",toString:$estr}
	,ClefF: {_hx_index:1,__enum__:"nx3.EClef",toString:$estr}
	,ClefC: {_hx_index:2,__enum__:"nx3.EClef",toString:$estr}
};
var nx3_EDirectionTools = function() { };
$hxClasses["nx3.EDirectionTools"] = nx3_EDirectionTools;
nx3_EDirectionTools.__name__ = ["nx3","EDirectionTools"];
nx3_EDirectionTools.uadToUd = function(directionUAD) {
	if(directionUAD == nx3_EDirectionUAD.Up) {
		return nx3_EDirectionUD.Up;
	}
	return nx3_EDirectionUD.Down;
};
var nx3_EDirectionUAD = $hxEnums["nx3.EDirectionUAD"] = { __ename__ : true, __constructs__ : ["Up","Auto","Down"]
	,Up: {_hx_index:0,__enum__:"nx3.EDirectionUAD",toString:$estr}
	,Auto: {_hx_index:1,__enum__:"nx3.EDirectionUAD",toString:$estr}
	,Down: {_hx_index:2,__enum__:"nx3.EDirectionUAD",toString:$estr}
};
var nx3_EDirectionUADTools = function() { };
$hxClasses["nx3.EDirectionUADTools"] = nx3_EDirectionUADTools;
nx3_EDirectionUADTools.__name__ = ["nx3","EDirectionUADTools"];
nx3_EDirectionUADTools.toUD = function(direction) {
	switch(direction._hx_index) {
	case 0:
		return nx3_EDirectionUD.Up;
	case 2:
		return nx3_EDirectionUD.Down;
	default:
		return nx3_EDirectionUD.Down;
	}
};
var nx3_EDirectionUD = $hxEnums["nx3.EDirectionUD"] = { __ename__ : true, __constructs__ : ["Up","Down"]
	,Up: {_hx_index:0,__enum__:"nx3.EDirectionUD",toString:$estr}
	,Down: {_hx_index:1,__enum__:"nx3.EDirectionUD",toString:$estr}
};
var nx3_EDirectionUDTools = function() { };
$hxClasses["nx3.EDirectionUDTools"] = nx3_EDirectionUDTools;
nx3_EDirectionUDTools.__name__ = ["nx3","EDirectionUDTools"];
nx3_EDirectionUDTools.toUAD = function(direction) {
	if(direction == nx3_EDirectionUD.Up) {
		return nx3_EDirectionUAD.Up;
	} else {
		return nx3_EDirectionUAD.Down;
	}
};
var nx3_EDisplayALN = $hxEnums["nx3.EDisplayALN"] = { __ename__ : true, __constructs__ : ["Always","Layout","Never"]
	,Always: {_hx_index:0,__enum__:"nx3.EDisplayALN",toString:$estr}
	,Layout: {_hx_index:1,__enum__:"nx3.EDisplayALN",toString:$estr}
	,Never: {_hx_index:2,__enum__:"nx3.EDisplayALN",toString:$estr}
};
var nx3_EHeadPosition = $hxEnums["nx3.EHeadPosition"] = { __ename__ : true, __constructs__ : ["Left","Center","Right"]
	,Left: {_hx_index:0,__enum__:"nx3.EHeadPosition",toString:$estr}
	,Center: {_hx_index:1,__enum__:"nx3.EHeadPosition",toString:$estr}
	,Right: {_hx_index:2,__enum__:"nx3.EHeadPosition",toString:$estr}
};
var nx3_EHeadType = $hxEnums["nx3.EHeadType"] = { __ename__ : true, __constructs__ : ["Normal","Rythmic","Crossed","Pause","Other"]
	,Normal: {_hx_index:0,__enum__:"nx3.EHeadType",toString:$estr}
	,Rythmic: {_hx_index:1,__enum__:"nx3.EHeadType",toString:$estr}
	,Crossed: {_hx_index:2,__enum__:"nx3.EHeadType",toString:$estr}
	,Pause: {_hx_index:3,__enum__:"nx3.EHeadType",toString:$estr}
	,Other: {_hx_index:4,__enum__:"nx3.EHeadType",toString:$estr}
};
var nx3_EHeadValueType = $hxEnums["nx3.EHeadValueType"] = { __ename__ : true, __constructs__ : ["HVT4","HVT2","HVT1"]
	,HVT4: {_hx_index:0,__enum__:"nx3.EHeadValueType",toString:$estr}
	,HVT2: {_hx_index:1,__enum__:"nx3.EHeadValueType",toString:$estr}
	,HVT1: {_hx_index:2,__enum__:"nx3.EHeadValueType",toString:$estr}
};
var nx3_EKey = $hxEnums["nx3.EKey"] = { __ename__ : true, __constructs__ : ["Sharp6","Sharp5","Sharp4","Sharp3","Sharp2","Sharp1","Natural","Flat1","Flat2","Flat3","Flat4","Flat5","Flat6"]
	,Sharp6: {_hx_index:0,__enum__:"nx3.EKey",toString:$estr}
	,Sharp5: {_hx_index:1,__enum__:"nx3.EKey",toString:$estr}
	,Sharp4: {_hx_index:2,__enum__:"nx3.EKey",toString:$estr}
	,Sharp3: {_hx_index:3,__enum__:"nx3.EKey",toString:$estr}
	,Sharp2: {_hx_index:4,__enum__:"nx3.EKey",toString:$estr}
	,Sharp1: {_hx_index:5,__enum__:"nx3.EKey",toString:$estr}
	,Natural: {_hx_index:6,__enum__:"nx3.EKey",toString:$estr}
	,Flat1: {_hx_index:7,__enum__:"nx3.EKey",toString:$estr}
	,Flat2: {_hx_index:8,__enum__:"nx3.EKey",toString:$estr}
	,Flat3: {_hx_index:9,__enum__:"nx3.EKey",toString:$estr}
	,Flat4: {_hx_index:10,__enum__:"nx3.EKey",toString:$estr}
	,Flat5: {_hx_index:11,__enum__:"nx3.EKey",toString:$estr}
	,Flat6: {_hx_index:12,__enum__:"nx3.EKey",toString:$estr}
};
var nx3_EKeysTools = function() { };
$hxClasses["nx3.EKeysTools"] = nx3_EKeysTools;
nx3_EKeysTools.__name__ = ["nx3","EKeysTools"];
nx3_EKeysTools.getLevels = function(key,clef) {
	var result = [];
	switch(key._hx_index) {
	case 0:
		result = [-4,-1,-5,-2,1,-3];
		break;
	case 1:
		result = [-4,-1,-5,-2,1];
		break;
	case 2:
		result = [-4,-1,-5,-2];
		break;
	case 3:
		result = [-4,-1,-5];
		break;
	case 4:
		result = [-4,-1];
		break;
	case 5:
		result = [-4];
		break;
	case 7:
		result = [0];
		break;
	case 8:
		result = [0,-3];
		break;
	case 9:
		result = [0,-3,1];
		break;
	case 10:
		result = [0,-3,1,-2];
		break;
	case 11:
		result = [0,-3,1,-2,2,-1];
		break;
	case 12:
		result = [0,-3,1,-2,2,-1,3];
		break;
	default:
		result = [];
	}
	var adjust;
	switch(clef._hx_index) {
	case 0:
		adjust = -1;
		break;
	case 1:
		adjust = 1;
		break;
	default:
		adjust = 0;
	}
	var _g1 = 0;
	var _g = result.length;
	while(_g1 < _g) result[_g1++] += adjust;
	return result;
};
nx3_EKeysTools.getSigncode = function(key) {
	switch(key._hx_index) {
	case 0:case 1:case 2:case 3:case 4:case 5:
		return 1;
	case 7:case 8:case 9:case 10:case 11:case 12:
		return -1;
	default:
		return 0;
	}
};
nx3_EKeysTools.getKeyNr = function(key) {
	switch(key._hx_index) {
	case 0:
		return 6;
	case 1:
		return 5;
	case 2:
		return 4;
	case 3:
		return 3;
	case 4:
		return 2;
	case 5:
		return 1;
	case 7:
		return -1;
	case 8:
		return -2;
	case 9:
		return -3;
	case 10:
		return -4;
	case 11:
		return -5;
	case 12:
		return -6;
	default:
		return 0;
	}
};
nx3_EKeysTools.getNotenrBaseMap = function(key) {
	if(key == null) {
		var _g = new haxe_ds_IntMap();
		_g.h[0] = 11;
		_g.h[1] = 9;
		_g.h[2] = 7;
		_g.h[3] = 5;
		_g.h[4] = 4;
		_g.h[5] = 2;
		_g.h[6] = 0;
		return _g;
	}
	if(key == null) {
		var _g1 = new haxe_ds_IntMap();
		_g1.h[0] = 11;
		_g1.h[1] = 9;
		_g1.h[2] = 7;
		_g1.h[3] = 5;
		_g1.h[4] = 4;
		_g1.h[5] = 2;
		_g1.h[6] = 0;
		return _g1;
	} else {
		switch(key._hx_index) {
		case 0:
			var _g2 = new haxe_ds_IntMap();
			_g2.h[0] = 11;
			_g2.h[1] = 10;
			_g2.h[2] = 8;
			_g2.h[3] = 6;
			_g2.h[4] = 5;
			_g2.h[5] = 3;
			_g2.h[6] = 1;
			return _g2;
		case 1:
			var _g3 = new haxe_ds_IntMap();
			_g3.h[0] = 11;
			_g3.h[1] = 10;
			_g3.h[2] = 8;
			_g3.h[3] = 6;
			_g3.h[4] = 4;
			_g3.h[5] = 3;
			_g3.h[6] = 1;
			return _g3;
		case 2:
			var _g4 = new haxe_ds_IntMap();
			_g4.h[0] = 11;
			_g4.h[1] = 9;
			_g4.h[2] = 8;
			_g4.h[3] = 6;
			_g4.h[4] = 4;
			_g4.h[5] = 3;
			_g4.h[6] = 1;
			return _g4;
		case 3:
			var _g5 = new haxe_ds_IntMap();
			_g5.h[0] = 11;
			_g5.h[1] = 9;
			_g5.h[2] = 8;
			_g5.h[3] = 6;
			_g5.h[4] = 4;
			_g5.h[5] = 2;
			_g5.h[6] = 1;
			return _g5;
		case 4:
			var _g6 = new haxe_ds_IntMap();
			_g6.h[0] = 11;
			_g6.h[1] = 9;
			_g6.h[2] = 7;
			_g6.h[3] = 6;
			_g6.h[4] = 4;
			_g6.h[5] = 2;
			_g6.h[6] = 1;
			return _g6;
		case 5:
			var _g7 = new haxe_ds_IntMap();
			_g7.h[0] = 11;
			_g7.h[1] = 9;
			_g7.h[2] = 7;
			_g7.h[3] = 6;
			_g7.h[4] = 4;
			_g7.h[5] = 2;
			_g7.h[6] = 0;
			return _g7;
		case 7:
			var _g8 = new haxe_ds_IntMap();
			_g8.h[0] = 10;
			_g8.h[1] = 9;
			_g8.h[2] = 7;
			_g8.h[3] = 5;
			_g8.h[4] = 4;
			_g8.h[5] = 2;
			_g8.h[6] = 0;
			return _g8;
		case 8:
			var _g9 = new haxe_ds_IntMap();
			_g9.h[0] = 10;
			_g9.h[1] = 9;
			_g9.h[2] = 7;
			_g9.h[3] = 5;
			_g9.h[4] = 3;
			_g9.h[5] = 2;
			_g9.h[6] = 0;
			return _g9;
		case 9:
			var _g10 = new haxe_ds_IntMap();
			_g10.h[0] = 10;
			_g10.h[1] = 8;
			_g10.h[2] = 7;
			_g10.h[3] = 5;
			_g10.h[4] = 3;
			_g10.h[5] = 2;
			_g10.h[6] = 0;
			return _g10;
		case 10:
			var _g11 = new haxe_ds_IntMap();
			_g11.h[0] = 10;
			_g11.h[1] = 8;
			_g11.h[2] = 7;
			_g11.h[3] = 5;
			_g11.h[4] = 3;
			_g11.h[5] = 1;
			_g11.h[6] = 0;
			return _g11;
		case 11:
			var _g12 = new haxe_ds_IntMap();
			_g12.h[0] = 10;
			_g12.h[1] = 8;
			_g12.h[2] = 6;
			_g12.h[3] = 5;
			_g12.h[4] = 3;
			_g12.h[5] = 1;
			_g12.h[6] = 0;
			return _g12;
		case 12:
			var _g13 = new haxe_ds_IntMap();
			_g13.h[0] = 10;
			_g13.h[1] = 8;
			_g13.h[2] = 6;
			_g13.h[3] = 5;
			_g13.h[4] = 3;
			_g13.h[5] = 1;
			_g13.h[6] = -1;
			return _g13;
		default:
			var _g14 = new haxe_ds_IntMap();
			_g14.h[0] = 11;
			_g14.h[1] = 9;
			_g14.h[2] = 7;
			_g14.h[3] = 5;
			_g14.h[4] = 4;
			_g14.h[5] = 2;
			_g14.h[6] = 0;
			return _g14;
		}
	}
};
nx3_EKeysTools.getSignsBaseMap = function(key) {
	if(key == null) {
		var _g = new haxe_ds_IntMap();
		_g.h[0] = nx3_ESign.Natural;
		_g.h[1] = nx3_ESign.Natural;
		_g.h[2] = nx3_ESign.Natural;
		_g.h[3] = nx3_ESign.Natural;
		_g.h[4] = nx3_ESign.Natural;
		_g.h[5] = nx3_ESign.Natural;
		_g.h[6] = nx3_ESign.Natural;
		return _g;
	}
	if(key == null) {
		var _g1 = new haxe_ds_IntMap();
		_g1.h[0] = nx3_ESign.Natural;
		_g1.h[1] = nx3_ESign.Natural;
		_g1.h[2] = nx3_ESign.Natural;
		_g1.h[3] = nx3_ESign.Natural;
		_g1.h[4] = nx3_ESign.Natural;
		_g1.h[5] = nx3_ESign.Natural;
		_g1.h[6] = nx3_ESign.Natural;
		return _g1;
	} else {
		switch(key._hx_index) {
		case 0:
			var _g2 = new haxe_ds_IntMap();
			_g2.h[0] = nx3_ESign.Natural;
			_g2.h[1] = nx3_ESign.Sharp;
			_g2.h[2] = nx3_ESign.Sharp;
			_g2.h[3] = nx3_ESign.Sharp;
			_g2.h[4] = nx3_ESign.Sharp;
			_g2.h[5] = nx3_ESign.Sharp;
			_g2.h[6] = nx3_ESign.Sharp;
			return _g2;
		case 1:
			var _g3 = new haxe_ds_IntMap();
			_g3.h[0] = nx3_ESign.Natural;
			_g3.h[1] = nx3_ESign.Sharp;
			_g3.h[2] = nx3_ESign.Sharp;
			_g3.h[3] = nx3_ESign.Sharp;
			_g3.h[4] = nx3_ESign.Natural;
			_g3.h[5] = nx3_ESign.Sharp;
			_g3.h[6] = nx3_ESign.Sharp;
			return _g3;
		case 2:
			var _g4 = new haxe_ds_IntMap();
			_g4.h[0] = nx3_ESign.Natural;
			_g4.h[1] = nx3_ESign.Natural;
			_g4.h[2] = nx3_ESign.Sharp;
			_g4.h[3] = nx3_ESign.Sharp;
			_g4.h[4] = nx3_ESign.Natural;
			_g4.h[5] = nx3_ESign.Sharp;
			_g4.h[6] = nx3_ESign.Sharp;
			return _g4;
		case 3:
			var _g5 = new haxe_ds_IntMap();
			_g5.h[0] = nx3_ESign.Natural;
			_g5.h[1] = nx3_ESign.Natural;
			_g5.h[2] = nx3_ESign.Sharp;
			_g5.h[3] = nx3_ESign.Sharp;
			_g5.h[4] = nx3_ESign.Natural;
			_g5.h[5] = nx3_ESign.Natural;
			_g5.h[6] = nx3_ESign.Sharp;
			return _g5;
		case 4:
			var _g6 = new haxe_ds_IntMap();
			_g6.h[0] = nx3_ESign.Natural;
			_g6.h[1] = nx3_ESign.Natural;
			_g6.h[2] = nx3_ESign.Natural;
			_g6.h[3] = nx3_ESign.Sharp;
			_g6.h[4] = nx3_ESign.Natural;
			_g6.h[5] = nx3_ESign.Natural;
			_g6.h[6] = nx3_ESign.Sharp;
			return _g6;
		case 5:
			var _g7 = new haxe_ds_IntMap();
			_g7.h[0] = nx3_ESign.Natural;
			_g7.h[1] = nx3_ESign.Natural;
			_g7.h[2] = nx3_ESign.Natural;
			_g7.h[3] = nx3_ESign.Sharp;
			_g7.h[4] = nx3_ESign.Natural;
			_g7.h[5] = nx3_ESign.Natural;
			_g7.h[6] = nx3_ESign.Natural;
			return _g7;
		case 7:
			var _g8 = new haxe_ds_IntMap();
			_g8.h[0] = nx3_ESign.Flat;
			_g8.h[1] = nx3_ESign.Natural;
			_g8.h[2] = nx3_ESign.Natural;
			_g8.h[3] = nx3_ESign.Natural;
			_g8.h[4] = nx3_ESign.Natural;
			_g8.h[5] = nx3_ESign.Natural;
			_g8.h[6] = nx3_ESign.Natural;
			return _g8;
		case 8:
			var _g9 = new haxe_ds_IntMap();
			_g9.h[0] = nx3_ESign.Flat;
			_g9.h[1] = nx3_ESign.Natural;
			_g9.h[2] = nx3_ESign.Natural;
			_g9.h[3] = nx3_ESign.Natural;
			_g9.h[4] = nx3_ESign.Flat;
			_g9.h[5] = nx3_ESign.Natural;
			_g9.h[6] = nx3_ESign.Natural;
			return _g9;
		case 9:
			var _g10 = new haxe_ds_IntMap();
			_g10.h[0] = nx3_ESign.Flat;
			_g10.h[1] = nx3_ESign.Flat;
			_g10.h[2] = nx3_ESign.Natural;
			_g10.h[3] = nx3_ESign.Natural;
			_g10.h[4] = nx3_ESign.Flat;
			_g10.h[5] = nx3_ESign.Natural;
			_g10.h[6] = nx3_ESign.Natural;
			return _g10;
		case 10:
			var _g11 = new haxe_ds_IntMap();
			_g11.h[0] = nx3_ESign.Flat;
			_g11.h[1] = nx3_ESign.Flat;
			_g11.h[2] = nx3_ESign.Natural;
			_g11.h[3] = nx3_ESign.Natural;
			_g11.h[4] = nx3_ESign.Flat;
			_g11.h[5] = nx3_ESign.Flat;
			_g11.h[6] = nx3_ESign.Natural;
			return _g11;
		case 11:
			var _g12 = new haxe_ds_IntMap();
			_g12.h[0] = nx3_ESign.Flat;
			_g12.h[1] = nx3_ESign.Flat;
			_g12.h[2] = nx3_ESign.Flat;
			_g12.h[3] = nx3_ESign.Natural;
			_g12.h[4] = nx3_ESign.Flat;
			_g12.h[5] = nx3_ESign.Flat;
			_g12.h[6] = nx3_ESign.Natural;
			return _g12;
		case 12:
			var _g13 = new haxe_ds_IntMap();
			_g13.h[0] = nx3_ESign.Flat;
			_g13.h[1] = nx3_ESign.Flat;
			_g13.h[2] = nx3_ESign.Flat;
			_g13.h[3] = nx3_ESign.Natural;
			_g13.h[4] = nx3_ESign.Flat;
			_g13.h[5] = nx3_ESign.Flat;
			_g13.h[6] = nx3_ESign.Flat;
			return _g13;
		default:
			var _g14 = new haxe_ds_IntMap();
			_g14.h[0] = nx3_ESign.Natural;
			_g14.h[1] = nx3_ESign.Natural;
			_g14.h[2] = nx3_ESign.Natural;
			_g14.h[3] = nx3_ESign.Natural;
			_g14.h[4] = nx3_ESign.Natural;
			_g14.h[5] = nx3_ESign.Natural;
			_g14.h[6] = nx3_ESign.Natural;
			return _g14;
		}
	}
};
nx3_EKeysTools.getKeyRootShift = function(key) {
	switch(key._hx_index) {
	case 0:
		return 6;
	case 1:
		return 11;
	case 2:
		return 4;
	case 3:
		return 9;
	case 4:
		return 2;
	case 5:
		return 7;
	case 6:
		return 0;
	case 7:
		return 5;
	case 8:
		return 10;
	case 9:
		return 3;
	case 10:
		return 8;
	case 11:
		return 1;
	case 12:
		return 4;
	}
};
var nx3_ELyricContinuation = $hxEnums["nx3.ELyricContinuation"] = { __ename__ : true, __constructs__ : ["Hyphen","Melisma"]
	,Hyphen: {_hx_index:0,__enum__:"nx3.ELyricContinuation",toString:$estr}
	,Melisma: {_hx_index:1,__enum__:"nx3.ELyricContinuation",toString:$estr}
};
var nx3_EModus = $hxEnums["nx3.EModus"] = { __ename__ : true, __constructs__ : ["Major","Minor"]
	,Major: {_hx_index:0,__enum__:"nx3.EModus",toString:$estr}
	,Minor: {_hx_index:1,__enum__:"nx3.EModus",toString:$estr}
};
var nx3_ENotationVariant = $hxEnums["nx3.ENotationVariant"] = { __ename__ : true, __constructs__ : ["Normal","Rythmic","RythmicSingleLevel","HeadsOnly","StavesOnly"]
	,Normal: {_hx_index:0,__enum__:"nx3.ENotationVariant",toString:$estr}
	,Rythmic: {_hx_index:1,__enum__:"nx3.ENotationVariant",toString:$estr}
	,RythmicSingleLevel: ($_=function(level) { return {_hx_index:2,level:level,__enum__:"nx3.ENotationVariant",toString:$estr}; },$_.__params__ = ["level"],$_)
	,HeadsOnly: {_hx_index:3,__enum__:"nx3.ENotationVariant",toString:$estr}
	,StavesOnly: {_hx_index:4,__enum__:"nx3.ENotationVariant",toString:$estr}
};
var nx3_ENoteArticulation = $hxEnums["nx3.ENoteArticulation"] = { __ename__ : true, __constructs__ : ["Staccato","Tenuto","Marcato"]
	,Staccato: {_hx_index:0,__enum__:"nx3.ENoteArticulation",toString:$estr}
	,Tenuto: {_hx_index:1,__enum__:"nx3.ENoteArticulation",toString:$estr}
	,Marcato: {_hx_index:2,__enum__:"nx3.ENoteArticulation",toString:$estr}
};
var nx3_ENoteAttributes = $hxEnums["nx3.ENoteAttributes"] = { __ename__ : true, __constructs__ : ["Arpeggio","Clef"]
	,Arpeggio: ($_=function(top,bottomY) { return {_hx_index:0,top:top,bottomY:bottomY,__enum__:"nx3.ENoteAttributes",toString:$estr}; },$_.__params__ = ["top","bottomY"],$_)
	,Clef: ($_=function(variant) { return {_hx_index:1,variant:variant,__enum__:"nx3.ENoteAttributes",toString:$estr}; },$_.__params__ = ["variant"],$_)
};
var nx3_ENoteType = $hxEnums["nx3.ENoteType"] = { __ename__ : true, __constructs__ : ["Note","Pause","BarPause","Tpl","Lyric","Chord","Dynamics","Pitch"]
	,Note: ($_=function(heads,variant,articulations,attributes) { return {_hx_index:0,heads:heads,variant:variant,articulations:articulations,attributes:attributes,__enum__:"nx3.ENoteType",toString:$estr}; },$_.__params__ = ["heads","variant","articulations","attributes"],$_)
	,Pause: ($_=function(level) { return {_hx_index:1,level:level,__enum__:"nx3.ENoteType",toString:$estr}; },$_.__params__ = ["level"],$_)
	,BarPause: {_hx_index:2,__enum__:"nx3.ENoteType",toString:$estr}
	,Tpl: ($_=function(level,sign,pause) { return {_hx_index:3,level:level,sign:sign,pause:pause,__enum__:"nx3.ENoteType",toString:$estr}; },$_.__params__ = ["level","sign","pause"],$_)
	,Lyric: ($_=function(text,offset,continuation,font) { return {_hx_index:4,text:text,offset:offset,continuation:continuation,font:font,__enum__:"nx3.ENoteType",toString:$estr}; },$_.__params__ = ["text","offset","continuation","font"],$_)
	,Chord: {_hx_index:5,__enum__:"nx3.ENoteType",toString:$estr}
	,Dynamics: {_hx_index:6,__enum__:"nx3.ENoteType",toString:$estr}
	,Pitch: ($_=function(level,midinote) { return {_hx_index:7,level:level,midinote:midinote,__enum__:"nx3.ENoteType",toString:$estr}; },$_.__params__ = ["level","midinote"],$_)
};
var nx3_ENoteVal = $hxEnums["nx3.ENoteVal"] = { __ename__ : true, __constructs__ : ["Nv1","Nv1dot","Nv1ddot","Nv1tri","Nv2","Nv2dot","Nv2ddot","Nv2tri","Nv4","Nv4dot","Nv4ddot","Nv4tri","Nv8","Nv8dot","Nv8ddot","Nv8tri","Nv16","Nv16dot","Nv16ddot","Nv16tri","Nv32","Nv32dot","Nv32ddot","Nv32tri"]
	,Nv1: {_hx_index:0,__enum__:"nx3.ENoteVal",toString:$estr}
	,Nv1dot: {_hx_index:1,__enum__:"nx3.ENoteVal",toString:$estr}
	,Nv1ddot: {_hx_index:2,__enum__:"nx3.ENoteVal",toString:$estr}
	,Nv1tri: {_hx_index:3,__enum__:"nx3.ENoteVal",toString:$estr}
	,Nv2: {_hx_index:4,__enum__:"nx3.ENoteVal",toString:$estr}
	,Nv2dot: {_hx_index:5,__enum__:"nx3.ENoteVal",toString:$estr}
	,Nv2ddot: {_hx_index:6,__enum__:"nx3.ENoteVal",toString:$estr}
	,Nv2tri: {_hx_index:7,__enum__:"nx3.ENoteVal",toString:$estr}
	,Nv4: {_hx_index:8,__enum__:"nx3.ENoteVal",toString:$estr}
	,Nv4dot: {_hx_index:9,__enum__:"nx3.ENoteVal",toString:$estr}
	,Nv4ddot: {_hx_index:10,__enum__:"nx3.ENoteVal",toString:$estr}
	,Nv4tri: {_hx_index:11,__enum__:"nx3.ENoteVal",toString:$estr}
	,Nv8: {_hx_index:12,__enum__:"nx3.ENoteVal",toString:$estr}
	,Nv8dot: {_hx_index:13,__enum__:"nx3.ENoteVal",toString:$estr}
	,Nv8ddot: {_hx_index:14,__enum__:"nx3.ENoteVal",toString:$estr}
	,Nv8tri: {_hx_index:15,__enum__:"nx3.ENoteVal",toString:$estr}
	,Nv16: {_hx_index:16,__enum__:"nx3.ENoteVal",toString:$estr}
	,Nv16dot: {_hx_index:17,__enum__:"nx3.ENoteVal",toString:$estr}
	,Nv16ddot: {_hx_index:18,__enum__:"nx3.ENoteVal",toString:$estr}
	,Nv16tri: {_hx_index:19,__enum__:"nx3.ENoteVal",toString:$estr}
	,Nv32: {_hx_index:20,__enum__:"nx3.ENoteVal",toString:$estr}
	,Nv32dot: {_hx_index:21,__enum__:"nx3.ENoteVal",toString:$estr}
	,Nv32ddot: {_hx_index:22,__enum__:"nx3.ENoteVal",toString:$estr}
	,Nv32tri: {_hx_index:23,__enum__:"nx3.ENoteVal",toString:$estr}
};
var nx3_ENoteValTools = function() { };
$hxClasses["nx3.ENoteValTools"] = nx3_ENoteValTools;
nx3_ENoteValTools.__name__ = ["nx3","ENoteValTools"];
nx3_ENoteValTools.beaminglevel = function(val) {
	switch(val._hx_index) {
	case 12:
		return 1;
	case 13:
		return 1;
	case 14:
		return 1;
	case 15:
		return 1;
	case 16:
		return 2;
	case 17:
		return 2;
	case 18:
		return 2;
	case 19:
		return 2;
	case 20:
		return 3;
	case 21:
		return 3;
	case 22:
		return 3;
	case 23:
		return 3;
	default:
		return 0;
	}
};
nx3_ENoteValTools.stavinglevel = function(val) {
	switch(val._hx_index) {
	case 0:
		return 0;
	case 1:
		return 0;
	case 2:
		return 0;
	case 3:
		return 0;
	default:
		return 1;
	}
};
nx3_ENoteValTools.dotlevel = function(val) {
	switch(val._hx_index) {
	case 1:case 5:case 9:case 13:case 17:case 21:
		return 1;
	case 2:case 6:case 10:case 14:case 18:case 22:
		return 2;
	default:
		return 0;
	}
};
nx3_ENoteValTools.head = function(val) {
	switch(val._hx_index) {
	case 0:
		return nx3_EHeadValueType.HVT1;
	case 1:
		return nx3_EHeadValueType.HVT1;
	case 2:
		return nx3_EHeadValueType.HVT1;
	case 3:
		return nx3_EHeadValueType.HVT1;
	case 4:
		return nx3_EHeadValueType.HVT2;
	case 5:
		return nx3_EHeadValueType.HVT2;
	case 6:
		return nx3_EHeadValueType.HVT2;
	case 7:
		return nx3_EHeadValueType.HVT2;
	default:
		return nx3_EHeadValueType.HVT4;
	}
};
nx3_ENoteValTools.value = function(noteval) {
	switch(noteval._hx_index) {
	case 0:
		return 12096;
	case 1:
		return 18144;
	case 2:
		return 21168;
	case 3:
		return 8063;
	case 4:
		return 6048;
	case 5:
		return 9072;
	case 6:
		return 10584;
	case 7:
		return 4031;
	case 8:
		return 3024;
	case 9:
		return 4536;
	case 10:
		return 5292;
	case 11:
		return 2015;
	case 12:
		return 1512;
	case 13:
		return 2268;
	case 14:
		return 2646;
	case 15:
		return 1007;
	case 16:
		return 756;
	case 17:
		return 1134;
	case 18:
		return 1323;
	case 19:
		return 503;
	case 20:
		return 378;
	case 21:
		return 567;
	case 22:
		return 661;
	case 23:
		return 251;
	}
};
nx3_ENoteValTools.getFromValue = function(value) {
	switch(value) {
	case 251:
		return nx3_ENoteVal.Nv32tri;
	case 378:
		return nx3_ENoteVal.Nv32;
	case 503:
		return nx3_ENoteVal.Nv16tri;
	case 567:
		return nx3_ENoteVal.Nv32dot;
	case 661:
		return nx3_ENoteVal.Nv32ddot;
	case 756:
		return nx3_ENoteVal.Nv16;
	case 1007:
		return nx3_ENoteVal.Nv8tri;
	case 1134:
		return nx3_ENoteVal.Nv16dot;
	case 1323:
		return nx3_ENoteVal.Nv16ddot;
	case 1512:
		return nx3_ENoteVal.Nv8;
	case 2015:
		return nx3_ENoteVal.Nv4tri;
	case 2268:
		return nx3_ENoteVal.Nv8dot;
	case 2646:
		return nx3_ENoteVal.Nv8ddot;
	case 3024:
		return nx3_ENoteVal.Nv4;
	case 4031:
		return nx3_ENoteVal.Nv2tri;
	case 4536:
		return nx3_ENoteVal.Nv4dot;
	case 5292:
		return nx3_ENoteVal.Nv4ddot;
	case 6048:
		return nx3_ENoteVal.Nv2;
	case 8063:
		return nx3_ENoteVal.Nv1tri;
	case 9072:
		return nx3_ENoteVal.Nv2dot;
	case 10584:
		return nx3_ENoteVal.Nv2ddot;
	case 12096:
		return nx3_ENoteVal.Nv1;
	case 18144:
		return nx3_ENoteVal.Nv1dot;
	case 21168:
		return nx3_ENoteVal.Nv1ddot;
	default:
		return null;
	}
};
nx3_ENoteValTools.toValString = function(val) {
	switch(val._hx_index) {
	case 0:
		return "1";
	case 1:
		return "1.";
	case 2:
		return "1..";
	case 3:
		return "1-3";
	case 4:
		return "2";
	case 5:
		return "2.";
	case 6:
		return "2..";
	case 7:
		return "2-3";
	case 8:
		return "4";
	case 9:
		return "4.";
	case 10:
		return "4..";
	case 11:
		return "4-3";
	case 12:
		return "8";
	case 13:
		return "8.";
	case 14:
		return "8..";
	case 15:
		return "8-3";
	case 16:
		return "16";
	case 17:
		return "16.";
	case 18:
		return "16..";
	case 19:
		return "16-3";
	case 20:
		return "32";
	case 21:
		return "32.";
	case 22:
		return "32..";
	case 23:
		return "32-3";
	}
};
nx3_ENoteValTools.fromValString = function(valString) {
	if(valString == null) {
		return nx3_ENoteVal.Nv4;
	} else {
		switch(valString) {
		case "":
			return nx3_ENoteVal.Nv4;
		case "1":
			return nx3_ENoteVal.Nv1;
		case "1-3":
			return nx3_ENoteVal.Nv1tri;
		case "1.":
			return nx3_ENoteVal.Nv1dot;
		case "1..":
			return nx3_ENoteVal.Nv1ddot;
		case "16":
			return nx3_ENoteVal.Nv16;
		case "16-3":
			return nx3_ENoteVal.Nv16tri;
		case "16.":
			return nx3_ENoteVal.Nv16dot;
		case "16..":
			return nx3_ENoteVal.Nv16ddot;
		case "2":
			return nx3_ENoteVal.Nv2;
		case "2-3":
			return nx3_ENoteVal.Nv2tri;
		case "2.":
			return nx3_ENoteVal.Nv2dot;
		case "2..":
			return nx3_ENoteVal.Nv2ddot;
		case "32":
			return nx3_ENoteVal.Nv32;
		case "32-3":
			return nx3_ENoteVal.Nv32tri;
		case "32.":
			return nx3_ENoteVal.Nv32dot;
		case "32..":
			return nx3_ENoteVal.Nv32ddot;
		case "4":
			return nx3_ENoteVal.Nv4;
		case "4-3":
			return nx3_ENoteVal.Nv4tri;
		case "4.":
			return nx3_ENoteVal.Nv4dot;
		case "4..":
			return nx3_ENoteVal.Nv4ddot;
		case "8":
			return nx3_ENoteVal.Nv8;
		case "8-3":
			return nx3_ENoteVal.Nv8tri;
		case "8.":
			return nx3_ENoteVal.Nv8dot;
		case "8..":
			return nx3_ENoteVal.Nv8ddot;
		default:
			throw new js__$Boot_HaxeError("unhandled note value: " + valString);
		}
	}
};
var nx3_EOctave = $hxEnums["nx3.EOctave"] = { __ename__ : true, __constructs__ : ["Normal","Up","Down"]
	,Normal: {_hx_index:0,__enum__:"nx3.EOctave",toString:$estr}
	,Up: {_hx_index:1,__enum__:"nx3.EOctave",toString:$estr}
	,Down: {_hx_index:2,__enum__:"nx3.EOctave",toString:$estr}
};
var nx3_EPartType = $hxEnums["nx3.EPartType"] = { __ename__ : true, __constructs__ : ["Normal","Lyrics","Tplrow","Tplchain","Dynamics","Chords","Ignore","Hidden","PitchRow","PitchChain"]
	,Normal: {_hx_index:0,__enum__:"nx3.EPartType",toString:$estr}
	,Lyrics: {_hx_index:1,__enum__:"nx3.EPartType",toString:$estr}
	,Tplrow: ($_=function(modus,octave) { return {_hx_index:2,modus:modus,octave:octave,__enum__:"nx3.EPartType",toString:$estr}; },$_.__params__ = ["modus","octave"],$_)
	,Tplchain: ($_=function(modus,octave) { return {_hx_index:3,modus:modus,octave:octave,__enum__:"nx3.EPartType",toString:$estr}; },$_.__params__ = ["modus","octave"],$_)
	,Dynamics: {_hx_index:4,__enum__:"nx3.EPartType",toString:$estr}
	,Chords: {_hx_index:5,__enum__:"nx3.EPartType",toString:$estr}
	,Ignore: {_hx_index:6,__enum__:"nx3.EPartType",toString:$estr}
	,Hidden: {_hx_index:7,__enum__:"nx3.EPartType",toString:$estr}
	,PitchRow: {_hx_index:8,__enum__:"nx3.EPartType",toString:$estr}
	,PitchChain: ($_=function(leveloffset) { return {_hx_index:9,leveloffset:leveloffset,__enum__:"nx3.EPartType",toString:$estr}; },$_.__params__ = ["leveloffset"],$_)
};
var nx3_EPosition = $hxEnums["nx3.EPosition"] = { __ename__ : true, __constructs__ : ["X","Y","XY","XYW"]
	,X: ($_=function(x) { return {_hx_index:0,x:x,__enum__:"nx3.EPosition",toString:$estr}; },$_.__params__ = ["x"],$_)
	,Y: ($_=function(y) { return {_hx_index:1,y:y,__enum__:"nx3.EPosition",toString:$estr}; },$_.__params__ = ["y"],$_)
	,XY: ($_=function(x,y) { return {_hx_index:2,x:x,y:y,__enum__:"nx3.EPosition",toString:$estr}; },$_.__params__ = ["x","y"],$_)
	,XYW: ($_=function(x,y,w) { return {_hx_index:3,x:x,y:y,w:w,__enum__:"nx3.EPosition",toString:$estr}; },$_.__params__ = ["x","y","w"],$_)
};
var nx3_ESign = $hxEnums["nx3.ESign"] = { __ename__ : true, __constructs__ : ["None","Natural","Flat","Sharp","DoubleFlat","DoubleSharp","ParNatural","ParFlat","ParSharp"]
	,None: {_hx_index:0,__enum__:"nx3.ESign",toString:$estr}
	,Natural: {_hx_index:1,__enum__:"nx3.ESign",toString:$estr}
	,Flat: {_hx_index:2,__enum__:"nx3.ESign",toString:$estr}
	,Sharp: {_hx_index:3,__enum__:"nx3.ESign",toString:$estr}
	,DoubleFlat: {_hx_index:4,__enum__:"nx3.ESign",toString:$estr}
	,DoubleSharp: {_hx_index:5,__enum__:"nx3.ESign",toString:$estr}
	,ParNatural: {_hx_index:6,__enum__:"nx3.ESign",toString:$estr}
	,ParFlat: {_hx_index:7,__enum__:"nx3.ESign",toString:$estr}
	,ParSharp: {_hx_index:8,__enum__:"nx3.ESign",toString:$estr}
};
var nx3_ETie = $hxEnums["nx3.ETie"] = { __ename__ : true, __constructs__ : ["Tie","Gliss"]
	,Tie: ($_=function(direction,level) { return {_hx_index:0,direction:direction,level:level,__enum__:"nx3.ETie",toString:$estr}; },$_.__params__ = ["direction","level"],$_)
	,Gliss: ($_=function(direction,levelLeft,levelRight) { return {_hx_index:1,direction:direction,levelLeft:levelLeft,levelRight:levelRight,__enum__:"nx3.ETie",toString:$estr}; },$_.__params__ = ["direction","levelLeft","levelRight"],$_)
};
var nx3_ETime = $hxEnums["nx3.ETime"] = { __ename__ : true, __constructs__ : ["Time2_2","Time3_2","Time4_2","Time2_4","Time3_4","Time4_4","Time5_4","Time6_4","Time7_4","Time2_8","Time3_8","Time4_8","Time5_8","Time6_8","Time7_8","Time9_8","Time12_8","TimeCommon","TimeAllabreve"]
	,Time2_2: {_hx_index:0,__enum__:"nx3.ETime",toString:$estr}
	,Time3_2: {_hx_index:1,__enum__:"nx3.ETime",toString:$estr}
	,Time4_2: {_hx_index:2,__enum__:"nx3.ETime",toString:$estr}
	,Time2_4: {_hx_index:3,__enum__:"nx3.ETime",toString:$estr}
	,Time3_4: {_hx_index:4,__enum__:"nx3.ETime",toString:$estr}
	,Time4_4: {_hx_index:5,__enum__:"nx3.ETime",toString:$estr}
	,Time5_4: {_hx_index:6,__enum__:"nx3.ETime",toString:$estr}
	,Time6_4: {_hx_index:7,__enum__:"nx3.ETime",toString:$estr}
	,Time7_4: {_hx_index:8,__enum__:"nx3.ETime",toString:$estr}
	,Time2_8: {_hx_index:9,__enum__:"nx3.ETime",toString:$estr}
	,Time3_8: {_hx_index:10,__enum__:"nx3.ETime",toString:$estr}
	,Time4_8: {_hx_index:11,__enum__:"nx3.ETime",toString:$estr}
	,Time5_8: {_hx_index:12,__enum__:"nx3.ETime",toString:$estr}
	,Time6_8: {_hx_index:13,__enum__:"nx3.ETime",toString:$estr}
	,Time7_8: {_hx_index:14,__enum__:"nx3.ETime",toString:$estr}
	,Time9_8: {_hx_index:15,__enum__:"nx3.ETime",toString:$estr}
	,Time12_8: {_hx_index:16,__enum__:"nx3.ETime",toString:$estr}
	,TimeCommon: {_hx_index:17,__enum__:"nx3.ETime",toString:$estr}
	,TimeAllabreve: {_hx_index:18,__enum__:"nx3.ETime",toString:$estr}
};
var nx3_ETimeUtils = function() { };
$hxClasses["nx3.ETimeUtils"] = nx3_ETimeUtils;
nx3_ETimeUtils.__name__ = ["nx3","ETimeUtils"];
nx3_ETimeUtils.toString = function(time) {
	if(time == null) {
		return "";
	}
	switch(time._hx_index) {
	case 0:
		return "2/2";
	case 1:
		return "3/2";
	case 2:
		return "4/2";
	case 3:
		return "2/4";
	case 4:
		return "3/4";
	case 5:
		return "4/4";
	case 6:
		return "5/4";
	case 7:
		return "6/4";
	case 8:
		return "7/4";
	case 9:
		return "2/8";
	case 10:
		return "3/8";
	case 11:
		return "4/8";
	case 12:
		return "5/8";
	case 13:
		return "6/8";
	case 14:
		return "7/8";
	case 15:
		return "9/8";
	case 16:
		return "12/8";
	case 17:
		return "C";
	case 18:
		return "AllaBreve";
	}
};
nx3_ETimeUtils.fromString = function(str) {
	if(str == null) {
		return null;
	}
	switch(str) {
	case "12/8":
		return nx3_ETime.Time12_8;
	case "2/4":
		return nx3_ETime.Time2_4;
	case "2/8":
		return nx3_ETime.Time2_8;
	case "224":
		return nx3_ETime.Time2_2;
	case "3/2":
		return nx3_ETime.Time3_2;
	case "3/4":
		return nx3_ETime.Time3_4;
	case "3/8":
		return nx3_ETime.Time3_8;
	case "4/2":
		return nx3_ETime.Time4_2;
	case "4/4":
		return nx3_ETime.Time4_4;
	case "4/8":
		return nx3_ETime.Time4_8;
	case "5/4":
		return nx3_ETime.Time5_4;
	case "5/8":
		return nx3_ETime.Time5_8;
	case "6/4":
		return nx3_ETime.Time6_4;
	case "6/8":
		return nx3_ETime.Time6_8;
	case "7/4":
		return nx3_ETime.Time7_4;
	case "7/8":
		return nx3_ETime.Time7_8;
	case "9/8":
		return nx3_ETime.Time9_8;
	case "AllaBreve":
		return nx3_ETime.TimeAllabreve;
	case "C":
		return nx3_ETime.TimeCommon;
	default:
		return null;
	}
};
var nx3_EVoiceType = $hxEnums["nx3.EVoiceType"] = { __ename__ : true, __constructs__ : ["Normal","Barpause"]
	,Normal: {_hx_index:0,__enum__:"nx3.EVoiceType",toString:$estr}
	,Barpause: ($_=function(level) { return {_hx_index:1,level:level,__enum__:"nx3.EVoiceType",toString:$estr}; },$_.__params__ = ["level"],$_)
};
var nx3_IBarWidthCalculator = function() { };
$hxClasses["nx3.IBarWidthCalculator"] = nx3_IBarWidthCalculator;
nx3_IBarWidthCalculator.__name__ = ["nx3","IBarWidthCalculator"];
nx3_IBarWidthCalculator.prototype = {
	__class__: nx3_IBarWidthCalculator
};
var nx3_NBar = function(parts,type,time,timeDisplay,allotment,spacing) {
	if(spacing == null) {
		spacing = 0;
	}
	this.nparts = parts;
	var _g = 0;
	while(_g < parts.length) parts[_g++].nbar = this;
	this.type = type == null ? nx3_EBarType.Normal : type;
	this.time = time;
	this.timeDisplay = timeDisplay == null ? nx3_EDisplayALN.Layout : timeDisplay;
	this.allotment = allotment == null ? nx3_EAllotment.Logaritmic : allotment;
	this.spacing = spacing != 0 ? spacing : 8;
};
$hxClasses["nx3.NBar"] = nx3_NBar;
nx3_NBar.__name__ = ["nx3","NBar"];
nx3_NBar.prototype = {
	getNNote: function(partIdx,voiceIdx,noteIdx) {
		return this.getNPart(partIdx).getNVoice(voiceIdx).getNNote(noteIdx);
	}
	,getNPart: function(idx) {
		if(idx < 0 || idx > this.nparts.length) {
			return null;
		} else {
			return this.nparts[idx];
		}
	}
	,iterator: function() {
		return HxOverrides.iter(this.nparts);
	}
	,get_length: function() {
		return this.nparts.length;
	}
	,getTag: function() {
		var partstags = "";
		Lambda.iter(this.nparts,function(npart) {
			partstags += npart.getTag();
		});
		return "/" + nx3_NTags.nbarTypeTag(this.type) + partstags + (nx3_NTags.timeTag(this.time) + nx3_NTags.displayALNTag(this.timeDisplay)) + nx3_NTags.nbarAllotmentTag(this.allotment) + (this.spacing != 8 ? "sp:" + this.spacing : "");
	}
	,__class__: nx3_NBar
	,__properties__: {get_length:"get_length"}
};
var nx3_NHead = function(type,level,sign,tie,tieTo) {
	if(level == null) {
		level = 0;
	}
	this.type = type != null ? type : nx3_EHeadType.Normal;
	this.sign = sign != null ? sign : nx3_ESign.None;
	this.tie = tie != null ? tie : null;
	this.tieTo = tieTo != null ? tieTo : null;
	this.level = level;
};
$hxClasses["nx3.NHead"] = nx3_NHead;
nx3_NHead.__name__ = ["nx3","NHead"];
nx3_NHead.prototype = {
	toString: function() {
		var str = "" + this.level;
		var str1;
		if(this.type != nx3_EHeadType.Normal) {
			var e = this.type;
			str1 = " " + $hxEnums[e.__enum__].__constructs__[e._hx_index];
		} else {
			str1 = "";
		}
		str += str1;
		var str2;
		if(this.sign != nx3_ESign.None) {
			var e1 = this.sign;
			str2 = " " + $hxEnums[e1.__enum__].__constructs__[e1._hx_index];
		} else {
			str2 = "";
		}
		str += str2;
		return "NHead(" + str + ")";
	}
	,getTag: function() {
		return "&" + nx3_NTags.headTypetag(this.type) + Std.string(this.level) + nx3_NTags.headSignTag(this.sign) + (this.tie != null ? "_" : "");
	}
	,__class__: nx3_NHead
};
var nx3_NNote = function(type,heads,value,direction) {
	if(type == null) {
		type = heads != null ? nx3_ENoteType.Note(heads) : nx3_ENoteType.Note([new nx3_NHead()]);
	}
	if(heads != null) {
		var _g = 0;
		while(_g < heads.length) heads[_g++].nnote = this;
	}
	this.type = type == null ? nx3_ENoteType.Note(heads) : type;
	this.value = value == null ? nx3_ENoteVal.Nv4 : value;
	this.direction = direction == null ? nx3_EDirectionUAD.Auto : direction;
};
$hxClasses["nx3.NNote"] = nx3_NNote;
nx3_NNote.__name__ = ["nx3","NNote"];
nx3_NNote.__interfaces__ = [hxlazy_Lazy];
nx3_NNote.prototype = {
	iterator: function() {
		return HxOverrides.iter(this.get_nheads());
	}
	,get_length: function() {
		return this.get_nheads().length;
	}
	,get_nheads: function() {
		if(this.nheads_ != null) {
			return this.nheads_;
		}
		var _g = this.type;
		switch(_g._hx_index) {
		case 0:
			var nheads = _g.heads;
			nheads.sort(function(a,b) {
				return Reflect.compare(a.level,b.level);
			});
			this.nheads_ = nheads;
			break;
		case 1:
			this.nheads_ = [new nx3_NHead(nx3_EHeadType.Pause,_g.level)];
			break;
		default:
			this.nheads_ = [new nx3_NHead(nx3_EHeadType.Other,0)];
		}
		return this.nheads_;
	}
	,getNHead: function(idx) {
		if(idx < 0 || idx > this.get_nheads().length) {
			return null;
		} else {
			return this.get_nheads()[idx];
		}
	}
	,toString: function() {
		var str = "";
		var str1;
		var e = this.type;
		if($hxEnums[e.__enum__].__constructs__[e._hx_index] != "Note") {
			var e1 = this.type;
			str1 = " " + $hxEnums[e1.__enum__].__constructs__[e1._hx_index];
		} else {
			str1 = "";
		}
		str = "" + str1;
		var heads = "";
		var _g = 0;
		var _g1 = this.get_nheads();
		while(_g < _g1.length) heads += _g1[_g++].toString();
		return "NNote(" + str + "):" + heads;
	}
	,getTag: function() {
		var headstags = "";
		Lambda.iter(this,function(nhead) {
			headstags += nhead.getTag();
		});
		return "%l" + nx3_NTags.noteTypeTag(this.type) + headstags + nx3_ENoteValTools.toValString(this.value);
	}
	,get_headLevels: function() {
		if(this.__lazyheadLevels != null) {
			return this.__lazyheadLevels;
		}
		return this.__lazyheadLevels = Lambda.array(Lambda.map(this,function(head) {
			return head.level;
		}));
	}
	,get_topLevel: function() {
		if(this.__lazytopLevel != null) {
			return this.__lazytopLevel;
		}
		return this.__lazytopLevel = this.get_nheads()[0].level;
	}
	,get_bottomLevel: function() {
		if(this.__lazybottomLevel != null) {
			return this.__lazybottomLevel;
		}
		return this.__lazybottomLevel = this.get_nheads()[this.get_nheads().length - 1].level;
	}
	,get_ties: function() {
		if(this.__lazyties != null) {
			return this.__lazyties;
		}
		return this.__lazyties = Lambda.array(Lambda.filter(this,function(head) {
			return head.tie != null;
		}).map(function(head1) {
			return head1.tie;
		}));
	}
	,__class__: nx3_NNote
	,__properties__: {get_ties:"get_ties",get_bottomLevel:"get_bottomLevel",get_topLevel:"get_topLevel",get_headLevels:"get_headLevels",get_length:"get_length",get_nheads:"get_nheads"}
};
var nx3_NPart = function(voices,type,clef,clefDisplay,key,keyDisplay,sound) {
	if(sound == null) {
		sound = "";
	}
	this.nvoices = voices;
	var _g = 0;
	while(_g < voices.length) voices[_g++].npart = this;
	if(this.nvoices.length > 2) {
		throw new js__$Boot_HaxeError("For now, NPart can't have more than two voices");
	}
	this.type = type == null ? nx3_EPartType.Normal : type;
	this.clef = clef;
	this.clefDisplay = clefDisplay == null ? nx3_EDisplayALN.Layout : clefDisplay;
	this.key = key;
	this.keyDisplay = keyDisplay == null ? nx3_EDisplayALN.Layout : keyDisplay;
	this.sound = sound;
};
$hxClasses["nx3.NPart"] = nx3_NPart;
nx3_NPart.__name__ = ["nx3","NPart"];
nx3_NPart.prototype = {
	iterator: function() {
		return HxOverrides.iter(this.nvoices);
	}
	,get_length: function() {
		return this.nvoices.length;
	}
	,getNVoice: function(idx) {
		if(idx < 0 || idx > this.nvoices.length) {
			return null;
		} else {
			return this.nvoices[idx];
		}
	}
	,getTag: function() {
		var voicestags = "";
		Lambda.iter(this,function(nvoice) {
			voicestags += nvoice.getTag();
		});
		return "!" + nx3_NTags.npartTypeTag(this.type) + voicestags + (nx3_NTags.clefTag(this.clef) + nx3_NTags.displayALNTag(this.clefDisplay)) + (nx3_NTags.keyTag(this.key) + nx3_NTags.displayALNTag(this.keyDisplay));
	}
	,__class__: nx3_NPart
	,__properties__: {get_length:"get_length"}
};
var nx3_NScore = function(nbars) {
	this.tag = null;
	this.nbars = nbars;
	var _g = 0;
	while(_g < nbars.length) nbars[_g++].nscore = this;
	this.configuration = { };
	this.configuration.test = 123;
	this.configuration.rtempo = 80;
	this.configuration.rlength = 3;
	this.guid = cx_GUID.create();
	this.playbackSounds = [];
};
$hxClasses["nx3.NScore"] = nx3_NScore;
nx3_NScore.__name__ = ["nx3","NScore"];
nx3_NScore.prototype = {
	getNBar: function(idx) {
		if(idx < 0 || idx > this.nbars.length) {
			return null;
		} else {
			return this.nbars[idx];
		}
	}
	,iterator: function() {
		return HxOverrides.iter(this.nbars);
	}
	,get_length: function() {
		return this.nbars.length;
	}
	,getTag: function() {
		if(this.tag != null) {
			return this.tag;
		}
		var bartags = "";
		Lambda.iter(this.nbars,function(nbar) {
			bartags += nbar.getTag();
		});
		return this.tag = "#" + bartags;
	}
	,__class__: nx3_NScore
	,__properties__: {get_length:"get_length"}
};
var nx3_NTags = function() {
};
$hxClasses["nx3.NTags"] = nx3_NTags;
nx3_NTags.__name__ = ["nx3","NTags"];
nx3_NTags.nbarAllotmentTag = function(allotment) {
	if(allotment == null) {
		return "";
	}
	switch(allotment._hx_index) {
	case 0:
		return "aLA";
	case 1:
		return "aEQ";
	case 2:
		return "";
	case 3:
		return "aLN";
	}
};
nx3_NTags.nbarTypeTag = function(type) {
	if(type == null) {
		return "";
	}
	switch(type._hx_index) {
	case 1:
		return "bRP";
	case 2:
		return "bIG";
	case 3:
		return "bFO";
	default:
		return "";
	}
};
nx3_NTags.timeTag = function(time) {
	if(time == null) {
		return "";
	}
	return nx3_ETimeUtils.toString(time);
};
nx3_NTags.npartTypeTag = function(type) {
	if(type == null) {
		return "";
	}
	switch(type._hx_index) {
	case 1:
		return "pLY";
	case 2:
		return "pTR";
	case 3:
		return "pTC";
	case 4:
		return "pDY";
	case 5:
		return "pCH";
	case 6:
		return "pIG";
	case 7:
		return "pHI";
	case 8:
		return "pPR";
	default:
		return "";
	}
};
nx3_NTags.keyTag = function(key) {
	if(key == null) {
		return "";
	}
	return Std.string(nx3_EKeysTools.getKeyNr(key));
};
nx3_NTags.clefTag = function(clef) {
	if(clef == null) {
		return "";
	}
	switch(clef._hx_index) {
	case 0:
		return "G";
	case 1:
		return "F";
	case 2:
		return "C";
	}
};
nx3_NTags.displayALNTag = function(display) {
	if(display == null) {
		return "";
	}
	switch(display._hx_index) {
	case 0:
		return "dA";
	case 2:
		return "dN";
	default:
		return "";
	}
};
nx3_NTags.nvoiceTypeTag = function(type) {
	if(type._hx_index == 1) {
		return "vBP";
	} else {
		return "";
	}
};
nx3_NTags.directionUADTag = function(dir) {
	if(dir == null) {
		return "";
	}
	switch(dir._hx_index) {
	case 0:
		return "U";
	case 2:
		return "D";
	default:
		return "";
	}
};
nx3_NTags.noteTypeTag = function(type) {
	if(type == null) {
		return "";
	}
	switch(type._hx_index) {
	case 1:
		return "tP" + type.level;
	case 2:
		return "tB";
	case 3:
		var pause = type.pause;
		return "tT" + type.level + ":" + Std.string(type.sign) + ":" + (pause == null ? "null" : "" + pause);
	case 4:
		return "tL" + type.text + ":" + Std.string(type.offset);
	case 5:
		return "tC";
	case 6:
		return "tD";
	case 7:
		return "tI" + type.level + ":midinote";
	default:
		return "";
	}
};
nx3_NTags.headSignTag = function(sign) {
	if(sign == null) {
		return "";
	}
	switch(sign._hx_index) {
	case 1:
		return "N";
	case 2:
		return "b";
	case 3:
		return "#";
	case 4:
		return "bb";
	case 5:
		return "##";
	default:
		return "";
	}
};
nx3_NTags.headTypetag = function(type) {
	if(type == null) {
		return "";
	}
	switch(type._hx_index) {
	case 1:
		return "tR";
	case 2:
		return "tC";
	case 3:
		return "tP";
	case 4:
		return "tO";
	default:
		return "";
	}
};
nx3_NTags.prototype = {
	__class__: nx3_NTags
};
var nx3_NVoice = function(notes,type,direction) {
	if(notes == null || notes.length == 0) {
		this.nnotes = [];
		this.type = nx3_EVoiceType.Barpause(0);
	} else {
		this.nnotes = notes;
		this.type = type != null ? type : nx3_EVoiceType.Normal;
	}
	var _g = 0;
	while(_g < notes.length) notes[_g++].nvoice = this;
	this.direction = direction != null ? direction : nx3_EDirectionUAD.Auto;
};
$hxClasses["nx3.NVoice"] = nx3_NVoice;
nx3_NVoice.__name__ = ["nx3","NVoice"];
nx3_NVoice.prototype = {
	iterator: function() {
		return HxOverrides.iter(this.nnotes);
	}
	,get_length: function() {
		return this.nnotes.length;
	}
	,getNNote: function(idx) {
		if(idx < 0 || idx > this.nnotes.length) {
			return null;
		} else {
			return this.nnotes[idx];
		}
	}
	,getTag: function() {
		var dir = nx3_NTags.directionUADTag(this.direction);
		var type = nx3_NTags.nvoiceTypeTag(this.type);
		var notestags = "";
		Lambda.iter(this,function(nnote) {
			notestags += nnote.getTag();
		});
		return "@" + type + notestags + dir;
	}
	,__class__: nx3_NVoice
	,__properties__: {get_length:"get_length"}
};
var nx3_PAttributesRectsCalculator = function() { };
$hxClasses["nx3.PAttributesRectsCalculator"] = nx3_PAttributesRectsCalculator;
nx3_PAttributesRectsCalculator.__name__ = ["nx3","PAttributesRectsCalculator"];
nx3_PAttributesRectsCalculator.getClefRect = function(clef) {
	switch(clef._hx_index) {
	case 0:
		return new nx3_geom_Rectangle(0,-5,9,10);
	case 1:
		return new nx3_geom_Rectangle(0,-4,9,8);
	case 2:
		return new nx3_geom_Rectangle(0,-3,9,6);
	}
};
nx3_PAttributesRectsCalculator.getKeyRect = function(key) {
	switch(key._hx_index) {
	case 3:case 9:
		return new nx3_geom_Rectangle(0,-3,9.2,6);
	case 5:case 7:
		return new nx3_geom_Rectangle(0,-3,4.4,6);
	case 6:
		return new nx3_geom_Rectangle(0,-3,1,6);
	case 4:case 8:
		return new nx3_geom_Rectangle(0,-3,6.8,6);
	case 2:case 10:
		return new nx3_geom_Rectangle(0,-3,11.6,6);
	case 1:case 11:
		return new nx3_geom_Rectangle(0,-3,14.,6);
	default:
		return new nx3_geom_Rectangle(0,-2,.5,4);
	}
};
nx3_PAttributesRectsCalculator.getTimeRect = function(time) {
	if(time == null) {
		return new nx3_geom_Rectangle(0,-3,.5,3);
	}
	if(time._hx_index == 16) {
		return new nx3_geom_Rectangle(0,-3,6,6);
	} else {
		return new nx3_geom_Rectangle(0,-3,4,3);
	}
};
var nx3_PBamegroupFrameTipCalculator = function(notelevels,direction) {
	if(direction == nx3_EDirectionUD.Down) {
		var invertedLevels = [];
		var _g = 0;
		while(_g < notelevels.length) invertedLevels.push(notelevels[_g++] * -1);
		notelevels = invertedLevels;
	}
	this.notelevels = notelevels;
	this.direction = direction;
};
$hxClasses["nx3.PBamegroupFrameTipCalculator"] = nx3_PBamegroupFrameTipCalculator;
nx3_PBamegroupFrameTipCalculator.__name__ = ["nx3","PBamegroupFrameTipCalculator"];
nx3_PBamegroupFrameTipCalculator.floatMin = function(levels) {
	var result = levels[0];
	if(levels.length == 1) {
		return result;
	}
	var _g = 0;
	while(_g < levels.length) result = Math.min(result,levels[_g++]);
	return result;
};
nx3_PBamegroupFrameTipCalculator.intMin = function(levels) {
	var result = levels[0];
	if(levels.length == 1) {
		return result;
	}
	var _g = 0;
	while(_g < levels.length) result = Math.min(result,levels[_g++]) | 0;
	return result;
};
nx3_PBamegroupFrameTipCalculator.intMax = function(levels) {
	var result = levels[0];
	if(levels.length == 1) {
		return result;
	}
	var _g = 0;
	while(_g < levels.length) result = Math.max(result,levels[_g++]) | 0;
	return result;
};
nx3_PBamegroupFrameTipCalculator.prototype = {
	getTips: function() {
		var levels = this.notelevels;
		var result = levels[0];
		var min;
		if(levels.length == 1) {
			min = result;
		} else {
			var _g = 0;
			while(_g < levels.length) result = Math.min(result,levels[_g++]) | 0;
			min = result;
		}
		var leftTip = this.notelevels[0];
		var array = this.notelevels;
		var rightTip = array[array.length - 1];
		if(this.notelevels.length == 2) {
			var levels1 = [leftTip,rightTip + 1,7];
			var result1 = levels1[0];
			if(levels1.length == 1) {
				leftTip = result1;
			} else {
				var _g1 = 0;
				while(_g1 < levels1.length) result1 = Math.min(result1,levels1[_g1++]);
				leftTip = result1;
			}
			var levels2 = [rightTip,leftTip + 1,7];
			var result2 = levels2[0];
			if(levels2.length == 1) {
				rightTip = result2;
			} else {
				var _g2 = 0;
				while(_g2 < levels2.length) result2 = Math.min(result2,levels2[_g2++]);
				rightTip = result2;
			}
		} else {
			var slopevalue = this.notelevels.length * .25;
			var inlevels = this.notelevels.slice();
			inlevels.shift();
			inlevels.pop();
			var result3 = inlevels[0];
			var inmin;
			if(inlevels.length == 1) {
				inmin = result3;
			} else {
				var _g3 = 0;
				while(_g3 < inlevels.length) result3 = Math.min(result3,inlevels[_g3++]) | 0;
				inmin = result3;
			}
			if(inlevels.length == 0) {
				inmin = null;
			}
			if(inmin != null && leftTip >= inmin && rightTip >= inmin) {
				leftTip = inmin;
				rightTip = inmin;
			} else if(rightTip < leftTip && min < leftTip) {
				var levels3 = [min + slopevalue,leftTip];
				var result4 = levels3[0];
				if(levels3.length == 1) {
					leftTip = result4;
				} else {
					var _g4 = 0;
					while(_g4 < levels3.length) result4 = Math.min(result4,levels3[_g4++]);
					leftTip = result4;
				}
			} else if(leftTip < rightTip && min < rightTip) {
				var levels4 = [min + slopevalue,rightTip];
				var result5 = levels4[0];
				if(levels4.length == 1) {
					rightTip = result5;
				} else {
					var _g5 = 0;
					while(_g5 < levels4.length) result5 = Math.min(result5,levels4[_g5++]);
					rightTip = result5;
				}
			}
		}
		leftTip = Math.min(7,leftTip) | 0;
		rightTip = Math.min(7,rightTip) | 0;
		if(this.direction == nx3_EDirectionUD.Down) {
			return { leftTip : -leftTip, rightTip : -rightTip};
		}
		return { leftTip : leftTip, rightTip : rightTip};
	}
	,__class__: nx3_PBamegroupFrameTipCalculator
};
var nx3_PBar = function(nbar) {
	this.stretchwidth = 0;
	this._keys = null;
	this._clefs = null;
	this.nbar = nbar;
	this.value = 0;
};
$hxClasses["nx3.PBar"] = nx3_PBar;
nx3_PBar.__name__ = ["nx3","PBar"];
nx3_PBar.prototype = {
	iterator: function() {
		return HxOverrides.iter(this.getParts());
	}
	,get_length: function() {
		return this.getParts().length;
	}
	,getScore: function() {
		return this.score;
	}
	,getSystembar: function() {
		return this.systembar;
	}
	,get_clefs: function() {
		if(this._clefs != null) {
			return this._clefs;
		}
		this._clefs = [];
		var _g = 0;
		var _g1 = this.getParts();
		while(_g < _g1.length) this._clefs.push(_g1[_g++].npart.clef);
		return this._clefs;
	}
	,get_keys: function() {
		if(this._keys != null) {
			return this._keys;
		}
		this._keys = [];
		var _g = 0;
		var _g1 = this.getParts();
		while(_g < _g1.length) this._keys.push(_g1[_g++].npart.key);
		return this._keys;
	}
	,get_time: function() {
		return this.nbar.time;
	}
	,get_displayClefs: function() {
		var result = nx3_EDisplayALN.Never;
		var _g = 0;
		var _g1 = this.getParts();
		while(_g < _g1.length) {
			var vpart = _g1[_g];
			++_g;
			if(vpart.npart.clefDisplay == null) {
				result = nx3_EDisplayALN.Layout;
			}
			if(vpart.npart.clefDisplay == nx3_EDisplayALN.Layout) {
				result = nx3_EDisplayALN.Layout;
			}
			if(vpart.npart.clefDisplay == nx3_EDisplayALN.Always) {
				result = nx3_EDisplayALN.Always;
				break;
			}
		}
		return result;
	}
	,get_displayKeys: function() {
		var result = nx3_EDisplayALN.Never;
		var _g = 0;
		var _g1 = this.getParts();
		while(_g < _g1.length) {
			var vpart = _g1[_g];
			++_g;
			if(vpart.npart.keyDisplay == null) {
				result = nx3_EDisplayALN.Layout;
			}
			if(vpart.npart.keyDisplay == nx3_EDisplayALN.Layout) {
				result = nx3_EDisplayALN.Layout;
			}
			if(vpart.npart.keyDisplay == nx3_EDisplayALN.Always) {
				result = nx3_EDisplayALN.Always;
				break;
			}
		}
		return result;
	}
	,get_displayTime: function() {
		return this.nbar.timeDisplay;
	}
	,getParts: function() {
		if(this.parts != null) {
			return this.parts;
		}
		this.parts = [];
		var _g = 0;
		var _g1 = this.nbar.nparts;
		while(_g < _g1.length) {
			var ppart = new nx3_PPart(_g1[_g++]);
			ppart.bar = this;
			this.parts.push(ppart);
		}
		return this.parts;
	}
	,getPart: function(idx) {
		if(idx < 0 || idx > this.getParts().length) {
			return null;
		} else {
			return this.getParts()[idx];
		}
	}
	,getColumns: function() {
		if(this.columns != null) {
			return this.columns;
		}
		this.columns = new nx3_PColumnsGenerator(this).getColumns();
		this.calculateMDistances();
		return this.columns;
	}
	,getIndex: function() {
		return this.getScore().getBars().indexOf(this);
	}
	,calculateMDistances: function() {
		if(this.columns == null) {
			this.getColumns();
		}
		new nx3_PColumnsDistancesCalculator(this).calculate();
	}
	,calculateAPositions: function() {
		new nx3_PColumnsAllotmentCalculator(this).calculate();
	}
	,getValue: function() {
		if(this.value != 0) {
			return this.value;
		}
		var _g = 0;
		var _g1 = this.getParts();
		while(_g < _g1.length) this.value = Math.max(this.value,_g1[_g++].getValue()) | 0;
		return this.value;
	}
	,getContentwidth: function() {
		if(this.contentwidth != null) {
			return this.contentwidth;
		}
		var array = this.getColumns();
		var lastcolumn = array[array.length - 1];
		this.contentwidth = lastcolumn.getAPostion() + Math.max(lastcolumn.getADistance(),lastcolumn.getRightX());
		return this.contentwidth;
	}
	,getContentXZero: function() {
		this.contentx = -this.getColumns()[0].getLeftX();
		return this.contentx;
	}
	,getAllottedDistanceSum: function() {
		if(this.allottedDistanceSum != null) {
			return this.allottedDistanceSum;
		}
		this.getContentwidth();
		return this.allottedDistanceSum;
	}
	,getStretchWidth: function() {
		return this.stretchwidth;
	}
	,getTieConnections: function() {
		if(this.tieconnections != null) {
			return this.tieconnections;
		}
		this.tieconnections = [];
		var a = this.score.getBars();
		var idx = this.getIndex() + 1;
		var nextBar = a == null ? null : idx < 0 || idx > a.length - 1 ? null : a[idx];
		if(nextBar == null) {
			return this.tieconnections;
		}
		var _g = 0;
		var _g1 = this.getParts();
		while(_g < _g1.length) {
			var part = _g1[_g];
			++_g;
			var a1 = nextBar.getParts();
			var idx1 = part.getIndex();
			if(a1 != null) {
				idx1 < 0 || idx1 > a1.length - 1;
			}
			var _g2 = 0;
			var _g3 = part.getVoices();
			while(_g2 < _g3.length) {
				var array = _g3[_g2++].getNotes();
				var lastnote = array[array.length - 1];
				if(!lastnote.getHasTie()) {
					continue;
				}
				var _g4 = 0;
				var _g5 = lastnote.nnote.get_nheads();
				while(_g4 < _g5.length) {
					var nhead = _g5[_g4];
					++_g4;
					if(nhead.tie != null) {
						var a2 = nextBar.getParts();
						var idx2 = part.getIndex();
						var nextPart = a2 == null ? null : idx2 < 0 || idx2 > a2.length - 1 ? null : a2[idx2];
						if(nextPart == null) {
							break;
						}
						var _g6 = 0;
						var _g7 = nextPart.getVoices();
						while(_g6 < _g7.length) {
							var nextnote = _g7[_g6++].getNotes()[0];
							var _g8 = 0;
							var _g9 = nextnote.nnote.get_nheads();
							while(_g8 < _g9.length) if(_g9[_g8++].level == nhead.level) {
								this.tieconnections.push({ from : lastnote, to : nextnote, level : nhead.level, tie : nhead.tie});
								break;
							}
						}
					}
				}
			}
		}
		return this.tieconnections;
	}
	,__class__: nx3_PBar
	,__properties__: {get_displayTime:"get_displayTime",get_displayKeys:"get_displayKeys",get_displayClefs:"get_displayClefs",get_time:"get_time",get_keys:"get_keys",get_clefs:"get_clefs",get_length:"get_length"}
};
var nx3_PBarConfig = function(showClef,showKey,showTime,showCautClef,showCautKey,showCautTime) {
	if(showCautTime == null) {
		showCautTime = false;
	}
	if(showCautKey == null) {
		showCautKey = false;
	}
	if(showCautClef == null) {
		showCautClef = false;
	}
	if(showTime == null) {
		showTime = false;
	}
	if(showKey == null) {
		showKey = false;
	}
	if(showClef == null) {
		showClef = false;
	}
	this.showClef = showClef;
	this.showKey = showKey;
	this.showTime = showTime;
	this.showCautClef = showCautClef;
	this.showCautKey = showCautKey;
	this.showCautTime = showCautTime;
};
$hxClasses["nx3.PBarConfig"] = nx3_PBarConfig;
nx3_PBarConfig.__name__ = ["nx3","PBarConfig"];
nx3_PBarConfig.prototype = {
	__class__: nx3_PBarConfig
};
var nx3_PBarStretchCalculator = function(systembar) {
	this.systembar = systembar;
};
$hxClasses["nx3.PBarStretchCalculator"] = nx3_PBarStretchCalculator;
nx3_PBarStretchCalculator.__name__ = ["nx3","PBarStretchCalculator"];
nx3_PBarStretchCalculator.prototype = {
	stretch: function(amount) {
		this.systembar.getBarMeasurements().setContentWidth(this.systembar.getBarMeasurements().getContentWidth() + amount);
		if(this.systembar.bar.getColumns().length < 2) {
			return;
		}
		var columns = this.systembar.bar.getColumns();
		var firstcolumn = columns[0];
		var aDistance = new haxe_ds_ObjectMap();
		var gotShared = new haxe_ds_ObjectMap();
		var _g = 0;
		while(_g < columns.length) {
			var column = columns[_g];
			++_g;
			aDistance.set(column,column.getADistance());
			gotShared.set(column,0);
		}
		var seedThreshold_h = { };
		var seedrest = amount;
		while(seedrest > 0) {
			var _g1 = 0;
			while(_g1 < columns.length) {
				var column1 = columns[_g1];
				++_g1;
				var grain = column1.getDistanceDelta() * .5;
				var valueDeltaInt = column1.getDistanceDelta() * 100000 | 0;
				if(!seedThreshold_h.hasOwnProperty(valueDeltaInt)) {
					seedThreshold_h[valueDeltaInt] = 0;
				}
				seedThreshold_h[valueDeltaInt] = seedThreshold_h[valueDeltaInt] + grain;
				if(seedThreshold_h[valueDeltaInt] > (column1 == firstcolumn ? 0.0 : column1.getADistanceBenefit())) {
					gotShared.set(column1,gotShared.h[column1.__id__] + grain);
					seedrest -= grain;
				}
			}
		}
		var gain = 0.0;
		var _g2 = 0;
		while(_g2 < columns.length) {
			var column2 = columns[_g2];
			++_g2;
			column2.sposition = column2.getAPostion() + gain;
			gain += gotShared.h[column2.__id__];
		}
	}
	,resetStretch: function() {
		var _g = 0;
		var _g1 = this.systembar.bar.getColumns();
		while(_g < _g1.length) _g1[_g++].sposition = null;
	}
	,__class__: nx3_PBarStretchCalculator
};
var nx3_PBarWidthCalculator = function() {
};
$hxClasses["nx3.PBarWidthCalculator"] = nx3_PBarWidthCalculator;
nx3_PBarWidthCalculator.__name__ = ["nx3","PBarWidthCalculator"];
nx3_PBarWidthCalculator.__interfaces__ = [nx3_IBarWidthCalculator];
nx3_PBarWidthCalculator.prototype = {
	getClefWidth: function(clef) {
		return nx3_PAttributesRectsCalculator.getClefRect(clef).width;
	}
	,getKeyWidth: function(key) {
		return nx3_PAttributesRectsCalculator.getKeyRect(key).width;
	}
	,getTimeWidth: function(time) {
		return nx3_PAttributesRectsCalculator.getTimeRect(time).width;
	}
	,getContentLeftMarginWidth: function(bar) {
		return 3.0;
	}
	,getContentWidth: function(bar) {
		return bar.getContentwidth();
	}
	,getBarlineWidth: function(barline) {
		return 1.0;
	}
	,getLeftBarlineWidth: function(barline) {
		return 1.0;
	}
	,getClefsWidth: function(clefs) {
		var result = 0.0;
		var _g = 0;
		while(_g < clefs.length) {
			var clef = clefs[_g];
			++_g;
			if(clef == null) {
				continue;
			}
			result = Math.max(result,nx3_PAttributesRectsCalculator.getClefRect(clef).width);
		}
		return result;
	}
	,getKeysWidth: function(keys) {
		var result = 0.0;
		var _g = 0;
		while(_g < keys.length) {
			var key = keys[_g];
			++_g;
			if(key == null) {
				continue;
			}
			result = Math.max(result,nx3_PAttributesRectsCalculator.getKeyRect(key).width);
		}
		return result;
	}
	,__class__: nx3_PBarWidthCalculator
};
var nx3_PBaseRectCalculator = function(note) {
	this.note = note;
};
$hxClasses["nx3.PBaseRectCalculator"] = nx3_PBaseRectCalculator;
nx3_PBaseRectCalculator.__name__ = ["nx3","PBaseRectCalculator"];
nx3_PBaseRectCalculator.prototype = {
	getBaseRect: function() {
		switch(this.note.nnote.type._hx_index) {
		case 0:
			if(nx3_ENoteValTools.head(this.note.nnote.value)._hx_index == 2) {
				return new nx3_geom_Rectangle(-2.8000000000000003,-3.,5.6000000000000005,6.);
			} else {
				return new nx3_geom_Rectangle(-2.2,-3.,4.4,6.);
			}
			break;
		case 4:
			return this.note.getHeadsRects()[0].clone();
		default:
			return new nx3_geom_Rectangle(-4,-3.,8,6.);
		}
	}
	,__class__: nx3_PBaseRectCalculator
};
var nx3_PBeamflagCalculator = function(beamgroup) {
	this.beamgroup = beamgroup;
};
$hxClasses["nx3.PBeamflagCalculator"] = nx3_PBeamflagCalculator;
nx3_PBeamflagCalculator.__name__ = ["nx3","PBeamflagCalculator"];
nx3_PBeamflagCalculator.prototype = {
	getBeamflags: function() {
		var firstpass = [];
		var noteIdx = 0;
		var holder = [];
		var _g = 0;
		var _g1 = this.beamgroup.pnotes;
		while(_g < _g1.length) {
			var note = _g1[_g];
			++_g;
			var a = this.beamgroup.pnotes;
			var idx = noteIdx + 1;
			var nextnote = a == null ? null : idx < 0 || idx > a.length - 1 ? null : a[idx];
			if(nextnote == null) {
				continue;
			}
			if(nx3_ENoteValTools.beaminglevel(note.nnote.value) > 1 && nx3_ENoteValTools.beaminglevel(nextnote.nnote.value) > 1) {
				holder.push(2);
				firstpass.push(nx3_EBeamflagType.Full16);
			} else if(nx3_ENoteValTools.beaminglevel(note.nnote.value) == 1 && nx3_ENoteValTools.beaminglevel(nextnote.nnote.value) > 1) {
				holder.push(-1);
				firstpass.push(nx3_EBeamflagType.End16);
			} else if(nx3_ENoteValTools.beaminglevel(note.nnote.value) > 1 && nx3_ENoteValTools.beaminglevel(nextnote.nnote.value) == 1) {
				holder.push(1);
				firstpass.push(nx3_EBeamflagType.Start16);
			} else {
				holder.push(0);
				firstpass.push(nx3_EBeamflagType.None);
			}
			++noteIdx;
		}
		var result = [];
		var _g2 = 0;
		while(_g2 < firstpass.length) {
			var r = firstpass[_g2];
			++_g2;
			var idx1 = firstpass.indexOf(r);
			var idx2 = firstpass.indexOf(r);
			var rprev = idx2 <= 0 ? null : firstpass[idx2 - 1];
			if((idx1 == -1 ? null : idx1 == firstpass.length - 1 ? null : firstpass[idx1 + 1]) == nx3_EBeamflagType.Full16 && r == nx3_EBeamflagType.End16) {
				result.push(nx3_EBeamflagType.None);
			} else if(rprev == nx3_EBeamflagType.Full16 && r == nx3_EBeamflagType.Start16) {
				result.push(nx3_EBeamflagType.None);
			} else {
				result.push(r);
			}
		}
		return result;
	}
	,__class__: nx3_PBeamflagCalculator
};
var nx3_PBeamgroup = function(pnotes) {
	this.value = null;
	this.voice = pnotes[0].voice;
	this.pnotes = pnotes;
	var _g = 0;
	while(_g < pnotes.length) pnotes[_g++].beamgroup = this;
};
$hxClasses["nx3.PBeamgroup"] = nx3_PBeamgroup;
nx3_PBeamgroup.__name__ = ["nx3","PBeamgroup"];
nx3_PBeamgroup.prototype = {
	getValue: function() {
		if(this.value != null) {
			return this.value;
		}
		this.value = 0;
		var _g = 0;
		var _g1 = this.pnotes;
		while(_g < _g1.length) this.value += nx3_ENoteValTools.value(_g1[_g++].nnote.value);
		return this.value;
	}
	,setDirection: function(direction) {
		this.direction = direction;
	}
	,getDirection: function() {
		if(this.direction == null) {
			new nx3_PPartbeamgroupsDirectionCalculator(this.voice.getPart()).calculateBeamgroupsDirections();
		}
		return this.direction;
	}
	,getPVoice: function() {
		return this.voice;
	}
	,getNotesStemXPositions: function() {
		if(this.stavexpositions != null) {
			return this.stavexpositions;
		}
		this.stavexpositions = [];
		var _g = 0;
		var _g1 = this.pnotes;
		while(_g < _g1.length) {
			var note = _g1[_g];
			++_g;
			this.stavexpositions.push(note.getComplex().getXPosition() + note.getStaveXPosition());
		}
		return this.stavexpositions;
	}
	,getFrame: function() {
		if(this.frame != null) {
			return this.frame;
		}
		var firstnote = this.pnotes[0].nnote;
		var e = firstnote.type;
		if($hxEnums[e.__enum__].__constructs__[e._hx_index] != "Note") {
			return null;
		}
		if(this.pnotes.length == 1) {
			if(nx3_ENoteValTools.stavinglevel(firstnote.value) <= 0) {
				return null;
			}
		}
		this.frame = new nx3_PBeamgroupFrameCalculator(this).getFrame();
		return this.frame;
	}
	,toString: function() {
		return "PBeamgroup \r";
	}
	,__class__: nx3_PBeamgroup
};
var nx3_PBeamgroupDirectionCalculator = function(beamgroup) {
	this.beamgroup = beamgroup;
};
$hxClasses["nx3.PBeamgroupDirectionCalculator"] = nx3_PBeamgroupDirectionCalculator;
nx3_PBeamgroupDirectionCalculator.__name__ = ["nx3","PBeamgroupDirectionCalculator"];
nx3_PBeamgroupDirectionCalculator.prototype = {
	getDirection: function() {
		this.topLevel = this.findTopLevel();
		this.bottomLevel = this.findBottomLevel();
		if(this.topLevel + this.bottomLevel <= 0) {
			return nx3_EDirectionUD.Down;
		}
		return nx3_EDirectionUD.Up;
	}
	,findTopLevel: function() {
		var topLevel = this.beamgroup.pnotes[0].nnote.get_topLevel();
		if(this.beamgroup.pnotes.length == 1) {
			return topLevel;
		}
		var _g1 = 1;
		var _g = this.beamgroup.pnotes.length;
		while(_g1 < _g) topLevel = Math.min(topLevel,this.beamgroup.pnotes[_g1++].nnote.get_topLevel()) | 0;
		return topLevel;
	}
	,findBottomLevel: function() {
		var bottomLevel = this.beamgroup.pnotes[0].nnote.get_bottomLevel();
		if(this.beamgroup.pnotes.length == 1) {
			return bottomLevel;
		}
		var _g1 = 1;
		var _g = this.beamgroup.pnotes.length;
		while(_g1 < _g) bottomLevel = Math.max(bottomLevel,this.beamgroup.pnotes[_g1++].nnote.get_bottomLevel()) | 0;
		return bottomLevel;
	}
	,__class__: nx3_PBeamgroupDirectionCalculator
};
var nx3_PBeamgroupFrameCalculator = function(beamgroup) {
	this.beamgroup = beamgroup;
};
$hxClasses["nx3.PBeamgroupFrameCalculator"] = nx3_PBeamgroupFrameCalculator;
nx3_PBeamgroupFrameCalculator.__name__ = ["nx3","PBeamgroupFrameCalculator"];
nx3_PBeamgroupFrameCalculator.prototype = {
	getFrame: function() {
		this.calcLevelArrays();
		return this.calcFramePrototype();
	}
	,calcFramePrototype: function() {
		var count = this.innerLevels.length;
		var tips = this.calcTips();
		var beamflags = new nx3_PBeamflagCalculator(this.beamgroup).getBeamflags();
		return { leftInnerY : this.innerLevels[0], leftOuterY : this.outerLevels[0], rightInnerY : this.innerLevels[count - 1], rightOuterY : this.outerLevels[count - 1], leftTipY : tips.leftTip, rightTipY : tips.rightTip, outerLevels : this.outerLevels, innerLevels : this.innerLevels, beamflags : beamflags};
	}
	,getTopLevels: function() {
		var levels = [];
		var _g = 0;
		var _g1 = this.beamgroup.pnotes;
		while(_g < _g1.length) levels.push(_g1[_g++].nnote.get_topLevel());
		return levels;
	}
	,getBottomLevels: function() {
		var levels = [];
		var _g = 0;
		var _g1 = this.beamgroup.pnotes;
		while(_g < _g1.length) levels.push(_g1[_g++].nnote.get_bottomLevel());
		return levels;
	}
	,calcLevelArrays: function() {
		switch(this.beamgroup.getDirection()._hx_index) {
		case 0:
			this.outerLevels = this.getTopLevels();
			this.innerLevels = this.getBottomLevels();
			break;
		case 1:
			this.outerLevels = this.getBottomLevels();
			this.innerLevels = this.getTopLevels();
			break;
		}
	}
	,calcTips: function() {
		var direction = this.beamgroup.getDirection();
		var tips = new nx3_PBamegroupFrameTipCalculator(this.outerLevels,direction).getTips();
		tips.leftTip = direction == nx3_EDirectionUD.Up ? tips.leftTip - 7 : tips.leftTip + 7;
		tips.rightTip = direction == nx3_EDirectionUD.Up ? tips.rightTip - 7 : tips.rightTip + 7;
		return tips;
	}
	,__class__: nx3_PBeamgroupFrameCalculator
};
var nx3_PColumn = function(bar,complexes,valueposition,value) {
	this.allottedDistance = 0;
	this.bar = bar;
	this.complexes = complexes;
	this.valueposition = valueposition;
	this.value = value;
	this.mposition = 0.0;
	this.mdistanceBenefit = 0;
};
$hxClasses["nx3.PColumn"] = nx3_PColumn;
nx3_PColumn.__name__ = ["nx3","PColumn"];
nx3_PColumn.prototype = {
	getComplexes: function() {
		return this.complexes;
	}
	,getValueposition: function() {
		return this.valueposition;
	}
	,getValue: function() {
		if(this.value == null) {
			throw new js__$Boot_HaxeError("value shouldnt be null");
		}
		return this.value;
	}
	,getMDistance: function() {
		if(this.mdistance == null) {
			throw new js__$Boot_HaxeError("mdistance shouldnt be null");
		}
		return this.mdistance;
	}
	,getMDistanceBenefit: function() {
		if(this.mdistanceBenefit != null) {
			return this.mdistanceBenefit;
		}
		this.mdistanceBenefit = Math.max(0,this.getMDistance() - 3.2);
		return this.mdistanceBenefit;
	}
	,getDistanceDelta: function() {
		if(this.distancedelta != null) {
			return this.distancedelta;
		}
		this.bar.getContentwidth();
		this.distancedelta = this.allottedDistance / this.bar.getAllottedDistanceSum();
		return this.distancedelta;
	}
	,getMPosition: function() {
		return this.mposition;
	}
	,getADistance: function() {
		if(this.adistance != null) {
			return this.adistance;
		}
		this.bar.calculateAPositions();
		return this.adistance;
	}
	,getADistanceBenefit: function() {
		return this.adistanceBenefit;
	}
	,getAPostion: function() {
		if(this.aposition != null) {
			return this.aposition;
		}
		this.bar.calculateAPositions();
		return this.aposition;
	}
	,getSPosition: function() {
		if(this.sposition != null) {
			return this.sposition;
		}
		return this.getAPostion();
	}
	,getRightX: function() {
		if(this.rightX != null) {
			return this.rightX;
		}
		this.rightX = 0;
		var _g = 0;
		var _g1 = this.getComplexes();
		while(_g < _g1.length) {
			var complex = _g1[_g];
			++_g;
			if(complex != null) {
				this.rightX = Math.max(this.rightX,complex.getRightX());
			}
		}
		return this.rightX;
	}
	,getLeftX: function() {
		if(this.leftX != null) {
			return this.leftX;
		}
		this.leftX = 0;
		var _g = 0;
		var _g1 = this.getComplexes();
		while(_g < _g1.length) {
			var complex = _g1[_g];
			++_g;
			if(complex != null) {
				this.leftX = Math.min(this.leftX,complex.getLeftX());
			}
		}
		return this.leftX;
	}
	,getNextComplex: function(complex) {
		var array = this.bar.getColumns();
		if(this == array[array.length - 1]) {
			return null;
		}
		var partIndex = this.getComplexes().indexOf(complex);
		var _g1 = this.bar.getColumns().indexOf(this) + 1;
		var _g = this.bar.getColumns().length;
		while(_g1 < _g) {
			var complex1 = this.bar.getColumns()[_g1++].getComplexes()[partIndex];
			if(complex1 != null) {
				return complex1;
			}
		}
		return null;
	}
	,toString: function() {
		return "PColumn";
	}
	,__class__: nx3_PColumn
};
var nx3_PColumnsAllotmentCalculator = function(bar) {
	this.bar = bar;
	this.spacing = bar.nbar.spacing;
	this.bar.allottedDistanceSum = 0;
};
$hxClasses["nx3.PColumnsAllotmentCalculator"] = nx3_PColumnsAllotmentCalculator;
nx3_PColumnsAllotmentCalculator.__name__ = ["nx3","PColumnsAllotmentCalculator"];
nx3_PColumnsAllotmentCalculator.prototype = {
	calculate: function(stretch) {
		if(stretch == null) {
			stretch = 0;
		}
		var aposition = this.bar.getContentXZero();
		var _g = 0;
		var _g1 = this.bar.getColumns();
		while(_g < _g1.length) {
			var column = _g1[_g];
			++_g;
			var dist = this.getADistance(column.getValue(),column);
			column.allottedDistance = dist;
			this.bar.allottedDistanceSum += dist;
			var adistance = Math.max(column.getMDistance(),dist);
			var adistanceBenefit = Math.max(0,column.getMDistance() - dist);
			column.aposition = aposition;
			column.adistance = adistance;
			column.adistanceBenefit = adistanceBenefit;
			aposition += adistance;
		}
	}
	,getADistance: function(val,column) {
		switch(this.bar.nbar.allotment._hx_index) {
		case 0:
			return column.getMDistance();
		case 1:
			return this.spacing;
		case 2:
			return (0.5 + val / 3024 / 2) * this.spacing;
		default:
			return val / 3024 * this.spacing;
		}
	}
	,__class__: nx3_PColumnsAllotmentCalculator
};
var nx3_PColumnsDistancesCalculator = function(bar) {
	this.bar = bar;
	this.prevLeftComplex = new haxe_ds_IntMap();
};
$hxClasses["nx3.PColumnsDistancesCalculator"] = nx3_PColumnsDistancesCalculator;
nx3_PColumnsDistancesCalculator.__name__ = ["nx3","PColumnsDistancesCalculator"];
nx3_PColumnsDistancesCalculator.prototype = {
	calculate: function() {
		var leftColumn = null;
		var xposition = 0.0;
		var _g1 = 0;
		var _g = this.bar.getColumns().length;
		while(_g1 < _g) {
			var columnIdx = _g1++;
			var rightColumn = this.bar.getColumns()[columnIdx];
			rightColumn.mdistance = 0;
			if(columnIdx == 0) {
				var complexId = 0;
				var _g2 = 0;
				var _g3 = this.bar.getColumns()[0].getComplexes();
				while(_g2 < _g3.length) {
					this.prevLeftComplex.h[complexId] = { leftComplex : _g3[_g2++], columnIdx : 0};
					++complexId;
				}
			} else if(columnIdx < this.bar.getColumns().length) {
				var leftComplexes = leftColumn.getComplexes();
				var rightComplexes = rightColumn.getComplexes();
				var columndistance = 0.0;
				var _g31 = 0;
				var _g21 = leftComplexes.length;
				while(_g31 < _g21) {
					var complexIdx = _g31++;
					columndistance = Math.max(columndistance,this.getComplexDistances(columnIdx,complexIdx,leftComplexes[complexIdx],rightComplexes[complexIdx]));
				}
				var number = columndistance;
				number *= Math.pow(10,6);
				number = Math.round(number) / Math.pow(10,6);
				columndistance = number;
				leftColumn.mdistance = columndistance;
				xposition += columndistance;
				rightColumn.mposition = xposition;
			}
			if(columnIdx == this.bar.getColumns().length - 1) {
				var lastColumn = this.bar.getColumns()[columnIdx];
				lastColumn.mdistance = lastColumn.getRightX();
				return;
			}
			leftColumn = rightColumn;
		}
	}
	,getComplexDistances: function(columnIdx,complexIdx,leftComplex,rightComplex) {
		if(rightComplex == null) {
			if(leftComplex != null) {
				this.prevLeftComplex.h[complexIdx] = { leftComplex : leftComplex, columnIdx : columnIdx - 1};
			}
			return 0;
		}
		if(leftComplex == null) {
			var prevLeftColumnIdx = this.prevLeftComplex.h[complexIdx].columnIdx;
			var distanceBenefit = this.bar.getColumns()[columnIdx - 1].getMPosition() - this.bar.getColumns()[prevLeftColumnIdx].getMPosition();
			return Math.max(0,new nx3_PComplexDistancesCalculator().getDistance(this.prevLeftComplex.h[complexIdx].leftComplex,rightComplex) - distanceBenefit);
		}
		var distance = new nx3_PComplexDistancesCalculator().getDistance(leftComplex,rightComplex);
		this.prevLeftComplex.h[complexIdx] = { leftComplex : leftComplex, columnIdx : columnIdx - 1};
		return distance;
	}
	,__class__: nx3_PColumnsDistancesCalculator
};
var nx3_PColumnsGenerator = function(bar) {
	this.bar = bar;
	this.vparts = this.bar.getParts();
};
$hxClasses["nx3.PColumnsGenerator"] = nx3_PColumnsGenerator;
nx3_PColumnsGenerator.__name__ = ["nx3","PColumnsGenerator"];
nx3_PColumnsGenerator.prototype = {
	getColumns: function() {
		if(this.columns != null) {
			return this.columns;
		}
		this.positions = this.calcPositions(this.vparts);
		this.calcColumns(this.positions,this.vparts);
		return this.columns;
	}
	,calcColumns: function(positions,vparts) {
		this.columns = [];
		this.positionsColumns = new haxe_ds_IntMap();
		var barvalue = this.bar.getValue();
		var idx = 0;
		var _g = 0;
		while(_g < positions.length) {
			var pos = positions[_g];
			++_g;
			var idx1 = idx + 1;
			var nextpos = positions == null ? null : idx1 < 0 || idx1 > positions.length - 1 ? null : positions[idx1];
			if(nextpos == null) {
				nextpos = barvalue;
			}
			var value = nextpos - pos;
			var vcomplexes = [];
			var _g2 = 0;
			var _g1 = this.vparts.length;
			while(_g2 < _g1) {
				var part = this.vparts[_g2++];
				part.getPositionsComplexes();
				vcomplexes.push(part.getPositionsComplexes().h[pos]);
			}
			var vcolumn = new nx3_PColumn(this.bar,vcomplexes,pos,value);
			this.columns.push(vcolumn);
			var _g11 = 0;
			while(_g11 < vcomplexes.length) {
				var complex = vcomplexes[_g11];
				++_g11;
				if(complex != null) {
					complex.column = vcolumn;
				}
			}
			this.positionsColumns.h[pos] = vcolumn;
			++idx;
		}
	}
	,calcPositions: function(vparts) {
		var positionsMap = new haxe_ds_IntMap();
		var _g = 0;
		while(_g < vparts.length) {
			var poss = cx_MapTools.keysToArray(vparts[_g++].getPositionsComplexes().keys()).slice();
			var _g1 = 0;
			while(_g1 < poss.length) positionsMap.h[poss[_g1++]] = true;
		}
		var positions = cx_MapTools.keysToArray(positionsMap.keys());
		positions.sort(function(a,b) {
			return Reflect.compare(a,b);
		});
		return positions;
	}
	,__class__: nx3_PColumnsGenerator
};
var nx3_PComplex = function(part,notes,valueposition) {
	this.part = part;
	if(notes.length > 2) {
		throw new js__$Boot_HaxeError("PComplex nr of PNote(s) limited to max 2 - for now");
	}
	this.notes = notes;
	var _g = 0;
	var _g1 = this.notes;
	while(_g < _g1.length) _g1[_g++].complex = this;
	this.valueposition = valueposition;
};
$hxClasses["nx3.PComplex"] = nx3_PComplex;
nx3_PComplex.__name__ = ["nx3","PComplex"];
nx3_PComplex.prototype = {
	getNotes: function() {
		return this.notes;
	}
	,getValueposition: function() {
		return this.valueposition;
	}
	,getPart: function() {
		return this.part;
	}
	,getColumn: function() {
		if(this.column != null) {
			return this.column;
		}
		this.part.getBar().getColumns();
		if(this.column == null) {
			throw new js__$Boot_HaxeError("this shouldn't happen");
		}
		return this.column;
	}
	,getHeadsRects: function() {
		if(this.headsrects != null) {
			return this.headsrects;
		}
		var firstrects = this.notes[0].getHeadsRects();
		if(this.notes.length == 1) {
			return firstrects;
		}
		var secondrects = this.notes[1].getHeadsRects().slice();
		nx3_geom_RectanglesTools.offset(secondrects,this.getNoteXOffset(this.notes[1]),0);
		this.headsrects = firstrects.concat(secondrects);
		return this.headsrects;
	}
	,getSignsRects: function() {
		if(this.signsrects != null) {
			return this.signsrects;
		}
		if(this.getVisibleSigns().length == 0) {
			return [];
		}
		this.signsrects = new nx3_PSignsRectsCalculator(this.getVisibleSigns()).getSignRects(this.getHeadsRects());
		return this.signsrects;
	}
	,getNoteXOffset: function(note) {
		if(note == this.getNotes()[0]) {
			return 0;
		}
		if(this.secondoffset != null) {
			return this.secondoffset;
		}
		this.secondoffset = new nx3_PNoteOffsetCalculator(this).getNoteOffset(this.getNotes()[1]);
		return this.secondoffset;
	}
	,getSigns: function() {
		if(this.signs != null) {
			return this.signs;
		}
		this.signs = new nx3_PSignsCalculator(this.getNotes()).getSigns();
		return this.signs;
	}
	,getVisibleSigns: function() {
		if(this.visiblesigns != null) {
			return this.visiblesigns;
		}
		this.visiblesigns = new nx3_PSignsCalculator(this.getNotes()).getVisibleSigns();
		return this.visiblesigns;
	}
	,getStavesRects: function() {
		if(this.stavesrects != null) {
			return this.stavesrects;
		}
		this.stavesrects = [];
		var _g = 0;
		var _g1 = this.notes;
		while(_g < _g1.length) {
			var rect = this.getStaveRect(_g1[_g++]);
			if(rect != null) {
				this.stavesrects.push(rect);
			}
		}
		var _g2 = 0;
		var _g11 = this.notes;
		while(_g2 < _g11.length) {
			var flagrect = new nx3_PStaveRectCalculator(_g11[_g2++]).getFlagRect();
			if(flagrect != null) {
				this.stavesrects.push(flagrect);
			}
		}
		return this.stavesrects;
	}
	,getStaveRect: function(note) {
		return new nx3_PStaveRectCalculator(note).getStaveRect();
	}
	,getTieRects: function() {
		if(this.tierects != null) {
			return this.tierects;
		}
		this.tierects = new nx3_PComplexTierectsCalculator(this).getTieRects();
		return this.tierects;
	}
	,getDotRects: function() {
		if(this.dotrects != null) {
			return this.dotrects;
		}
		this.dotrects = new nx3_PComplexDotsrectsCalculator(this).getDotRects();
		return this.dotrects;
	}
	,getBaseRect: function() {
		if(this.baserect != null) {
			return this.baserect;
		}
		this.baserect = new nx3_geom_Rectangle(0,0,0,0);
		var _g = 0;
		var _g1 = this.getNotes();
		while(_g < _g1.length) this.baserect = this.baserect.union(_g1[_g++].getBaseRect());
		return this.baserect;
	}
	,getAllRects: function() {
		if(this.allrects != null) {
			return this.allrects;
		}
		this.allrects = [];
		this.allrects = nx3_geom_RectanglesTools.concat(this.allrects,this.getHeadsRects());
		this.allrects = nx3_geom_RectanglesTools.concat(this.allrects,this.getStavesRects());
		this.allrects = nx3_geom_RectanglesTools.concat(this.allrects,this.getSignsRects());
		this.allrects = nx3_geom_RectanglesTools.concat(this.allrects,this.getTieRects());
		this.allrects = nx3_geom_RectanglesTools.concat(this.allrects,this.getDotRects());
		return this.allrects;
	}
	,getRect: function() {
		this.rect = nx3_geom_RectanglesTools.unionAll(this.getAllRects());
		return this.rect;
	}
	,getXPosition: function() {
		if(this.xposition != null) {
			return this.xposition;
		}
		this.getHeadsRects();
		this.xposition = this.getColumn().getSPosition();
		return this.xposition;
	}
	,getIndex: function() {
		return this.part.getComplexes().indexOf(this);
	}
	,getLeftX: function() {
		if(this.leftX != null) {
			return this.leftX;
		}
		this.leftX = this.getRect().x;
		return this.leftX;
	}
	,getRightX: function() {
		if(this.rightX != null) {
			return this.rightX;
		}
		this.rightX = this.getRect().x + this.getRect().width;
		return this.rightX;
	}
	,getNext: function() {
		if(this.next != null) {
			return this.next;
		}
		this.next = this.getColumn().getNextComplex(this);
		return this.next;
	}
	,setTieinfos: function(val) {
		this.tieinfos = val;
	}
	,getTieinfos: function() {
		if(this.tieinfos == null) {
			this.getTieRects();
		}
		if(this.getTieRects().length == 0) {
			return [];
		}
		this.tieinfos = new nx3_PComplexTieTargetCalculator(this.tieinfos).findTargetHeads();
		return this.tieinfos;
	}
	,getHeads: function() {
		var result = [];
		var _g = 0;
		var _g1 = this.getNotes();
		while(_g < _g1.length) result = result.concat(_g1[_g++].heads);
		return result;
	}
	,getHasTie: function() {
		if(this.hasTie != null) {
			return this.hasTie;
		}
		var _g = 0;
		var _g1 = this.getNotes();
		while(_g < _g1.length) if(_g1[_g++].getHasTie() == true) {
			this.hasTie = true;
			return this.hasTie;
		}
		this.hasTie = false;
		return this.hasTie;
	}
	,getHeadLevels: function() {
		if(this.headlevels != null) {
			return this.headlevels;
		}
		this.headlevels = [];
		var _g = 0;
		var _g1 = this.getNotes();
		while(_g < _g1.length) {
			var _g2 = 0;
			var _g3 = _g1[_g++].nnote.get_nheads();
			while(_g2 < _g3.length) this.headlevels.push(_g3[_g2++].level);
		}
		return this.headlevels;
	}
	,toString: function() {
		var str = "PComplex: \r";
		var _g = 0;
		var _g1 = this.getNotes();
		while(_g < _g1.length) str += "- Note: " + Std.string(_g1[_g++].nnote) + "\r";
		return str;
	}
	,__class__: nx3_PComplex
};
var nx3_PComplexDistancesCalculator = function() {
};
$hxClasses["nx3.PComplexDistancesCalculator"] = nx3_PComplexDistancesCalculator;
nx3_PComplexDistancesCalculator.__name__ = ["nx3","PComplexDistancesCalculator"];
nx3_PComplexDistancesCalculator.prototype = {
	getDistance: function(leftComplex,rightComplex) {
		return Math.max(nx3_geom_RectanglesTools.getXIntersection([leftComplex.getBaseRect()],[rightComplex.getBaseRect()]),nx3_geom_RectanglesTools.getXIntersection(leftComplex.getAllRects(),rightComplex.getAllRects()) + 0.6);
	}
	,getRects: function(complex) {
		var rects = [];
		rects.concat(complex.getHeadsRects());
		rects.concat(complex.getStavesRects());
		rects.concat(complex.getSignsRects());
		return rects;
	}
	,__class__: nx3_PComplexDistancesCalculator
};
var nx3_PComplexDotsrectsCalculator = function(complex) {
	this.complex = complex;
};
$hxClasses["nx3.PComplexDotsrectsCalculator"] = nx3_PComplexDotsrectsCalculator;
nx3_PComplexDotsrectsCalculator.__name__ = ["nx3","PComplexDotsrectsCalculator"];
nx3_PComplexDotsrectsCalculator.prototype = {
	getDotRects: function() {
		var nrofnotes = this.complex.getNotes().length;
		var rects = this.getRectsForNote(this.complex.getNotes()[0],false);
		if(nrofnotes == 2) {
			rects = nx3_geom_RectanglesTools.concat(rects,this.getRectsForNote(this.complex.getNotes()[1],true));
		}
		return rects;
	}
	,getRectsForNote: function(note,down) {
		if(down == null) {
			down = false;
		}
		if(nx3_ENoteValTools.dotlevel(note.nnote.value) == 0) {
			return [];
		}
		var rects = [];
		var dotwidth = nx3_ENoteValTools.dotlevel(note.nnote.value) == 1 ? 2.0 : 3.0;
		var headrect = nx3_geom_RectanglesTools.unionAll(note.getHeadsRects());
		var rectX = headrect.x + headrect.width;
		var dotlevels = new haxe_ds_IntMap();
		var _g = 0;
		var _g1 = note.nnote.get_nheads();
		while(_g < _g1.length) {
			var level = _g1[_g++].level;
			var adj = Math.abs((level - 1) % 2) | 0;
			dotlevels.h[down ? level + adj : level - adj] = true;
		}
		var dotkeys = cx_ArrayTools.fromHashKeys(dotlevels.keys());
		var _g2 = 0;
		while(_g2 < dotkeys.length) rects.push(new nx3_geom_Rectangle(rectX,dotkeys[_g2++] - 0.5,dotwidth,1));
		return rects;
	}
	,__class__: nx3_PComplexDotsrectsCalculator
};
var nx3_PComplexTieTargetCalculator = function(tieinfos) {
	this.tieinfos = tieinfos;
};
$hxClasses["nx3.PComplexTieTargetCalculator"] = nx3_PComplexTieTargetCalculator;
nx3_PComplexTieTargetCalculator.__name__ = ["nx3","PComplexTieTargetCalculator"];
nx3_PComplexTieTargetCalculator.prototype = {
	findTargetHeads: function() {
		var _g = 0;
		var _g1 = this.tieinfos;
		while(_g < _g1.length) {
			var info = _g1[_g];
			++_g;
			var head = info.head;
			var headlevel = head.nhead.level;
			var nextnote = head.getNote().getNext();
			if(nextnote == null) {
				continue;
			}
			var nextheads = nextnote.getHeads();
			var _g2 = 0;
			while(_g2 < nextheads.length) {
				var nexthead = nextheads[_g2];
				++_g2;
				if(headlevel == nexthead.nhead.level) {
					info.target = nexthead;
					break;
				}
			}
		}
		return this.tieinfos;
	}
	,__class__: nx3_PComplexTieTargetCalculator
};
var nx3_PComplexTierectsCalculator = function(complex) {
	this.complex = complex;
};
$hxClasses["nx3.PComplexTierectsCalculator"] = nx3_PComplexTierectsCalculator;
nx3_PComplexTierectsCalculator.__name__ = ["nx3","PComplexTierectsCalculator"];
nx3_PComplexTierectsCalculator.prototype = {
	getTieRects: function() {
		var nrofnotes = this.complex.getNotes().length;
		var firstnote = this.complex.getNotes()[0];
		var firstties = firstnote.getTies();
		var secondnote = nrofnotes == 2 ? this.complex.getNotes()[1] : null;
		var secondties = nrofnotes == 2 ? this.complex.getNotes()[1].getTies() : [];
		if(firstties == [] && secondties == []) {
			return [];
		}
		this.complex.getHeadsRects();
		this.complex.getDotRects();
		var tieinfos = [];
		var rects = [];
		var headIdx = 0;
		var dotidx = 0;
		var adjusty = 0.0;
		var tiewidth = 3.2;
		var _g = 0;
		var _g1 = firstnote.getHeads();
		while(_g < _g1.length) {
			var head = _g1[_g];
			++_g;
			var headrect = this.complex.getHeadsRects()[headIdx];
			var rx = headrect.x + headrect.width;
			if(nx3_ENoteValTools.dotlevel(firstnote.nnote.value) > 0) {
				var dotrect = this.complex.getDotRects()[dotidx];
				rx = dotrect.x + dotrect.width;
				++dotidx;
			}
			if(head.nhead.tie != null) {
				var tielevel = 0;
				var _g2 = head.nhead.tie;
				if(_g2._hx_index == 0) {
					tielevel = _g2.level;
				}
				var level = head.nhead.level + tielevel;
				var direction = nx3_EDirectionUD.Up;
				if(firstties.length == 1) {
					if(secondnote == null) {
						if(firstnote.getDirection() == nx3_EDirectionUD.Up) {
							++level;
						} else {
							--level;
						}
						direction = firstnote.getDirection() == nx3_EDirectionUD.Up ? nx3_EDirectionUD.Down : nx3_EDirectionUD.Up;
						adjusty = firstnote.getDirection() == nx3_EDirectionUD.Up ? .8 : -.8;
					} else if(firstnote.getDirection() == nx3_EDirectionUD.Up) {
						--level;
					} else {
						--level;
					}
					tiewidth = 3;
				} else {
					var tmp;
					if(secondnote == null) {
						var array = firstnote.getHeads();
						tmp = head == array[array.length - 1];
					} else {
						tmp = false;
					}
					if(tmp) {
						direction = nx3_EDirectionUD.Down;
						adjusty = .5;
					} else {
						adjusty = -.5;
					}
				}
				var r = new nx3_geom_Rectangle(rx,level - 0.8 + adjusty,tiewidth,1.6);
				rects.push(r);
				tieinfos.push({ direction : direction, rect : r, head : head, target : null});
			}
			++headIdx;
		}
		tiewidth = 3.2;
		if(secondnote != null) {
			var _g3 = 0;
			var _g11 = secondnote.getHeads();
			while(_g3 < _g11.length) {
				var head1 = _g11[_g3];
				++_g3;
				if(head1.nhead.tie != null) {
					var level1 = head1.nhead.level;
					var headrect1 = this.complex.getHeadsRects()[headIdx];
					var rx1 = headrect1.x + headrect1.width;
					if(nx3_ENoteValTools.dotlevel(secondnote.nnote.value) > 0) {
						var dotrect1 = this.complex.getDotRects()[dotidx];
						rx1 = dotrect1.x + dotrect1.width;
						++dotidx;
					}
					if(secondties.length == 1) {
						++level1;
						tiewidth = 3;
					}
					var r1 = new nx3_geom_Rectangle(rx1,level1 - 0.8,tiewidth,1.6);
					rects.push(r1);
					tieinfos.push({ direction : nx3_EDirectionUD.Down, rect : r1, head : head1, target : null});
				}
				++headIdx;
			}
		}
		this.complex.setTieinfos(tieinfos);
		return rects;
	}
	,getNoteTies: function(note) {
	}
	,__class__: nx3_PComplexTierectsCalculator
};
var nx3_PHead = function(nhead) {
	this.nhead = nhead;
};
$hxClasses["nx3.PHead"] = nx3_PHead;
nx3_PHead.__name__ = ["nx3","PHead"];
nx3_PHead.prototype = {
	getNote: function() {
		return this.note;
	}
	,toString: function() {
		return "PHead  \r" + Std.string(this.nhead);
	}
	,__class__: nx3_PHead
};
var nx3_PHeadPlacementsCalculator = function(vheads,direction) {
	this.vheads = vheads;
	this.direction = direction;
};
$hxClasses["nx3.PHeadPlacementsCalculator"] = nx3_PHeadPlacementsCalculator;
nx3_PHeadPlacementsCalculator.__name__ = ["nx3","PHeadPlacementsCalculator"];
nx3_PHeadPlacementsCalculator.prototype = {
	getHeadsPlacements: function() {
		if(this.vheads.length == 1) {
			return [{ level : this.vheads[0].nhead.level, pos : nx3_EHeadPosition.Center}];
		}
		var len = this.vheads.length;
		var placements = [];
		var tempArray = [];
		var _g = 0;
		var _g1 = this.vheads;
		while(_g < _g1.length) {
			placements.push({ level : _g1[_g++].nhead.level, pos : nx3_EHeadPosition.Center});
			tempArray.push(0);
		}
		if(this.direction == nx3_EDirectionUD.Up) {
			var _g11 = 0;
			var _g2 = len - 1;
			while(_g11 < _g2) {
				var i = len - _g11++ - 1;
				if(this.vheads[i].nhead.level - this.vheads[i - 1].nhead.level < 2) {
					if(tempArray[i] == tempArray[i - 1]) {
						tempArray[i - 1] = 1;
						placements[i - 1].pos = nx3_EHeadPosition.Right;
					}
				}
			}
		} else {
			var _g12 = 0;
			var _g3 = len - 1;
			while(_g12 < _g3) {
				var i1 = _g12++;
				if(this.vheads[i1 + 1].nhead.level - this.vheads[i1].nhead.level < 2) {
					if(tempArray[i1] == tempArray[i1 + 1]) {
						tempArray[i1 + 1] = -1;
						placements[i1 + 1].pos = nx3_EHeadPosition.Left;
					}
				}
			}
		}
		return placements;
	}
	,__class__: nx3_PHeadPlacementsCalculator
};
var nx3_PHeadsRectsCalculator = function(note,direction) {
	this.direction = direction != null ? direction : note.getDirection();
	this.vheads = note.getHeads();
	this.placements = new nx3_PHeadPlacementsCalculator(this.vheads,this.direction).getHeadsPlacements();
	this.notevalue = note.nnote.value;
};
$hxClasses["nx3.PHeadsRectsCalculator"] = nx3_PHeadsRectsCalculator;
nx3_PHeadsRectsCalculator.__name__ = ["nx3","PHeadsRectsCalculator"];
nx3_PHeadsRectsCalculator.prototype = {
	getHeadsRects: function() {
		var rects = [];
		var i = 0;
		var _g = 0;
		var _g1 = this.placements;
		while(_g < _g1.length) {
			var placement = _g1[_g];
			++_g;
			var headw = 0;
			headw = nx3_ENoteValTools.head(this.notevalue)._hx_index == 2 ? 2.2 : 1.6;
			var rect = new nx3_geom_Rectangle(-headw,-1,2 * headw,2);
			var pos = 0.0;
			switch(placement.pos._hx_index) {
			case 0:
				pos = -2 * headw;
				break;
			case 2:
				pos = 2 * headw;
				break;
			default:
				pos = 0;
			}
			rect.offset(pos,placement.level);
			rects.push(rect);
			++i;
		}
		return rects;
	}
	,headRect: function(type,notevalue) {
		switch(type._hx_index) {
		case 0:
			if(nx3_ENoteValTools.head(this.notevalue)._hx_index == 2) {
				return new nx3_geom_Rectangle(-2.2,-1,4.4,2);
			} else {
				return new nx3_geom_Rectangle(-1.6,-1,3.2,2);
			}
			break;
		case 3:
			switch(nx3_ENoteValTools.beaminglevel(this.notevalue)) {
			case 1:
				return new nx3_geom_Rectangle(-1.8,-3,3.6,6);
			case 2:
				return new nx3_geom_Rectangle(-2,-3,4,6);
			default:
				return new nx3_geom_Rectangle(-1.6,-3.3,3.2,6.6);
			}
			break;
		default:
			return new nx3_geom_Rectangle(-2,-2,4,4);
		}
	}
	,__class__: nx3_PHeadsRectsCalculator
};
var nx3_PNote = function(nnote) {
	this.nnote = nnote;
};
$hxClasses["nx3.PNote"] = nx3_PNote;
nx3_PNote.__name__ = ["nx3","PNote"];
nx3_PNote.prototype = {
	iterator: function() {
		return HxOverrides.iter(this.heads);
	}
	,get_length: function() {
		return this.heads.length;
	}
	,getVoice: function() {
		return this.voice;
	}
	,getHeads: function() {
		if(this.heads != null) {
			return this.heads;
		}
		this.heads = [];
		var _g = 0;
		var _g1 = this.nnote.get_nheads();
		while(_g < _g1.length) {
			var phead = new nx3_PHead(_g1[_g++]);
			phead.note = this;
			this.heads.push(phead);
		}
		return this.heads;
	}
	,getBeamgroup: function() {
		if(this.voice == null) {
			throw new js__$Boot_HaxeError("PNote doesn't have a parent PVoice");
		}
		if(this.beamgroup == null) {
			this.voice.getBeamgroups();
		}
		if(this.beamgroup == null) {
			throw new js__$Boot_HaxeError("this should not happen");
		}
		return this.beamgroup;
	}
	,getDirection: function() {
		return this.getBeamgroup().getDirection();
	}
	,getComplex: function() {
		if(this.voice == null) {
			throw new js__$Boot_HaxeError("PNote doesn't have a parent PVoice");
		}
		if(this.complex == null) {
			this.voice.getPart().getComplexes();
		}
		if(this.complex == null) {
			throw new js__$Boot_HaxeError("Shouldn't happen");
		}
		return this.complex;
	}
	,getHeadsRects: function() {
		if(this.voice == null) {
			throw new js__$Boot_HaxeError("PNote doesn't have a parent PVoice");
		}
		if(this.headsRects != null) {
			return this.headsRects;
		}
		this.headsRects = new nx3_PNoteheadsRectsCalculator(this).getHeadsRects();
		return this.headsRects;
	}
	,getStaveRect: function() {
		if(this.voice == null) {
			throw new js__$Boot_HaxeError("PNote doesn't have a parent PVoice");
		}
		if(this.staveRectChecked) {
			return this.staveRect;
		}
		this.staveRect = this.getComplex().getStaveRect(this);
		this.staveRectChecked = true;
		return this.staveRect;
	}
	,getStaveXPosition: function() {
		if(this.voice == null) {
			throw new js__$Boot_HaxeError("PNote doesn't have a parent PVoice");
		}
		if(this.staveXPosition != null) {
			return this.staveXPosition;
		}
		var staverect = this.getStaveRect();
		if(staverect == null) {
			return 0;
		}
		this.staveXPosition = this.getDirection() == nx3_EDirectionUD.Up ? staverect.width : staverect.x;
		return this.staveXPosition;
	}
	,getBaseRect: function() {
		if(this.voice == null) {
			throw new js__$Boot_HaxeError("PNote doesn't have a parent PVoice");
		}
		if(this.baserect != null) {
			return this.baserect;
		}
		this.baserect = new nx3_PBaseRectCalculator(this).getBaseRect();
		return this.baserect;
	}
	,getXOffset: function() {
		if(this.voice == null) {
			throw new js__$Boot_HaxeError("PNote doesn't have a parent PVoice");
		}
		if(this.xoffset != null) {
			return this.xoffset;
		}
		this.xoffset = this.getComplex().getNoteXOffset(this);
		return this.xoffset;
	}
	,getXPosition: function() {
		if(this.voice == null) {
			throw new js__$Boot_HaxeError("PNote doesn't have a parent PVoice");
		}
		if(this.xposition != null) {
			return this.xposition;
		}
		this.xposition = this.getComplex().getXPosition() + this.getXOffset();
		return this.xposition;
	}
	,getTies: function() {
		return this.nnote.get_ties();
	}
	,getNext: function() {
		if(this.voice == null) {
			throw new js__$Boot_HaxeError("PNote doesn't have a parent PVoice");
		}
		if(this.next != null) {
			return this.next;
		}
		var idx = this.voice.getNotes().indexOf(this);
		var a = this.voice.getNotes();
		var idx1 = idx + 1;
		this.next = a == null ? null : idx1 < 0 || idx1 > a.length - 1 ? null : a[idx1];
		return this.next;
	}
	,getHasTie: function() {
		return !Lambda.foreach(this.nnote,function(nhead) {
			return nhead.tie == null;
		});
	}
	,__class__: nx3_PNote
	,__properties__: {get_length:"get_length"}
};
var nx3_PNoteHeadsRectTplCalculator = function(note) {
	this.note = note;
	var _g = note.nnote.type;
	var level = _g._hx_index == 3 ? _g.level : 0;
	var tmp;
	switch(this.note.getVoice().getPart().npart.type._hx_index) {
	case 2:
		tmp = 0;
		break;
	case 3:
		tmp = level * 3;
		break;
	default:
		tmp = 0;
	}
	this.level = tmp;
};
$hxClasses["nx3.PNoteHeadsRectTplCalculator"] = nx3_PNoteHeadsRectTplCalculator;
nx3_PNoteHeadsRectTplCalculator.__name__ = ["nx3","PNoteHeadsRectTplCalculator"];
nx3_PNoteHeadsRectTplCalculator.prototype = {
	getHeadsRects: function() {
		return [new nx3_geom_Rectangle(-5.5,-5.3 + this.level,10,8.8)];
	}
	,__class__: nx3_PNoteHeadsRectTplCalculator
};
var nx3_PNoteHeadsRectsLyricsCalculator = function(note,text,font) {
	this.note = note;
	this.text = text;
	this.font = font;
};
$hxClasses["nx3.PNoteHeadsRectsLyricsCalculator"] = nx3_PNoteHeadsRectsLyricsCalculator;
nx3_PNoteHeadsRectsLyricsCalculator.__name__ = ["nx3","PNoteHeadsRectsLyricsCalculator"];
nx3_PNoteHeadsRectsLyricsCalculator.prototype = {
	getHeadsRects: function() {
		var tightchars = ["i","l","t","j"];
		var widechars = ["m","M","w","W"];
		var totalW = 0;
		var _g1 = 0;
		var _g = this.text.length;
		while(_g1 < _g) {
			var char = this.text.charAt(_g1++);
			if(tightchars.indexOf(char) != -1) {
				totalW += 2;
			} else if(widechars.indexOf(char) != -1) {
				totalW += 5;
			} else {
				totalW += 3;
			}
		}
		var width = totalW += 2;
		return [new nx3_geom_Rectangle(-width / 2,-3.,width,6)];
	}
	,__class__: nx3_PNoteHeadsRectsLyricsCalculator
};
var nx3_PNoteHeadsRectsPausesCalculator = function(vnote) {
	this.vnote = vnote;
};
$hxClasses["nx3.PNoteHeadsRectsPausesCalculator"] = nx3_PNoteHeadsRectsPausesCalculator;
nx3_PNoteHeadsRectsPausesCalculator.__name__ = ["nx3","PNoteHeadsRectsPausesCalculator"];
nx3_PNoteHeadsRectsPausesCalculator.prototype = {
	getHeadsRects: function() {
		var rects;
		switch(nx3_ENoteValTools.beaminglevel(this.vnote.nnote.value)) {
		case 1:
			rects = [new nx3_geom_Rectangle(-1.8,-3,3.6,6)];
			break;
		case 2:
			rects = [new nx3_geom_Rectangle(-2,-3,4,6)];
			break;
		default:
			rects = [new nx3_geom_Rectangle(-1.6,-3.3,3.2,6.6)];
		}
		var level = 0;
		var _g1 = this.vnote.nnote.type;
		if(_g1._hx_index == 1) {
			level = _g1.level;
		}
		rects[0].offset(0,level);
		return rects;
	}
	,__class__: nx3_PNoteHeadsRectsPausesCalculator
};
var nx3_PNoteHeadsRectsPitchCalculator = function(note) {
	this.note = note;
	var _g = note.nnote.type;
	if(_g._hx_index == 7) {
		this.level = _g.level;
		this.midinote = _g.midinote;
	}
	var part = this.note.getVoice().getPart().npart;
	this.chain = part.type._hx_index == 9;
	var _g2 = part.type;
	this.partlevel = _g2._hx_index == 9 ? _g2.leveloffset : 0;
};
$hxClasses["nx3.PNoteHeadsRectsPitchCalculator"] = nx3_PNoteHeadsRectsPitchCalculator;
nx3_PNoteHeadsRectsPitchCalculator.__name__ = ["nx3","PNoteHeadsRectsPitchCalculator"];
nx3_PNoteHeadsRectsPitchCalculator.prototype = {
	getHeadsRects: function() {
		if(!this.chain) {
			return [new nx3_geom_Rectangle(-2,-2,1,4)];
		}
		return [new nx3_geom_Rectangle(-2,-2 + (this.level + this.midinote),1,4)];
	}
	,__class__: nx3_PNoteHeadsRectsPitchCalculator
};
var nx3_PNoteOffsetCalculator = function(complex) {
	this.complex = complex;
};
$hxClasses["nx3.PNoteOffsetCalculator"] = nx3_PNoteOffsetCalculator;
nx3_PNoteOffsetCalculator.__name__ = ["nx3","PNoteOffsetCalculator"];
nx3_PNoteOffsetCalculator.prototype = {
	getNoteOffset: function(note) {
		if(note == this.complex.getNotes()[0]) {
			return 0;
		}
		var secondoffset = nx3_geom_RectanglesTools.getXIntersection(this.complex.notes[0].getHeadsRects(),this.complex.notes[1].getHeadsRects().slice());
		var firstnote = this.complex.getNotes()[0];
		var diff = note.nnote.get_topLevel() - firstnote.nnote.get_bottomLevel();
		if(diff == 1) {
			secondoffset *= 0.8;
		}
		if(diff < 1) {
			if(nx3_ENoteValTools.dotlevel(firstnote.nnote.value) > 0) {
				secondoffset += nx3_ENoteValTools.dotlevel(firstnote.nnote.value) == 1 ? 2.0 : 3.0;
			}
		}
		return secondoffset;
	}
	,__class__: nx3_PNoteOffsetCalculator
};
var nx3_PNoteheadsRectsCalculator = function(note) {
	this.note = note;
};
$hxClasses["nx3.PNoteheadsRectsCalculator"] = nx3_PNoteheadsRectsCalculator;
nx3_PNoteheadsRectsCalculator.__name__ = ["nx3","PNoteheadsRectsCalculator"];
nx3_PNoteheadsRectsCalculator.prototype = {
	getHeadsRects: function() {
		var _g = this.note.nnote.type;
		switch(_g._hx_index) {
		case 0:
			return new nx3_PHeadsRectsCalculator(this.note).getHeadsRects();
		case 1:
			return new nx3_PNoteHeadsRectsPausesCalculator(this.note).getHeadsRects();
		case 3:
			return new nx3_PNoteHeadsRectTplCalculator(this.note).getHeadsRects();
		case 4:
			return new nx3_PNoteHeadsRectsLyricsCalculator(this.note,_g.text,_g.font).getHeadsRects();
		case 7:
			return new nx3_PNoteHeadsRectsPitchCalculator(this.note).getHeadsRects();
		default:
			var e = this.note.nnote.type;
			throw new js__$Boot_HaxeError("Non implemented ENoteType: " + $hxEnums[e.__enum__].__constructs__[e._hx_index]);
		}
	}
	,__class__: nx3_PNoteheadsRectsCalculator
};
var nx3_PPart = function(npart) {
	this.rect = null;
	this.npart = npart;
	this.value = 0;
};
$hxClasses["nx3.PPart"] = nx3_PPart;
nx3_PPart.__name__ = ["nx3","PPart"];
nx3_PPart.prototype = {
	iterator: function() {
		return HxOverrides.iter(this.getVoices());
	}
	,get_length: function() {
		return this.getVoices().length;
	}
	,getBar: function() {
		return this.bar;
	}
	,getVoices: function() {
		if(this.voices != null) {
			return this.voices;
		}
		this.voices = [];
		var _g = 0;
		var _g1 = this.npart.nvoices;
		while(_g < _g1.length) {
			var voice = new nx3_PVoice(_g1[_g++]);
			voice.part = this;
			this.voices.push(voice);
		}
		return this.voices;
	}
	,getVoice: function(idx) {
		if(idx < 0 || idx > this.getVoices().length) {
			return null;
		} else {
			return this.getVoices()[idx];
		}
	}
	,getComplexes: function() {
		if(this.complexes != null) {
			return this.complexes;
		}
		this.complexes = new nx3_PPartComplexesGenerator(this).getComplexes();
		return this.complexes;
	}
	,getPositionsComplexes: function() {
		if(this.positionsComplexes != null) {
			return this.positionsComplexes;
		}
		this.positionsComplexes = new haxe_ds_IntMap();
		var _g = 0;
		var _g1 = this.getComplexes();
		while(_g < _g1.length) {
			var complex = _g1[_g];
			++_g;
			this.positionsComplexes.h[complex.getValueposition()] = complex;
		}
		return this.positionsComplexes;
	}
	,getIndex: function() {
		return this.bar.getParts().indexOf(this);
	}
	,getValue: function() {
		if(this.value != 0) {
			return this.value;
		}
		var _g = 0;
		var _g1 = this.getVoices();
		while(_g < _g1.length) this.value = Math.max(this.value,_g1[_g++].getValue()) | 0;
		return this.value;
	}
	,getRect: function() {
		if(this.rect != null) {
			return this.rect;
		}
		var result = this.npart.type._hx_index == 0 ? new nx3_geom_Rectangle(0,-8,1,13) : new nx3_geom_Rectangle(0,-4,1,8);
		var _g1 = 0;
		var _g2 = this.getComplexes();
		while(_g1 < _g2.length) result = result.union(_g2[_g1++].getRect());
		var _g11 = 0;
		var _g21 = this.getVoices();
		while(_g11 < _g21.length) {
			var _g3 = 0;
			var _g4 = _g21[_g11++].getBeamgroups();
			while(_g3 < _g4.length) {
				var beamgroup = _g4[_g3];
				++_g3;
				var dir = beamgroup.getDirection();
				var frame = beamgroup.getFrame();
				if(frame == null) {
					continue;
				}
				var top = dir == nx3_EDirectionUD.Up ? Math.min(frame.leftTipY,frame.rightTipY) : 0;
				result = result.union(new nx3_geom_Rectangle(0,top,1,(dir == nx3_EDirectionUD.Up ? 0 : Math.max(frame.leftTipY,frame.rightTipY)) - top));
			}
		}
		this.rect = result;
		return result;
	}
	,getYAbove: function() {
		var result = 0.0;
		var index = this.bar.getParts().indexOf(this);
		if(index == 0) {
			result = this.getRect().y;
		} else {
			result = this.bar.getPart(index - 1).getRect().get_bottom() + -this.getRect().y;
		}
		return result;
	}
	,__class__: nx3_PPart
	,__properties__: {get_length:"get_length"}
};
var nx3_PPartComplexesGenerator = function(part) {
	this.part = part;
	this.vvoices = part.getVoices();
};
$hxClasses["nx3.PPartComplexesGenerator"] = nx3_PPartComplexesGenerator;
nx3_PPartComplexesGenerator.__name__ = ["nx3","PPartComplexesGenerator"];
nx3_PPartComplexesGenerator.prototype = {
	getComplexes: function() {
		if(this.complexes != null) {
			return this.complexes;
		}
		this.positionsMap = this.calcPositionsMap();
		this.calcComplexes(this.positionsMap);
		return this.complexes;
	}
	,calcComplexes: function(positions) {
		this.complexes = [];
		var poskeys = cx_MapTools.keysToArray(positions.keys());
		poskeys = cx_MapTools.sortarray(poskeys);
		var _g = 0;
		while(_g < poskeys.length) {
			var pos = poskeys[_g];
			++_g;
			var vcomplex = new nx3_PComplex(this.part,positions.h[pos],pos);
			this.complexes.push(vcomplex);
		}
	}
	,calcPositionsMap: function() {
		var positionsMap = new haxe_ds_IntMap();
		var _g = 0;
		var _g1 = this.vvoices;
		while(_g < _g1.length) {
			var vvoice = _g1[_g];
			++_g;
			var _g2 = 0;
			var _g3 = vvoice.getNotes();
			while(_g2 < _g3.length) {
				var vnote = _g3[_g2];
				++_g2;
				var npos = vvoice.getNotePositions().h[vnote.__id__];
				if(!positionsMap.h.hasOwnProperty(npos)) {
					positionsMap.h[npos] = [];
				}
				positionsMap.h[npos].push(vnote);
			}
		}
		return positionsMap;
	}
	,__class__: nx3_PPartComplexesGenerator
};
var nx3_PPartbeamgroupsDirectionCalculator = function(ppart) {
	this.ppart = ppart;
};
$hxClasses["nx3.PPartbeamgroupsDirectionCalculator"] = nx3_PPartbeamgroupsDirectionCalculator;
nx3_PPartbeamgroupsDirectionCalculator.__name__ = ["nx3","PPartbeamgroupsDirectionCalculator"];
nx3_PPartbeamgroupsDirectionCalculator.prototype = {
	calculateBeamgroupsDirections: function() {
		var partbeamgroups = [];
		var _g = 0;
		var _g1 = this.ppart.getVoices();
		while(_g < _g1.length) partbeamgroups.push(_g1[_g++].getBeamgroups());
		var beamgroups0 = partbeamgroups[0];
		var voiceDirection0 = this.ppart.getVoices()[0].nvoice.direction;
		if(voiceDirection0 == null) {
			voiceDirection0 = nx3_EDirectionUAD.Auto;
		}
		if(partbeamgroups.length == 1) {
			var _g2 = 0;
			while(_g2 < beamgroups0.length) {
				var beamgroup = beamgroups0[_g2];
				++_g2;
				var direction = null;
				switch(voiceDirection0._hx_index) {
				case 0:
					direction = nx3_EDirectionUD.Up;
					break;
				case 1:
					direction = new nx3_PBeamgroupDirectionCalculator(beamgroup).getDirection();
					break;
				case 2:
					direction = nx3_EDirectionUD.Down;
					break;
				}
				beamgroup.setDirection(direction);
			}
		} else if(partbeamgroups.length == 2) {
			var beamgroups1 = partbeamgroups[1];
			var voiceDirection1 = this.ppart.getVoices()[1].nvoice.direction;
			if(voiceDirection1 == null) {
				voiceDirection0 = nx3_EDirectionUAD.Auto;
			}
			var voice0 = this.ppart.getVoices()[0];
			var voice1 = this.ppart.getVoices()[1];
			if(voiceDirection0 == nx3_EDirectionUAD.Auto && voiceDirection1 == nx3_EDirectionUAD.Auto) {
				var voice0value = voice0.getValue();
				var voice1value = voice1.getValue();
				var direction1 = null;
				var bgPosition = 0;
				var _g3 = 0;
				while(_g3 < beamgroups0.length) {
					var beamgroup1 = beamgroups0[_g3];
					++_g3;
					if(bgPosition < voice1value) {
						direction1 = nx3_EDirectionUD.Up;
					} else {
						direction1 = new nx3_PBeamgroupDirectionCalculator(beamgroup1).getDirection();
					}
					beamgroup1.setDirection(direction1);
					bgPosition += beamgroup1.getValue();
				}
				var bgPosition1 = 0;
				var _g4 = 0;
				while(_g4 < beamgroups1.length) {
					var beamgroup2 = beamgroups1[_g4];
					++_g4;
					if(bgPosition1 < voice0value) {
						direction1 = nx3_EDirectionUD.Down;
					} else {
						direction1 = new nx3_PBeamgroupDirectionCalculator(beamgroup2).getDirection();
					}
					beamgroup2.setDirection(direction1);
					bgPosition1 += beamgroup2.getValue();
				}
			} else {
				var _g5 = 0;
				while(_g5 < beamgroups0.length) beamgroups0[_g5++].setDirection(nx3_EDirectionTools.uadToUd(voice0.nvoice.direction));
				var _g6 = 0;
				while(_g6 < beamgroups1.length) beamgroups1[_g6++].setDirection(nx3_EDirectionTools.uadToUd(voice1.nvoice.direction));
			}
		} else {
			throw new js__$Boot_HaxeError("SHOULDN'T HAPPEN");
		}
	}
	,__class__: nx3_PPartbeamgroupsDirectionCalculator
};
var nx3_PScore = function(nscore) {
	this.prevSystemwidth = 0;
	this.nscore = nscore;
};
$hxClasses["nx3.PScore"] = nx3_PScore;
nx3_PScore.__name__ = ["nx3","PScore"];
nx3_PScore.prototype = {
	getBars: function() {
		if(this.bars != null) {
			return this.bars;
		}
		this.bars = [];
		var _g = 0;
		var _g1 = this.nscore.nbars;
		while(_g < _g1.length) {
			var bar = new nx3_PBar(_g1[_g++]);
			bar.score = this;
			this.bars.push(bar);
		}
		return this.bars;
	}
	,getNBars: function() {
		var result = [];
		var _g = 0;
		var _g1 = this.getBars();
		while(_g < _g1.length) result.push(_g1[_g++].nbar);
		return result;
	}
	,getSystems: function(systemwidth) {
		if(systemwidth != this.prevSystemwidth) {
			this.systems = null;
		}
		if(this.systems != null) {
			return this.systems;
		}
		this.systems = new nx3_PScoreSystemsGenerator(this,this.getBars()).getsSystems([systemwidth]);
		var _g = 0;
		var _g1 = this.systems;
		while(_g < _g1.length) _g1[_g++].calculateSystembarXs();
		var _g2 = 0;
		var _g11 = this.systems;
		while(_g2 < _g11.length) {
			var system = _g11[_g2];
			++_g2;
			var array = this.systems;
			new nx3_PScoreSystemStretcher(system).stretchTo(system.getSystemBreakWidth(),system != array[array.length - 1] ? 0 : system.getSystemBreakWidth() * .7);
		}
		return this.systems;
	}
	,getBar: function(idx) {
		if(idx < 0 || idx > this.getBars().length) {
			return null;
		} else {
			return this.getBars()[idx];
		}
	}
	,getSystemY: function(system) {
		if(this.systems == null) {
			throw new js__$Boot_HaxeError("Systems == null");
		}
		var systemidx = this.systems.indexOf(system);
		var sysY = .0;
		var _g1 = 0;
		while(_g1 < systemidx) sysY += this.systems[_g1++].getHeight();
		return sysY;
	}
	,getHeight: function() {
		if(this.systems == null) {
			throw new js__$Boot_HaxeError("Systems == null");
		}
		var array = this.systems;
		var lastsystem = array[array.length - 1];
		return this.getSystemY(lastsystem) + lastsystem.getHeight();
	}
	,getWidth: function() {
		if(this.systems == null) {
			throw new js__$Boot_HaxeError("Systems == null");
		}
		var w = .0;
		var _g = 0;
		var _g1 = this.systems;
		while(_g < _g1.length) w = Math.max(w,_g1[_g++].getBarsWidth());
		return w;
	}
	,__class__: nx3_PScore
};
var nx3_PScoreSystemStretcher = function(system) {
	this.system = system;
};
$hxClasses["nx3.PScoreSystemStretcher"] = nx3_PScoreSystemStretcher;
nx3_PScoreSystemStretcher.__name__ = ["nx3","PScoreSystemStretcher"];
nx3_PScoreSystemStretcher.prototype = {
	stretchTo: function(stretchSystemToWidth,ifMoreThan) {
		if(ifMoreThan == null) {
			ifMoreThan = 0;
		}
		if(ifMoreThan > 0) {
			if(this.system.getWidth() <= ifMoreThan) {
				return true;
			}
		}
		var diff = stretchSystemToWidth - this.system.getWidth();
		var totalvalue = this.system.getValue();
		var _g = 0;
		var _g1 = this.system.getSystembars();
		while(_g < _g1.length) {
			var systembar = _g1[_g];
			++_g;
			systembar.setBarStretch(systembar.bar.getValue() / totalvalue * diff);
		}
		this.system.calculateSystembarXs();
		return false;
	}
	,__class__: nx3_PScoreSystemStretcher
};
var nx3_PScoreSystemsGenerator = function(score,bars) {
	this.bars = bars;
	this.score = score;
};
$hxClasses["nx3.PScoreSystemsGenerator"] = nx3_PScoreSystemsGenerator;
nx3_PScoreSystemsGenerator.__name__ = ["nx3","PScoreSystemsGenerator"];
nx3_PScoreSystemsGenerator.prototype = {
	getsSystems: function(systemwidths) {
		var tempbars = this.bars.slice();
		var result = [];
		var sysidx = 0;
		var prevbarAttributes = null;
		while(tempbars.length > 0) {
			var system = new nx3_PSystemBarsGenerator(this.score,tempbars,{ showFirstClef : true, showFirstKey : true, showFirstTime : sysidx == 0},prevbarAttributes,(systemwidths == null ? null : sysidx < 0 || sysidx > systemwidths.length - 1 ? null : systemwidths[sysidx]) != null ? systemwidths[sysidx] : systemwidths[0],new nx3_PBarWidthCalculator()).getSystem();
			prevbarAttributes = system.getLastBarAttributes();
			result.push(system);
			++sysidx;
		}
		return result;
	}
	,__class__: nx3_PScoreSystemsGenerator
};
var nx3_PSignsCalculator = function(notes) {
	this.notes = notes;
};
$hxClasses["nx3.PSignsCalculator"] = nx3_PSignsCalculator;
nx3_PSignsCalculator.__name__ = ["nx3","PSignsCalculator"];
nx3_PSignsCalculator.prototype = {
	getSigns: function() {
		var signs = this.calcUnsortedSigns(this.notes);
		signs = this.calcSortSigns(signs);
		return signs;
	}
	,getVisibleSigns: function() {
		return this.calcVisibleSigns(this.getSigns());
	}
	,calcVisibleSigns: function(signs) {
		var visibleSigns = [];
		var _g = 0;
		while(_g < signs.length) {
			var sign = signs[_g];
			++_g;
			if(sign.sign == nx3_ESign.None) {
				continue;
			}
			visibleSigns.push(sign);
		}
		return visibleSigns;
	}
	,calcUnsortedSigns: function(notes) {
		var PSigns = [];
		var _g = 0;
		while(_g < notes.length) {
			var _g1 = 0;
			var _g2 = notes[_g++].nnote.get_nheads();
			while(_g1 < _g2.length) {
				var nhead = _g2[_g1];
				++_g1;
				PSigns.push({ sign : nhead.sign, level : nhead.level, position : 0});
			}
		}
		return PSigns;
	}
	,calcSortSigns: function(PSigns) {
		PSigns.sort(function(a,b) {
			return Reflect.compare(a.level,b.level);
		});
		return PSigns;
	}
	,__class__: nx3_PSignsCalculator
};
var nx3_PSignsRectsCalculator = function(signs) {
	this.signs = signs;
};
$hxClasses["nx3.PSignsRectsCalculator"] = nx3_PSignsRectsCalculator;
nx3_PSignsRectsCalculator.__name__ = ["nx3","PSignsRectsCalculator"];
nx3_PSignsRectsCalculator.prototype = {
	getSignRects: function(headsRects) {
		var rects = [];
		if(headsRects == null) {
			headsRects = [];
		}
		var _g = 0;
		var _g1 = this.signs;
		while(_g < _g1.length) {
			var sign = _g1[_g];
			++_g;
			var rect = this.getSignRect(sign.sign);
			rect.offset(-rect.width,sign.level);
			var _g2 = 0;
			while(_g2 < headsRects.length) {
				var hr = headsRects[_g2];
				++_g2;
				var i = rect.intersection(hr);
				var count = 0;
				while(i.width > 0.0000001) {
					rect.offset(-i.width,0);
					i = rect.intersection(hr);
					if(count > 5) {
						break;
					}
					++count;
				}
			}
			var _g21 = 0;
			while(_g21 < rects.length) {
				var r = rects[_g21];
				++_g21;
				var i1 = r.intersection(rect);
				while(i1.width > 0 || i1.height > 0) {
					rect.x = r.x - rect.width;
					i1 = r.intersection(rect);
				}
			}
			rects.push(rect);
		}
		return rects;
	}
	,getSignRect: function(sign) {
		switch(sign._hx_index) {
		case 0:
			return null;
		case 2:
			return new nx3_geom_Rectangle(0,-3,2.6,5);
		case 5:
			return new nx3_geom_Rectangle(0,-1.5,2.6,3);
		case 6:case 7:case 8:
			return new nx3_geom_Rectangle(0,-2,4.4,4);
		default:
			return new nx3_geom_Rectangle(0,-3,2.6,6);
		}
	}
	,__class__: nx3_PSignsRectsCalculator
};
var nx3_PStaveRectCalculator = function(note) {
	this.note = note;
};
$hxClasses["nx3.PStaveRectCalculator"] = nx3_PStaveRectCalculator;
nx3_PStaveRectCalculator.__name__ = ["nx3","PStaveRectCalculator"];
nx3_PStaveRectCalculator.prototype = {
	getStaveRect: function() {
		var e = this.note.nnote.type;
		if($hxEnums[e.__enum__].__constructs__[e._hx_index] != "Note") {
			return null;
		}
		if(nx3_ENoteValTools.stavinglevel(this.note.nnote.value) < 1) {
			return null;
		}
		var headw = nx3_ENoteValTools.head(this.note.nnote.value)._hx_index == 2 ? 2.2 : 1.6;
		var rect = null;
		if(this.note.getDirection() == nx3_EDirectionUD.Up) {
			rect = new nx3_geom_Rectangle(0,this.note.nnote.get_bottomLevel() - 7,headw,7);
		} else {
			rect = new nx3_geom_Rectangle(-headw,this.note.nnote.get_topLevel(),headw,7);
		}
		rect.offset(this.note.getXOffset(),0);
		return rect;
	}
	,getFlagRect: function() {
		var e = this.note.nnote.type;
		if($hxEnums[e.__enum__].__constructs__[e._hx_index] != "Note") {
			return null;
		}
		if(nx3_ENoteValTools.beaminglevel(this.note.nnote.value) < 1) {
			return null;
		}
		var beamgroup = this.note.getBeamgroup();
		if(beamgroup != null && beamgroup.pnotes.length == 1) {
			if(nx3_ENoteValTools.beaminglevel(this.note.nnote.value) > 0) {
				var headw = nx3_ENoteValTools.head(this.note.nnote.value)._hx_index == 2 ? 2.2 : 1.6;
				var rect = null;
				if(this.note.getDirection() == nx3_EDirectionUD.Up) {
					rect = new nx3_geom_Rectangle(headw,this.note.nnote.get_bottomLevel() - 7,2.6,4.8);
				} else {
					rect = new nx3_geom_Rectangle(-headw,this.note.nnote.get_topLevel() + 7 - 4.8,2.6,4.8);
				}
				rect.offset(this.note.getXOffset(),0);
				return rect;
			}
		}
		return null;
	}
	,__class__: nx3_PStaveRectCalculator
};
var nx3_PSystem = function(score) {
	this.systemBreakWidth = 0;
	this.systembars = [];
	this.width = 0;
	this.score = score;
};
$hxClasses["nx3.PSystem"] = nx3_PSystem;
nx3_PSystem.__name__ = ["nx3","PSystem"];
nx3_PSystem.prototype = {
	getStatus: function() {
		return this.status;
	}
	,getWidth: function() {
		return this.width;
	}
	,getSystembars: function() {
		return this.systembars;
	}
	,getLastBarAttributes: function() {
		if(this.systembars.length == 0) {
			return null;
		}
		var array = this.systembars;
		return array[array.length - 1].actAttributes;
	}
	,getSystemBreakWidth: function() {
		return this.systemBreakWidth;
	}
	,getValue: function() {
		if(this.value != null) {
			return this.value;
		}
		this.value = 0;
		var _g = 0;
		var _g1 = this.getSystembars();
		while(_g < _g1.length) this.value += _g1[_g++].bar.getValue();
		return this.value;
	}
	,calculateSystembarXs: function() {
		var x = 0.0;
		var _g = 0;
		var _g1 = this.getSystembars();
		while(_g < _g1.length) {
			var systemBar = _g1[_g];
			++_g;
			systemBar.xposition = x;
			x += systemBar.getBarMeasurements().getTotalWidth();
		}
	}
	,getSpaceAbovePart: function(partIdx) {
		var distance = 0.0;
		var _g = 0;
		var _g1 = this.getSystembars();
		while(_g < _g1.length) {
			var systembar = _g1[_g];
			++_g;
			var part = systembar.bar.getPart(partIdx);
			if(part == null) {
				console.log("src/nx3/PSystem.hx:71:","part == null");
				continue;
			}
			var partdistance = 0.0;
			var partrect = part.getRect();
			if(partIdx == 0) {
				partdistance = -partrect.get_top();
			} else {
				partdistance = systembar.bar.getParts()[partIdx - 1].getRect().get_bottom() + -partrect.get_top();
			}
			distance = Math.max(distance,partdistance);
		}
		return distance;
	}
	,getPartY: function(partidx) {
		var party = 0.0;
		var _g1 = 0;
		var _g = partidx + 1;
		while(_g1 < _g) party += this.getSpaceAbovePart(_g1++);
		return party;
	}
	,getTopPartY: function() {
		return this.getPartY(0);
	}
	,getBottomPartY: function() {
		return this.getPartY(this.getSystembars()[0].bar.getParts().length - 1);
	}
	,getHeight: function() {
		var partcount = this.getSystembars()[0].bar.getParts().length - 1;
		var pb = 0.0;
		var _g = 0;
		var _g1 = this.getSystembars();
		while(_g < _g1.length) pb = Math.max(pb,_g1[_g++].bar.getPart(partcount).getRect().get_bottom());
		return this.getPartY(partcount) + pb;
	}
	,getSystembarX: function(systembar) {
		var x = .0;
		var _g = 0;
		var _g1 = this.getSystembars();
		while(_g < _g1.length) {
			var sb = _g1[_g];
			++_g;
			if(sb == systembar) {
				return x;
			}
			x += sb.getBarMeasurements().getTotalWidth();
		}
		return 0;
	}
	,getBarsWidth: function() {
		var array = this.getSystembars();
		var lastbar = array[array.length - 1];
		return this.getSystembarX(lastbar) + lastbar.getBarMeasurements().getTotalWidth();
	}
	,getY: function() {
		if(this.score == null) {
			return 0;
		}
		return this.score.getSystemY(this);
	}
	,__class__: nx3_PSystem
};
var nx3_PSystemBar = function(system,bar,barConfig,barMeasurements,actAttributes,caAttributes) {
	this.stretchamount = 0;
	this.system = system;
	this.bar = bar;
	this.bar.systembar = this;
	this.barConfig = barConfig;
	this.barMeasurements = barMeasurements;
	this.actAttributes = actAttributes;
	this.caAttributes = caAttributes;
};
$hxClasses["nx3.PSystemBar"] = nx3_PSystemBar;
nx3_PSystemBar.__name__ = ["nx3","PSystemBar"];
nx3_PSystemBar.prototype = {
	setBarStretch: function(amount) {
		if(amount == this.stretchamount) {
			return;
		}
		var calculator = new nx3_PBarStretchCalculator(this);
		if(amount == 0) {
			calculator.resetStretch();
		} else {
			calculator.stretch(amount);
		}
	}
	,getBarMeasurements: function() {
		if(this.barMeasurements != null) {
			return this.barMeasurements;
		}
		this.barMeasurements = new nx3_PSystembarMeasurements(this.bar).init(this.actAttributes,this.barConfig,this.caAttributes);
		return this.barMeasurements;
	}
	,getXPosition: function() {
		return this.xposition;
	}
	,getX: function() {
		if(this.system == null) {
			throw new js__$Boot_HaxeError("System == null");
		}
		return this.system.getSystembarX(this);
	}
	,__class__: nx3_PSystemBar
};
var nx3_PSystemBarsGenerator = function(score,bars,systemConfig,prevBarAttributes,breakSystemwidth,barWidthCalculator) {
	this.score = score;
	this.bars = bars;
	this.systemConfig = systemConfig;
	this.prevBarAttributes = prevBarAttributes;
	this.breakSystemwidth = breakSystemwidth;
	this.system = new nx3_PSystem(this.score);
	this.barWidthCalculator = barWidthCalculator;
};
$hxClasses["nx3.PSystemBarsGenerator"] = nx3_PSystemBarsGenerator;
nx3_PSystemBarsGenerator.__name__ = ["nx3","PSystemBarsGenerator"];
nx3_PSystemBarsGenerator.prototype = {
	getSystem: function() {
		this.system.systemBreakWidth = this.breakSystemwidth;
		var tryAnotherBar = true;
		while(tryAnotherBar) {
			var currentBar = this.bars[0];
			var currentBarConfig = new nx3_PBarConfig();
			var currentBarAttributes = this.getBarAttributes(currentBar);
			if(this.prevBarAttributes != null) {
				this.overrideActualAttributesFromPrevBarAttributes(currentBarAttributes,currentBar,this.prevBarAttributes);
			}
			this.overrideActualAttributesWithDefaultsIfStillNotSet(currentBarAttributes);
			if(this.system.getSystembars().length == 0) {
				this.adaptBarConfig(currentBar,currentBarConfig,this.prevBarAttributes,this.systemConfig.showFirstClef,this.systemConfig.showFirstKey,this.systemConfig.showFirstTime);
			} else {
				this.adaptBarConfig(currentBar,currentBarConfig,this.prevBarAttributes,this.systemConfig.showFollowingClef,this.systemConfig.showFollowingKey,this.systemConfig.showFollowingTime);
			}
			var currentMeasurements = new nx3_PSystembarMeasurements(currentBar).init(currentBarAttributes,currentBarConfig);
			if(this.system.width + currentMeasurements.getTotalWidth() > this.breakSystemwidth) {
				this.takeCareOfLastBarCautions();
				return this.system;
			}
			this.system.width += currentMeasurements.getTotalWidth();
			this.system.getSystembars().push(new nx3_PSystemBar(this.system,currentBar,currentBarConfig,currentMeasurements,currentBarAttributes,null));
			this.bars.shift();
			this.prevBarAttributes = this.copyBarAttributes(currentBarAttributes);
			if(this.bars.length < 1) {
				tryAnotherBar = false;
			}
		}
		this.system.status = nx3_PSystemStatus.Ok;
		return this.system;
	}
	,takeCareOfLastBarCautions: function() {
		this.system.status = nx3_PSystemStatus.Ok;
		var array = this.system.getSystembars();
		var sysBar = array[array.length - 1].bar;
		var array1 = this.system.getSystembars();
		var sysBarAttributes = array1[array1.length - 1].actAttributes;
		var array2 = this.bars;
		if(sysBar != array2[array2.length - 1]) {
			var nextBarAttributes = this.getBarAttributes(this.bars[0]);
			var newClef = this.arrayBNullOrDiffers(sysBarAttributes.clefs,nextBarAttributes.clefs);
			var newKey = this.arrayBNullOrDiffers(sysBarAttributes.keys,nextBarAttributes.keys);
			var newTime = this.nullOrDiffers(sysBarAttributes.time,nextBarAttributes.time);
			if(newClef || newKey || newTime) {
				var sysBarCautAttributes = this.copyAndRemoveRedundantAttributes(sysBarAttributes,nextBarAttributes);
				var array3 = this.system.getSystembars();
				var sysBarConfig = array3[array3.length - 1].barConfig;
				var array4 = this.system.getSystembars();
				var sysBarWidth = array4[array4.length - 1].getBarMeasurements().getTotalWidth();
				var sysBarConfigWithCautions = new nx3_PBarConfig(sysBarConfig.showClef,sysBarConfig.showKey,sysBarConfig.showTime);
				if(newClef) {
					sysBarConfigWithCautions.showCautClef = true;
				}
				if(newKey) {
					sysBarConfigWithCautions.showCautKey = true;
				}
				if(newTime) {
					sysBarConfigWithCautions.showCautTime = true;
				}
				if(this.system.width - sysBarWidth + new nx3_PSystembarMeasurements(sysBar).init(sysBarAttributes,sysBarConfigWithCautions,sysBarCautAttributes).getTotalWidth() <= this.breakSystemwidth) {
					var array5 = this.system.getSystembars();
					array5[array5.length - 1].caAttributes = sysBarCautAttributes;
					var array6 = this.system.getSystembars();
					array6[array6.length - 1].barConfig = sysBarConfigWithCautions;
					var tmp = this.system.getWidth() - sysBarWidth;
					var array7 = this.system.getSystembars();
					var tmp1 = array7[array7.length - 1].getBarMeasurements().getTotalWidth();
					this.system.width = tmp + tmp1;
				} else {
					this.system.status = nx3_PSystemStatus.Problem(101,"Last bar fits without caution attributes but not with them");
					if(this.system.getSystembars().length == 1) {
						this.system.status = nx3_PSystemStatus.Problem(102,"First bar doesn't fit when adding required cational attributes");
						return;
					}
					this.system.getSystembars().pop();
					this.bars.unshift(sysBar);
					this.system.width -= sysBarWidth;
					this.system.status = nx3_PSystemStatus.Ok;
				}
			}
		}
	}
	,copyAndRemoveRedundantAttributes: function(sysBarAttributes,nextBarAttributes) {
		var result = this.copyBarAttributes(nextBarAttributes);
		var _g1 = 0;
		var _g = sysBarAttributes.clefs.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(result.clefs[i] == sysBarAttributes.clefs[i]) {
				result.clefs[i] = null;
			}
		}
		var _g11 = 0;
		var _g2 = sysBarAttributes.keys.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			if(result.keys[i1] == sysBarAttributes.keys[i1]) {
				result.keys[i1] = null;
			}
		}
		if(result.time == sysBarAttributes.time) {
			result.time = null;
		}
		return result;
	}
	,adaptBarConfig: function(bar,barConfig,prevBarAttributes,showClef,showKey,showTime) {
		showClef = showClef == true;
		showKey = showKey == true;
		showTime = showTime == true;
		this.getBarAttributes(bar);
		switch(bar.get_displayClefs()._hx_index) {
		case 0:
			barConfig.showClef = true;
			break;
		case 2:
			barConfig.showClef = false;
			break;
		default:
			barConfig.showClef = showClef;
			if(showClef == false && prevBarAttributes != null) {
				var _g1 = 0;
				var _g = prevBarAttributes.clefs.length;
				while(_g1 < _g) {
					var i = _g1++;
					if(bar.get_clefs()[i] == null) {
						continue;
					}
					if(bar.get_clefs()[i] == prevBarAttributes.clefs[i]) {
						continue;
					}
					barConfig.showClef = true;
					break;
				}
			}
		}
		switch(bar.get_displayKeys()._hx_index) {
		case 0:
			barConfig.showKey = true;
			break;
		case 2:
			barConfig.showKey = false;
			break;
		default:
			barConfig.showKey = showKey;
			if(showKey == false && prevBarAttributes != null) {
				var _g2 = 0;
				var _g11 = prevBarAttributes.keys.length;
				while(_g2 < _g11) {
					var i1 = _g2++;
					if(bar.get_keys()[i1] == null) {
						continue;
					}
					if(bar.get_keys()[i1] == prevBarAttributes.keys[i1]) {
						continue;
					}
					barConfig.showKey = true;
					break;
				}
			}
		}
		switch(bar.get_displayTime()._hx_index) {
		case 0:
			barConfig.showTime = true;
			break;
		case 2:
			barConfig.showTime = false;
			break;
		default:
			barConfig.showTime = showTime;
			if(showTime == false && prevBarAttributes != null) {
				if(bar.get_time() != null) {
					if(bar.get_time() != prevBarAttributes.time) {
						barConfig.showTime = true;
					}
				}
			}
			if(bar.get_time() == null) {
				barConfig.showTime = false;
			}
		}
	}
	,copyBarAttributes: function(barAttributes) {
		var result = { clefs : [], keys : [], time : null};
		result.clefs = barAttributes.clefs.slice();
		result.keys = barAttributes.keys.slice();
		result.time = barAttributes.time;
		return result;
	}
	,overrideActualAttributesWithDefaultsIfStillNotSet: function(currentBarAttributes) {
		var _g1 = 0;
		var _g = currentBarAttributes.clefs.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(currentBarAttributes.clefs[i] == null) {
				currentBarAttributes.clefs[i] = nx3_PSystemBarsGenerator.defaultClef;
			}
		}
		var _g11 = 0;
		var _g2 = currentBarAttributes.keys.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			if(currentBarAttributes.keys[i1] == null) {
				currentBarAttributes.keys[i1] = nx3_PSystemBarsGenerator.defaultKey;
			}
		}
		if(currentBarAttributes.time == null) {
			currentBarAttributes.time = nx3_PSystemBarsGenerator.defaultTime;
		}
	}
	,overrideActualAttributesFromPrevBarAttributes: function(currentBarAttributes,currentBar,prevBarAttributes) {
		if(!this.compareBarAttributesValidity(currentBarAttributes,prevBarAttributes)) {
			throw new js__$Boot_HaxeError("Attributes non compatible");
		}
		var _g1 = 0;
		var _g = currentBar.get_clefs().length;
		while(_g1 < _g) {
			var i = _g1++;
			if(currentBar.get_clefs()[i] == null && prevBarAttributes.clefs[i] != null) {
				currentBarAttributes.clefs[i] = prevBarAttributes.clefs[i];
			}
		}
		var _g11 = 0;
		var _g2 = currentBar.get_keys().length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			if(currentBar.get_keys()[i1] == null && prevBarAttributes.keys[i1] != null) {
				currentBarAttributes.keys[i1] = prevBarAttributes.keys[i1];
			}
		}
		if(currentBar.get_time() == null && prevBarAttributes.time != null) {
			currentBarAttributes.time = prevBarAttributes.time;
		}
	}
	,getBarAttributes: function(bar) {
		var time = bar.get_time() != null ? [bar.get_time()].slice()[0] : null;
		return { clefs : bar.get_clefs().slice(), keys : bar.get_keys().slice(), time : time};
	}
	,compareBarAttributesValidity: function(barAttributesA,barAttributesB) {
		if(barAttributesA.clefs.length != barAttributesB.clefs.length) {
			return false;
		}
		if(barAttributesA.keys.length != barAttributesB.keys.length) {
			return false;
		}
		return true;
	}
	,arrayBNullOrDiffers: function(itemA,itemB) {
		if(cx_ArrayTools.allNull(itemB)) {
			return false;
		}
		var _g1 = 0;
		var _g = itemA.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(itemB[i] != null && itemB[i] != itemA[i]) {
				return true;
			}
		}
		return false;
	}
	,nullOrDiffers: function(itemA,itemB) {
		if(itemB == null) {
			return false;
		}
		return itemB != itemA;
	}
	,__class__: nx3_PSystemBarsGenerator
};
var nx3_PSystemStatus = $hxEnums["nx3.PSystemStatus"] = { __ename__ : true, __constructs__ : ["Ok","Problem"]
	,Ok: {_hx_index:0,__enum__:"nx3.PSystemStatus",toString:$estr}
	,Problem: ($_=function(code,msg) { return {_hx_index:1,code:code,msg:msg,__enum__:"nx3.PSystemStatus",toString:$estr}; },$_.__params__ = ["code","msg"],$_)
};
var nx3_PSystembarMeasurements = function(bar) {
	this.barlineWidth = 0;
	this.cautTimeWidth = 0;
	this.cautKeyWidth = 0;
	this.cautClefWidth = 0;
	this.contentWidth = 0;
	this.contentXZero = 0;
	this.leftContentMarginWidth = 0;
	this.timeWidth = 0;
	this.keyWidth = 0;
	this.clefWidth = 0;
	this.ackoladeWidth = 0;
	this.bar = bar;
};
$hxClasses["nx3.PSystembarMeasurements"] = nx3_PSystembarMeasurements;
nx3_PSystembarMeasurements.__name__ = ["nx3","PSystembarMeasurements"];
nx3_PSystembarMeasurements.prototype = {
	getAckoladeXPosition: function() {
		return 0;
	}
	,getClefXPosition: function() {
		return this.getAckoladeXPosition() + this.ackoladeWidth;
	}
	,getKeyXPosition: function() {
		return this.getClefXPosition() + this.clefWidth;
	}
	,getTimeXPosition: function() {
		return this.getKeyXPosition() + this.keyWidth;
	}
	,getLeftContentMarginXPosition: function() {
		return this.getTimeXPosition() + this.timeWidth;
	}
	,getContentXZero: function() {
		return this.contentXZero;
	}
	,getContentXPosition: function() {
		return this.getLeftContentMarginXPosition() + this.leftContentMarginWidth;
	}
	,getContentWidth: function() {
		return this.contentWidth;
	}
	,setContentWidth: function(val) {
		this.contentWidth = val;
	}
	,getCautClefXPosition: function() {
		return this.getContentXPosition() + this.contentWidth;
	}
	,getCautKeyXPosition: function() {
		return this.getCautClefXPosition() + this.cautClefWidth;
	}
	,getCautTimeXPosition: function() {
		return this.getCautKeyXPosition() + this.cautKeyWidth;
	}
	,getBarlineXPosition: function() {
		return this.getCautTimeXPosition() + this.cautTimeWidth;
	}
	,getTotalWidth: function() {
		return this.getBarlineXPosition() + this.barlineWidth;
	}
	,init: function(barAttributes,barConfig,cautAttributes) {
		var calculator = new nx3_PBarWidthCalculator();
		this.ackoladeWidth = calculator.getLeftBarlineWidth(nx3_EBarlineLeft.None);
		if(barConfig.showClef) {
			this.clefWidth = calculator.getClefsWidth(barAttributes.clefs);
		}
		if(barConfig.showKey) {
			this.keyWidth = calculator.getKeysWidth(barAttributes.keys);
		}
		if(barConfig.showTime) {
			this.timeWidth += calculator.getTimeWidth(barAttributes.time);
		}
		this.leftContentMarginWidth = calculator.getContentLeftMarginWidth(this.bar);
		this.contentWidth = calculator.getContentWidth(this.bar);
		this.contentXZero = this.bar.getContentXZero();
		if(barConfig.showCautClef && cautAttributes != null) {
			this.cautClefWidth = calculator.getClefsWidth(cautAttributes.clefs);
		}
		if(barConfig.showCautKey && cautAttributes != null) {
			this.cautKeyWidth = calculator.getKeysWidth(cautAttributes.keys);
		}
		if(barConfig.showCautTime && cautAttributes != null) {
			this.cautTimeWidth += calculator.getTimeWidth(cautAttributes.time);
		}
		this.barlineWidth = calculator.getBarlineWidth(nx3_EBarline.Normal);
		return this;
	}
	,__class__: nx3_PSystembarMeasurements
};
var nx3_PVoice = function(nvoice) {
	this.nvoice = nvoice;
};
$hxClasses["nx3.PVoice"] = nx3_PVoice;
nx3_PVoice.__name__ = ["nx3","PVoice"];
nx3_PVoice.prototype = {
	iterator: function() {
		return HxOverrides.iter(this.getNotes());
	}
	,get_length: function() {
		return this.getNotes().length;
	}
	,getPart: function() {
		return this.part;
	}
	,getNotes: function() {
		if(this.notes != null) {
			return this.notes;
		}
		this.notes = [];
		var _g = 0;
		var _g1 = this.nvoice.nnotes;
		while(_g < _g1.length) {
			var pnote = new nx3_PNote(_g1[_g++]);
			pnote.voice = this;
			this.notes.push(pnote);
		}
		return this.notes;
	}
	,getNote: function(idx) {
		if(idx < 0 || idx > this.getNotes().length) {
			return null;
		} else {
			return this.getNotes()[idx];
		}
	}
	,getValue: function() {
		if(this.value != null) {
			return this.value;
		}
		if(this.notes == null) {
			this.getNotes();
		}
		this.value = 0;
		var _g = 0;
		var _g1 = this.notes;
		while(_g < _g1.length) this.value += nx3_ENoteValTools.value(_g1[_g++].nnote.value);
		return this.value;
	}
	,getBeamgroups: function(pattern) {
		if(pattern != null && pattern != this.beampattern) {
			this.beampattern = pattern;
			this.beamgroups = null;
		}
		if(this.beamgroups != null) {
			return this.beamgroups;
		}
		this.beamgroups = new nx3_PVoiceBeamgroupsGenerator(this.getNotes(),pattern).getBeamgroups();
		return this.beamgroups;
	}
	,getNotePositions: function() {
		if(this.pnotePositions != null) {
			return this.pnotePositions;
		}
		if(this.notes == null) {
			this.getNotes();
		}
		this.pnotePositions = new haxe_ds_ObjectMap();
		var pos = 0;
		var _g = 0;
		var _g1 = this.notes;
		while(_g < _g1.length) {
			var pnote = _g1[_g];
			++_g;
			this.pnotePositions.set(pnote,pos);
			pos += nx3_ENoteValTools.value(pnote.nnote.value);
		}
		return this.pnotePositions;
	}
	,__class__: nx3_PVoice
	,__properties__: {get_length:"get_length"}
};
var nx3_PVoiceBeamgroupsGenerator = function(pnotes,pattern) {
	if(pattern == null) {
		pattern = [nx3_ENoteVal.Nv4];
	}
	this.voice = pnotes[0].getVoice();
	this.notes = pnotes;
	this.pattern = pattern;
	this.adjustPatternLenght();
};
$hxClasses["nx3.PVoiceBeamgroupsGenerator"] = nx3_PVoiceBeamgroupsGenerator;
nx3_PVoiceBeamgroupsGenerator.__name__ = ["nx3","PVoiceBeamgroupsGenerator"];
nx3_PVoiceBeamgroupsGenerator.prototype = {
	getBeamgroups: function() {
		return this.createBeamgroups(this.getNotesBeamgroupPosIndexes(this.getPatternPositions(),this.getNotesPositions()));
	}
	,createBeamgroups: function(indexes) {
		var noteIdx = 0;
		var prevBeamgroupPosIdx = -1;
		var groupIdx = -1;
		var result = [];
		var pnoteGroupIdx = [];
		var _g = 0;
		var _g1 = this.notes;
		while(_g < _g1.length) {
			++_g;
			var beamgroupPosIdx = indexes[noteIdx];
			if(beamgroupPosIdx == -1) {
				++groupIdx;
				pnoteGroupIdx.push(groupIdx);
			} else {
				if(prevBeamgroupPosIdx != beamgroupPosIdx) {
					++groupIdx;
				}
				pnoteGroupIdx.push(groupIdx);
			}
			prevBeamgroupPosIdx = beamgroupPosIdx;
			++noteIdx;
		}
		var noteIdx1 = 0;
		var grouppnotes = [];
		var _g2 = 0;
		var _g11 = this.notes;
		while(_g2 < _g11.length) {
			var pnote = _g11[_g2++];
			var groupIdx1 = pnoteGroupIdx[noteIdx1];
			if(grouppnotes[groupIdx1] == null) {
				grouppnotes[groupIdx1] = [];
			}
			grouppnotes[groupIdx1].push(pnote);
			++noteIdx1;
		}
		var _g3 = 0;
		while(_g3 < grouppnotes.length) result.push(new nx3_PBeamgroup(grouppnotes[_g3++]));
		return result;
	}
	,getNotesBeamgroupPosIndexes: function(patternPositions,notesPositions) {
		var findPatternIdxForNote = function(curNotePos) {
			var _g1 = 0;
			var _g = patternPositions.length;
			while(_g1 < _g) {
				var p = _g1++;
				var curPatternPos = patternPositions[p];
				if(curNotePos.start >= curPatternPos.start && curNotePos.end <= curPatternPos.end) {
					return p;
				}
			}
			return -1;
		};
		var result = [];
		var _g11 = 0;
		var _g2 = this.notes.length;
		while(_g11 < _g2) {
			var n = _g11++;
			var curNotePos1 = notesPositions[n];
			var nnote = this.notes[n].nnote;
			var patternIdx;
			switch(nnote.type._hx_index) {
			case 0:
				patternIdx = nx3_ENoteValTools.beaminglevel(nnote.value) <= 0 ? -1 : findPatternIdxForNote(curNotePos1);
				break;
			case 1:
				patternIdx = -1;
				break;
			default:
				patternIdx = -1;
			}
			result.push(patternIdx);
		}
		return result;
	}
	,getNotesPositions: function() {
		var result = [];
		var currPos = 0;
		var _g = 0;
		var _g1 = this.notes;
		while(_g < _g1.length) {
			var value = nx3_ENoteValTools.value(_g1[_g++].nnote.value);
			result.push({ start : currPos, end : currPos + value});
			currPos += value;
		}
		return result;
	}
	,getPatternPositions: function() {
		var result = [];
		var currPos = 0;
		var _g = 0;
		var _g1 = this.pattern;
		while(_g < _g1.length) {
			var value = nx3_ENoteValTools.value(_g1[_g++]);
			result.push({ start : currPos, end : currPos + value});
			currPos += value;
		}
		return result;
	}
	,adjustPatternLenght: function() {
		var notesValue = 0;
		var _g = 0;
		var _g1 = this.notes;
		while(_g < _g1.length) notesValue += nx3_ENoteValTools.value(_g1[_g++].nnote.value);
		var patternValue = 0;
		var _g2 = 0;
		var _g11 = this.pattern;
		while(_g2 < _g11.length) patternValue += nx3_ENoteValTools.value(_g11[_g2++]);
		while(patternValue < notesValue) {
			this.pattern = this.pattern.concat(this.pattern);
			patternValue *= 2;
		}
	}
	,__class__: nx3_PVoiceBeamgroupsGenerator
};
var nx3_action_EActionInfo = $hxEnums["nx3.action.EActionInfo"] = { __ename__ : true, __constructs__ : ["TargetXY"]
	,TargetXY: ($_=function(target,x,y) { return {_hx_index:0,target:target,x:x,y:y,__enum__:"nx3.action.EActionInfo",toString:$estr}; },$_.__params__ = ["target","x","y"],$_)
};
var nx3_action_EActionType = $hxEnums["nx3.action.EActionType"] = { __ename__ : true, __constructs__ : ["HeadAction","NoteAction"]
	,HeadAction: ($_=function(type,head,info) { return {_hx_index:0,type:type,head:head,info:info,__enum__:"nx3.action.EActionType",toString:$estr}; },$_.__params__ = ["type","head","info"],$_)
	,NoteAction: ($_=function(type,note,info) { return {_hx_index:1,type:type,note:note,info:info,__enum__:"nx3.action.EActionType",toString:$estr}; },$_.__params__ = ["type","note","info"],$_)
};
var nx3_action_EActivityType = $hxEnums["nx3.action.EActivityType"] = { __ename__ : true, __constructs__ : ["MouseDown","MouseUp","MouseOver","MouseOut"]
	,MouseDown: {_hx_index:0,__enum__:"nx3.action.EActivityType",toString:$estr}
	,MouseUp: {_hx_index:1,__enum__:"nx3.action.EActivityType",toString:$estr}
	,MouseOver: {_hx_index:2,__enum__:"nx3.action.EActivityType",toString:$estr}
	,MouseOut: {_hx_index:3,__enum__:"nx3.action.EActivityType",toString:$estr}
};
var nx3_action_IInteractivity = function() { };
$hxClasses["nx3.action.IInteractivity"] = nx3_action_IInteractivity;
nx3_action_IInteractivity.__name__ = ["nx3","action","IInteractivity"];
nx3_action_IInteractivity.prototype = {
	__class__: nx3_action_IInteractivity
};
var nx3_geom_BezieerTool = function() { };
$hxClasses["nx3.geom.BezieerTool"] = nx3_geom_BezieerTool;
nx3_geom_BezieerTool.__name__ = ["nx3","geom","BezieerTool"];
nx3_geom_BezieerTool.bezieerCoordinates = function(anchor1,control1,control2,anchor2,lineWidth,lineColor,segments) {
	if(segments == null) {
		segments = 10;
	}
	if(lineColor == null) {
		lineColor = 0;
	}
	if(lineWidth == null) {
		lineWidth = 1;
	}
	var coord = [];
	coord.push(anchor1);
	var posx;
	var posy;
	var _g1 = 0;
	while(_g1 < segments) {
		var u = _g1++ / segments;
		posx = Math.pow(u,3) * (anchor2.x + 3 * (control1.x - control2.x) - anchor1.x) + 3 * Math.pow(u,2) * (anchor1.x - 2 * control1.x + control2.x) + 3 * u * (control1.x - anchor1.x) + anchor1.x;
		posy = Math.pow(u,3) * (anchor2.y + 3 * (control1.y - control2.y) - anchor1.y) + 3 * Math.pow(u,2) * (anchor1.y - 2 * control1.y + control2.y) + 3 * u * (control1.y - anchor1.y) + anchor1.y;
		coord.push({ x : posx, y : posy});
	}
	coord.push(anchor2);
	return coord;
};
var nx3_geom_Point = function(x,y) {
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.x = x;
	this.y = y;
};
$hxClasses["nx3.geom.Point"] = nx3_geom_Point;
nx3_geom_Point.__name__ = ["nx3","geom","Point"];
nx3_geom_Point.distance = function(pt1,pt2) {
	var dx = pt1.x - pt2.x;
	var dy = pt1.y - pt2.y;
	return Math.sqrt(dx * dx + dy * dy);
};
nx3_geom_Point.interpolate = function(pt1,pt2,f) {
	return new nx3_geom_Point(pt2.x + f * (pt1.x - pt2.x),pt2.y + f * (pt1.y - pt2.y));
};
nx3_geom_Point.polar = function(len,angle) {
	return new nx3_geom_Point(len * Math.cos(angle),len * Math.sin(angle));
};
nx3_geom_Point.prototype = {
	add: function(v) {
		return new nx3_geom_Point(v.x + this.x,v.y + this.y);
	}
	,clone: function() {
		return new nx3_geom_Point(this.x,this.y);
	}
	,copyFrom: function(sourcePoint) {
		this.x = sourcePoint.x;
		this.y = sourcePoint.y;
	}
	,equals: function(toCompare) {
		if(toCompare.x == this.x) {
			return toCompare.y == this.y;
		} else {
			return false;
		}
	}
	,normalize: function(thickness) {
		if(this.x == 0 && this.y == 0) {
			return;
		} else {
			var norm = thickness / Math.sqrt(this.x * this.x + this.y * this.y);
			this.x *= norm;
			this.y *= norm;
		}
	}
	,offset: function(dx,dy) {
		this.x += dx;
		this.y += dy;
	}
	,setTo: function(x,y) {
		this.x = x;
		this.y = y;
	}
	,subtract: function(v) {
		return new nx3_geom_Point(this.x - v.x,this.y - v.y);
	}
	,toString: function() {
		return "(" + this.x + ", " + this.y + ")";
	}
	,get_length: function() {
		return Math.sqrt(this.x * this.x + this.y * this.y);
	}
	,__class__: nx3_geom_Point
	,__properties__: {get_length:"get_length"}
};
var nx3_geom_Rectangle = function(x,y,width,height) {
	if(height == null) {
		height = 0;
	}
	if(width == null) {
		width = 0;
	}
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.x = x;
	this.y = y;
	this.width = width;
	this.height = height;
};
$hxClasses["nx3.geom.Rectangle"] = nx3_geom_Rectangle;
nx3_geom_Rectangle.__name__ = ["nx3","geom","Rectangle"];
nx3_geom_Rectangle.prototype = {
	clone: function() {
		return new nx3_geom_Rectangle(this.x,this.y,this.width,this.height);
	}
	,contains: function(x,y) {
		if(x >= this.x && y >= this.y && x < this.get_right()) {
			return y < this.get_bottom();
		} else {
			return false;
		}
	}
	,containsPoint: function(point) {
		return this.contains(point.x,point.y);
	}
	,containsRect: function(rect) {
		if(rect.width <= 0 || rect.height <= 0) {
			if(rect.x > this.x && rect.y > this.y && rect.get_right() < this.get_right()) {
				return rect.get_bottom() < this.get_bottom();
			} else {
				return false;
			}
		} else if(rect.x >= this.x && rect.y >= this.y && rect.get_right() <= this.get_right()) {
			return rect.get_bottom() <= this.get_bottom();
		} else {
			return false;
		}
	}
	,copyFrom: function(sourceRect) {
		this.x = sourceRect.x;
		this.y = sourceRect.y;
		this.width = sourceRect.width;
		this.height = sourceRect.height;
	}
	,equals: function(toCompare) {
		if(this.x == toCompare.x && this.y == toCompare.y && this.width == toCompare.width) {
			return this.height == toCompare.height;
		} else {
			return false;
		}
	}
	,extendBounds: function(r) {
		var dx = this.x - r.x;
		if(dx > 0) {
			this.x -= dx;
			this.width += dx;
		}
		var dy = this.y - r.y;
		if(dy > 0) {
			this.y -= dy;
			this.height += dy;
		}
		if(r.get_right() > this.get_right()) {
			this.set_right(r.get_right());
		}
		if(r.get_bottom() > this.get_bottom()) {
			this.set_bottom(r.get_bottom());
		}
	}
	,inflate: function(dx,dy) {
		this.x -= dx;
		this.y -= dy;
		this.width += dx * 2;
		this.height += dy * 2;
	}
	,inflatePoint: function(point) {
		this.inflate(point.x,point.y);
	}
	,intersection: function(toIntersect) {
		var x0 = this.x < toIntersect.x ? toIntersect.x : this.x;
		var x1 = this.get_right() > toIntersect.get_right() ? toIntersect.get_right() : this.get_right();
		if(x1 <= x0) {
			return new nx3_geom_Rectangle();
		}
		var y0 = this.y < toIntersect.y ? toIntersect.y : this.y;
		var y1 = this.get_bottom() > toIntersect.get_bottom() ? toIntersect.get_bottom() : this.get_bottom();
		if(y1 <= y0) {
			return new nx3_geom_Rectangle();
		}
		var number = x1 - x0;
		number *= Math.pow(10,6);
		number = Math.round(number) / Math.pow(10,6);
		var number1 = y1 - y0;
		number1 *= Math.pow(10,6);
		number1 = Math.round(number1) / Math.pow(10,6);
		return new nx3_geom_Rectangle(x0,y0,number,number1);
	}
	,intersects: function(toIntersect) {
		if((this.get_right() > toIntersect.get_right() ? toIntersect.get_right() : this.get_right()) <= (this.x < toIntersect.x ? toIntersect.x : this.x)) {
			return false;
		}
		return (this.get_bottom() > toIntersect.get_bottom() ? toIntersect.get_bottom() : this.get_bottom()) > (this.y < toIntersect.y ? toIntersect.y : this.y);
	}
	,isEmpty: function() {
		if(!(this.width <= 0)) {
			return this.height <= 0;
		} else {
			return true;
		}
	}
	,offset: function(dx,dy) {
		var number = this.x + dx;
		number *= Math.pow(10,6);
		number = Math.round(number) / Math.pow(10,6);
		this.x = number;
		var number1 = this.y + dy;
		number1 *= Math.pow(10,6);
		number1 = Math.round(number1) / Math.pow(10,6);
		this.y = number1;
	}
	,offsetPoint: function(point) {
		this.x += point.x;
		this.y += point.y;
	}
	,setEmpty: function() {
		this.x = 0;
		this.y = 0;
		this.width = 0;
		this.height = 0;
	}
	,toString: function() {
		return "(x=" + this.x + ", y=" + this.y + ", width=" + this.width + ", height=" + this.height + ")";
	}
	,union: function(toUnion) {
		var x0 = this.x > toUnion.x ? toUnion.x : this.x;
		var y0 = this.y > toUnion.y ? toUnion.y : this.y;
		return new nx3_geom_Rectangle(x0,y0,(this.get_right() < toUnion.get_right() ? toUnion.get_right() : this.get_right()) - x0,(this.get_bottom() < toUnion.get_bottom() ? toUnion.get_bottom() : this.get_bottom()) - y0);
	}
	,get_bottom: function() {
		return this.y + this.height;
	}
	,set_bottom: function(value) {
		this.height = value - this.y;
		return value;
	}
	,get_bottomRight: function() {
		return new nx3_geom_Point(this.x + this.width,this.y + this.height);
	}
	,set_bottomRight: function(value) {
		this.width = value.x - this.x;
		this.height = value.y - this.y;
		return value.clone();
	}
	,get_left: function() {
		return this.x;
	}
	,set_left: function(value) {
		this.width -= value - this.x;
		this.x = value;
		return value;
	}
	,get_right: function() {
		return this.x + this.width;
	}
	,set_right: function(value) {
		this.width = value - this.x;
		return value;
	}
	,get_size: function() {
		return new nx3_geom_Point(this.width,this.height);
	}
	,set_size: function(value) {
		this.width = value.x;
		this.height = value.y;
		return value.clone();
	}
	,get_top: function() {
		return this.y;
	}
	,set_top: function(value) {
		this.height -= value - this.y;
		this.y = value;
		return value;
	}
	,get_topLeft: function() {
		return new nx3_geom_Point(this.x,this.y);
	}
	,set_topLeft: function(value) {
		this.x = value.x;
		this.y = value.y;
		return value.clone();
	}
	,__class__: nx3_geom_Rectangle
	,__properties__: {set_topLeft:"set_topLeft",get_topLeft:"get_topLeft",set_top:"set_top",get_top:"get_top",set_size:"set_size",get_size:"get_size",set_right:"set_right",get_right:"get_right",set_left:"set_left",get_left:"get_left",set_bottomRight:"set_bottomRight",get_bottomRight:"get_bottomRight",set_bottom:"set_bottom",get_bottom:"get_bottom"}
};
var nx3_geom_RectanglesTools = function() { };
$hxClasses["nx3.geom.RectanglesTools"] = nx3_geom_RectanglesTools;
nx3_geom_RectanglesTools.__name__ = ["nx3","geom","RectanglesTools"];
nx3_geom_RectanglesTools.getXIntersection = function(rectsA,rectsB) {
	var rectsB2 = [];
	var _g = 0;
	while(_g < rectsB.length) rectsB2.push(rectsB[_g++].clone());
	var check = function() {
		var _g1 = 0;
		while(_g1 < rectsA.length) {
			var ra = rectsA[_g1++];
			var _g11 = 0;
			while(_g11 < rectsB2.length) {
				var i = ra.intersection(rectsB2[_g11++]);
				var number = i.width;
				number *= Math.pow(10,8);
				number = Math.round(number) / Math.pow(10,8);
				i.width = number;
				if(i.width > 0) {
					return i.width;
				}
			}
		}
		return 0;
	};
	var x = 0;
	var moveX = check();
	while(moveX > 0) {
		x += moveX;
		var _g2 = 0;
		while(_g2 < rectsB2.length) rectsB2[_g2++].offset(moveX,0);
		moveX = check();
	}
	return x;
};
nx3_geom_RectanglesTools.clone = function(rects) {
	if(rects == null) {
		return null;
	}
	var result = [];
	var _g = 0;
	while(_g < rects.length) result.push(rects[_g++]);
	return result;
};
nx3_geom_RectanglesTools.offset = function(rects,x,y) {
	var _g = 0;
	while(_g < rects.length) rects[_g++].offset(x,y);
};
nx3_geom_RectanglesTools.unionAll = function(rects) {
	if(rects == null) {
		return null;
	}
	if(rects.length == 1) {
		return rects[0].clone();
	}
	var r = rects[0].clone();
	var _g1 = 1;
	var _g = rects.length;
	while(_g1 < _g) r = r.union(rects[_g1++]);
	return r;
};
nx3_geom_RectanglesTools.concat = function(rectsA,rectsB) {
	var _g = 0;
	while(_g < rectsB.length) rectsA.push(rectsB[_g++]);
	return rectsA;
};
var nx3_qs_QSExamples = function() { };
$hxClasses["nx3.qs.QSExamples"] = nx3_qs_QSExamples;
nx3_qs_QSExamples.__name__ = ["nx3","qs","QSExamples"];
nx3_qs_QSExamples.run = function() {
	new nx3_qs_QSParser("#test |C /Gbbb %up c d e16 f g a ").parse();
	new nx3_qs_QSParser("c c").parse();
	new nx3_qs_QSParser("#test a+16 2a-,b a+,b-,cN8 ").parse();
	new nx3_qs_QSParser("#test 4a,b 8 16 | b b b").parse();
	new nx3_qs_QSParser("c2_,d pu d /F c /C c").parse();
	new nx3_qs_QSParser("/tpl 1 2 3 y t r").parse();
	var nscore = new nx3_qs_QSParser("/lyr Hej- san hopp- san.").parse();
	new nx3_qs_QSParser("c d e f g a ").parse();
	new nx3_qs_QSParser("c d e % f g a ").parse();
	new nx3_qs_QSParser("c d e % f g a / a b c ").parse();
	new nx3_qs_QSParser("a | a").parse();
	new nx3_qs_QSParser("a a a / b b b | a / b ").parse();
	new nx3_qs_QSParser("a % b | a  ").parse();
	new nx3_qs_QSParser("a % b / a | a / b % c  ").parse();
	new nx3_qs_QSParser("a aa % b bb / a | a aa / b bb % c cc  ").parse();
	console.log("src/nx3/qs/QSParser.hx:39:",haxe_xml_Printer.print(nx3_xml_ScoreXML.toXml(nscore)));
};
var nx3_qs_Qs1 = $hxEnums["nx3.qs.Qs1"] = { __ename__ : true, __constructs__ : ["S","B","P","V","N"]
	,S: ($_=function(s) { return {_hx_index:0,s:s,__enum__:"nx3.qs.Qs1",toString:$estr}; },$_.__params__ = ["s"],$_)
	,B: ($_=function(s) { return {_hx_index:1,s:s,__enum__:"nx3.qs.Qs1",toString:$estr}; },$_.__params__ = ["s"],$_)
	,P: ($_=function(s) { return {_hx_index:2,s:s,__enum__:"nx3.qs.Qs1",toString:$estr}; },$_.__params__ = ["s"],$_)
	,V: ($_=function(s) { return {_hx_index:3,s:s,__enum__:"nx3.qs.Qs1",toString:$estr}; },$_.__params__ = ["s"],$_)
	,N: ($_=function(s) { return {_hx_index:4,s:s,__enum__:"nx3.qs.Qs1",toString:$estr}; },$_.__params__ = ["s"],$_)
};
var nx3_qs_QSParser = function(str) {
	this.noteIdx = 0;
	this.voiceIdx = -1;
	this.partIdx = -1;
	this.barIdx = -1;
	str = cx_StrTools.replaceAll(str,"  "," ");
	str = nx3_qs_QSParserTools.urlDecode(str);
	this.str = str;
};
$hxClasses["nx3.qs.QSParser"] = nx3_qs_QSParser;
nx3_qs_QSParser.__name__ = ["nx3","qs","QSParser"];
nx3_qs_QSParser.prototype = {
	init: function() {
	}
	,initBarGlobals: function(s) {
		this.barGlobals = { time : null};
		if(nx3_qs_StrTools.has(s,"2/8")) {
			this.barGlobals.time = nx3_ETime.Time2_8;
		}
		if(nx3_qs_StrTools.has(s,"3/8")) {
			this.barGlobals.time = nx3_ETime.Time3_8;
		}
		if(nx3_qs_StrTools.has(s,"4/8")) {
			this.barGlobals.time = nx3_ETime.Time4_8;
		}
		if(nx3_qs_StrTools.has(s,"5/8")) {
			this.barGlobals.time = nx3_ETime.Time5_8;
		}
		if(nx3_qs_StrTools.has(s,"6/8")) {
			this.barGlobals.time = nx3_ETime.Time6_8;
		}
		if(nx3_qs_StrTools.has(s,"2/4")) {
			this.barGlobals.time = nx3_ETime.Time2_4;
		}
		if(nx3_qs_StrTools.has(s,"3/4")) {
			this.barGlobals.time = nx3_ETime.Time3_4;
		}
		if(nx3_qs_StrTools.has(s,"4/4")) {
			this.barGlobals.time = nx3_ETime.Time4_4;
		}
		if(nx3_qs_StrTools.has(s,"5/4")) {
			this.barGlobals.time = nx3_ETime.Time5_4;
		}
		if(nx3_qs_StrTools.has(s,"6/4")) {
			this.barGlobals.time = nx3_ETime.Time6_4;
		}
		if(nx3_qs_StrTools.has(s,"C")) {
			this.barGlobals.time = nx3_ETime.TimeCommon;
		}
		if(nx3_qs_StrTools.has(s,"c")) {
			this.barGlobals.time = nx3_ETime.TimeAllabreve;
		}
	}
	,initPartGlobals: function(s) {
		this.partGlobals = { clef : null, key : null, type : null};
		this.partGlobals.clef = this.getPartClef(s);
		this.partGlobals.key = this.getPartKey(s);
		if(nx3_qs_StrTools.has(s,"tpl")) {
			this.partGlobals.type = nx3_EPartType.Tplchain(nx3_EModus.Major,nx3_EOctave.Normal);
		}
		if(nx3_qs_StrTools.has(s,"tpr")) {
			this.partGlobals.type = nx3_EPartType.Tplrow(nx3_EModus.Major,nx3_EOctave.Normal);
		}
		if(nx3_qs_StrTools.has(s,"lyr")) {
			this.partGlobals.type = nx3_EPartType.Lyrics;
		}
	}
	,initVoiceGlobals: function(s) {
		this.voiceGlobals = { dir : nx3_EDirectionUAD.Auto};
		if(nx3_qs_StrTools.has(s,"u")) {
			this.voiceGlobals.dir = nx3_EDirectionUAD.Up;
		}
		if(nx3_qs_StrTools.has(s,"d")) {
			this.voiceGlobals.dir = nx3_EDirectionUAD.Down;
		}
	}
	,initNoteGlobals: function() {
		this.noteGlobals = { value : nx3_ENoteVal.Nv4, levels : [0]};
	}
	,parse: function() {
		this.tokens = this.getTokens(this.str);
		var matrix = this.createMatrix(this.tokens);
		this.checkParts(matrix);
		return this.createNScore(matrix);
	}
	,createNScore: function(matrix) {
		var bars = [];
		var _g = 0;
		while(_g < matrix.length) {
			var ib = matrix[_g];
			++_g;
			this.initBarGlobals(ib.bar);
			var parts = [];
			var _g1 = 0;
			var _g2 = ib.parts;
			while(_g1 < _g2.length) {
				var ip = _g2[_g1];
				++_g1;
				this.initPartGlobals(ip.part);
				var voices = [];
				var _g3 = 0;
				var _g4 = ip.voices;
				while(_g3 < _g4.length) {
					var iv = _g4[_g3];
					++_g3;
					this.initVoiceGlobals(iv.voice);
					var notes = [];
					this.initNoteGlobals();
					var _g5 = 0;
					var _g6 = iv.notes;
					while(_g5 < _g6.length) notes.push(this.createNNote(_g6[_g5++]));
					voices.push(this.createVoice(iv.voice,notes));
				}
				parts.push(this.createPart(ip.part,voices));
			}
			bars.push(this.createBar(ib.bar,parts));
		}
		return new nx3_NScore(bars);
	}
	,createBar: function(s,parts) {
		return new nx3_NBar(parts,null,this.barGlobals.time);
	}
	,getPartClef: function(s) {
		if(nx3_qs_StrTools.has(s,"F")) {
			return nx3_EClef.ClefF;
		}
		if(nx3_qs_StrTools.has(s,"C")) {
			return nx3_EClef.ClefC;
		}
		return nx3_EClef.ClefG;
	}
	,getPartKey: function(s) {
		if(nx3_qs_StrTools.has(s,"bbb")) {
			return nx3_EKey.Flat3;
		}
		if(nx3_qs_StrTools.has(s,"bb")) {
			return nx3_EKey.Flat2;
		}
		if(nx3_qs_StrTools.has(s,"b")) {
			return nx3_EKey.Flat1;
		}
		if(nx3_qs_StrTools.has(s,"n")) {
			return nx3_EKey.Natural;
		}
		if(nx3_qs_StrTools.has(s,"###")) {
			return nx3_EKey.Sharp3;
		}
		if(nx3_qs_StrTools.has(s,"##")) {
			return nx3_EKey.Sharp2;
		}
		if(nx3_qs_StrTools.has(s,"#")) {
			return nx3_EKey.Sharp1;
		}
		return nx3_EKey.Natural;
	}
	,createPart: function(s,voices) {
		return new nx3_NPart(voices,this.partGlobals.type,this.partGlobals.clef,null,this.partGlobals.key);
	}
	,createVoice: function(s,notes) {
		return new nx3_NVoice(notes,null,this.voiceGlobals.dir);
	}
	,createNNoteLyrics: function(s) {
		var cont = null;
		if(nx3_qs_StrTools.has(s,"-")) {
			cont = nx3_ELyricContinuation.Hyphen;
			s = StringTools.replace(s,"-","");
		}
		return new nx3_NNote(nx3_ENoteType.Lyric(s,null,cont),null,this.noteGlobals.value);
	}
	,createNNoteTpl: function(s) {
		var level = 0;
		if(nx3_qs_StrTools.has(s,"x")) {
			level = 6;
		}
		if(nx3_qs_StrTools.has(s,"c")) {
			level = 5;
		}
		if(nx3_qs_StrTools.has(s,"v")) {
			level = 4;
		}
		if(nx3_qs_StrTools.has(s,"b")) {
			level = 3;
		}
		if(nx3_qs_StrTools.has(s,"n")) {
			level = 2;
		}
		if(nx3_qs_StrTools.has(s,"m")) {
			level = 1;
		}
		if(nx3_qs_StrTools.has(s,"a")) {
			level = 0;
		}
		if(nx3_qs_StrTools.has(s,"s")) {
			level = -1;
		}
		if(nx3_qs_StrTools.has(s,"d")) {
			level = -2;
		}
		if(nx3_qs_StrTools.has(s,"f")) {
			level = -3;
		}
		if(nx3_qs_StrTools.has(s,"g")) {
			level = -4;
		}
		if(nx3_qs_StrTools.has(s,"h")) {
			level = -5;
		}
		if(nx3_qs_StrTools.has(s,"j")) {
			level = -6;
		}
		if(nx3_qs_StrTools.has(s,"q")) {
			level = -7;
		}
		if(nx3_qs_StrTools.has(s,"w")) {
			level = -8;
		}
		if(nx3_qs_StrTools.has(s,"e")) {
			level = -9;
		}
		if(nx3_qs_StrTools.has(s,"r")) {
			level = -10;
		}
		var sign = null;
		if(nx3_qs_StrTools.has(s,"+")) {
			sign = nx3_ESign.Sharp;
		}
		if(nx3_qs_StrTools.has(s,"+")) {
			sign = nx3_ESign.Flat;
		}
		return new nx3_NNote(nx3_ENoteType.Tpl(level,sign,false),null,this.noteGlobals.value);
	}
	,createNNoteNormal: function(s) {
		var hs = s.split(",");
		var heads = [];
		var _g = 0;
		while(_g < hs.length) {
			var h = hs[_g];
			++_g;
			var level = 0;
			if(nx3_qs_StrTools.has(h,"F")) {
				level = -4;
			}
			if(nx3_qs_StrTools.has(h,"E")) {
				level = -3;
			}
			if(nx3_qs_StrTools.has(h,"D")) {
				level = -2;
			}
			if(nx3_qs_StrTools.has(h,"C")) {
				level = -1;
			}
			if(nx3_qs_StrTools.has(h,"b")) {
				level = 0;
			}
			if(nx3_qs_StrTools.has(h,"a")) {
				level = 1;
			}
			if(nx3_qs_StrTools.has(h,"g")) {
				level = 2;
			}
			if(nx3_qs_StrTools.has(h,"f")) {
				level = 3;
			}
			if(nx3_qs_StrTools.has(h,"e")) {
				level = 4;
			}
			if(nx3_qs_StrTools.has(h,"d")) {
				level = 5;
			}
			if(nx3_qs_StrTools.has(h,"c")) {
				level = 6;
			}
			if(nx3_qs_StrTools.has(h,"B")) {
				level = 7;
			}
			if(nx3_qs_StrTools.has(h,"A")) {
				level = 8;
			}
			if(nx3_qs_StrTools.has(h,"G")) {
				level = 9;
			}
			if(nx3_qs_StrTools.has(h,"`")) {
				level += 7;
			}
			if(nx3_qs_StrTools.has(h,"´")) {
				level -= 7;
			}
			switch(this.partGlobals.clef._hx_index) {
			case 1:
				level -= 5;
				break;
			case 2:
				level -= 6;
				break;
			default:
				level = level;
			}
			var sign = nx3_ESign.None;
			if(nx3_qs_StrTools.has(h,"+")) {
				sign = nx3_ESign.Sharp;
			}
			if(nx3_qs_StrTools.has(h,"-")) {
				sign = nx3_ESign.Flat;
			}
			if(nx3_qs_StrTools.has(h,"n")) {
				sign = nx3_ESign.Natural;
			}
			if(nx3_qs_StrTools.has(h,"N")) {
				sign = nx3_ESign.Natural;
			}
			var tie = null;
			if(nx3_qs_StrTools.has(h,"_")) {
				tie = nx3_ETie.Tie(nx3_EDirectionUAD.Auto,0);
			}
			heads.push(new nx3_NHead(null,level,sign,tie));
		}
		if(nx3_qs_StrTools.has(s,"p")) {
			var pauselevel = 0;
			if(nx3_qs_StrTools.has(s,"u")) {
				pauselevel = -1;
			}
			if(nx3_qs_StrTools.has(s,"uu")) {
				pauselevel = -2;
			}
			if(nx3_qs_StrTools.has(s,"d")) {
				pauselevel = 1;
			}
			if(nx3_qs_StrTools.has(s,"dd")) {
				pauselevel = 2;
			}
			return new nx3_NNote(nx3_ENoteType.Pause(pauselevel),null,this.noteGlobals.value);
		}
		return new nx3_NNote(null,heads,this.noteGlobals.value);
	}
	,createNNote: function(s) {
		if(nx3_qs_StrTools.has(s,"16")) {
			this.noteGlobals.value = nx3_ENoteVal.Nv16;
			s = StringTools.replace(s,"16","");
		}
		if(nx3_qs_StrTools.has(s,"8.")) {
			this.noteGlobals.value = nx3_ENoteVal.Nv8dot;
			s = StringTools.replace(s,"8.","");
		}
		if(nx3_qs_StrTools.has(s,"8")) {
			this.noteGlobals.value = nx3_ENoteVal.Nv8;
			s = StringTools.replace(s,"8","");
		}
		if(nx3_qs_StrTools.has(s,"4.")) {
			this.noteGlobals.value = nx3_ENoteVal.Nv4dot;
			s = StringTools.replace(s,"4.","");
		}
		if(nx3_qs_StrTools.has(s,"4")) {
			this.noteGlobals.value = nx3_ENoteVal.Nv4;
			s = StringTools.replace(s,"4","");
		}
		if(nx3_qs_StrTools.has(s,"2.")) {
			this.noteGlobals.value = nx3_ENoteVal.Nv2dot;
			s = StringTools.replace(s,"2.","");
		}
		if(nx3_qs_StrTools.has(s,"2")) {
			this.noteGlobals.value = nx3_ENoteVal.Nv2;
			s = StringTools.replace(s,"2","");
		}
		if(nx3_qs_StrTools.has(s,"1.")) {
			this.noteGlobals.value = nx3_ENoteVal.Nv1dot;
			s = StringTools.replace(s,"1.","");
		}
		if(nx3_qs_StrTools.has(s,"1")) {
			this.noteGlobals.value = nx3_ENoteVal.Nv1;
			s = StringTools.replace(s,"1","");
		}
		var nnote = null;
		if(this.partGlobals.type != null) {
			switch(this.partGlobals.type._hx_index) {
			case 1:
				nnote = this.createNNoteLyrics(s);
				break;
			case 2:
				nnote = this.createNNoteTpl(s);
				break;
			case 3:
				nnote = this.createNNoteTpl(s);
				break;
			default:
				nnote = null;
			}
		}
		if(nnote == null) {
			nnote = this.createNNoteNormal(s);
		}
		return nnote;
	}
	,getTokens: function(str) {
		var a = StringTools.trim(this.str).split(" ");
		var tokens = [];
		var _g = 0;
		while(_g < a.length) {
			var sub = a[_g];
			++_g;
			var token;
			switch(sub.charAt(0)) {
			case "#":
				token = nx3_qs_Qs1.S(HxOverrides.substr(sub,1,null));
				break;
			case "%":
				token = nx3_qs_Qs1.V(HxOverrides.substr(sub,1,null));
				break;
			case "/":
				token = nx3_qs_Qs1.P(HxOverrides.substr(sub,1,null));
				break;
			case "|":
				token = nx3_qs_Qs1.B(HxOverrides.substr(sub,1,null));
				break;
			default:
				if(StringTools.startsWith(sub,",")) {
					sub = HxOverrides.substr(sub,1,null);
				}
				if(StringTools.endsWith(sub,",")) {
					sub = sub.substring(0,sub.length - 1);
				}
				if(sub == "") {
					return null;
				}
				token = nx3_qs_Qs1.N(sub);
			}
			if(token != null) {
				tokens.push(token);
			}
		}
		return tokens;
	}
	,checkParts: function(matrix) {
		var firstLenght = matrix[0] != null ? matrix[0].parts.length : 0;
		var _g = 0;
		while(_g < matrix.length) {
			var b = matrix[_g];
			++_g;
			var partLength = b.parts.length;
			if(partLength != firstLenght) {
				while(partLength < firstLenght) {
					b.parts.push({ part : "pp", voices : [{ voice : "vv", notes : []}]});
					++partLength;
					console.log("src/nx3/qs/QSParser.hx:350:","Inconsistent part numbers: " + firstLenght + " " + partLength + " " + this.str);
				}
				return false;
			}
		}
		return true;
	}
	,createMatrix: function(tokens) {
		var _gthis = this;
		var addMissingParts = function(matrix) {
			if(matrix.length == 0) {
				_gthis.matrixAddBar(matrix);
				_gthis.barIdx = 0;
			}
			while(matrix[_gthis.barIdx].parts.length < _gthis.partIdx + 1) matrix[_gthis.barIdx].parts.push({ part : "ppp", voices : [{ voice : "vvv", notes : []}]});
		};
		var addMissingVoices = function(matrix1) {
			while(matrix1[_gthis.barIdx].parts[_gthis.partIdx].voices.length < _gthis.voiceIdx + 1) matrix1[_gthis.barIdx].parts[_gthis.partIdx].voices.push({ voice : "vvvv", notes : []});
		};
		var matrix2 = [];
		var _g = 0;
		while(_g < tokens.length) {
			var t = tokens[_g];
			++_g;
			switch(t._hx_index) {
			case 0:
				break;
			case 1:
				this.barIdx++;
				this.matrixAddBar(matrix2);
				this.partIdx = -1;
				this.voiceIdx = -1;
				this.noteIdx = 0;
				matrix2[this.barIdx].bar = t.s;
				break;
			case 2:
				this.partIdx++;
				this.voiceIdx = -1;
				this.noteIdx = 0;
				addMissingParts(matrix2);
				matrix2[this.barIdx].parts[this.partIdx].part = t.s;
				break;
			case 3:
				this.voiceIdx++;
				this.noteIdx = 0;
				addMissingVoices(matrix2);
				matrix2[this.barIdx].parts[this.partIdx].voices[this.voiceIdx].voice = t.s;
				break;
			case 4:
				if(this.barIdx == -1) {
					this.barIdx = 0;
					this.matrixAddBar(matrix2);
				}
				if(this.partIdx == -1) {
					this.partIdx = 0;
				}
				addMissingParts(matrix2);
				if(this.voiceIdx == -1) {
					this.voiceIdx = 0;
				}
				addMissingVoices(matrix2);
				matrix2[this.barIdx].parts[this.partIdx].voices[this.voiceIdx].notes.push(t.s);
				this.noteIdx++;
				break;
			}
		}
		try {
			while(nx3_qs_ArrTools.last(nx3_qs_ArrTools.last(nx3_qs_ArrTools.last(matrix2).parts).voices).notes.length == 0) {
				console.log("src/nx3/qs/QSParser.hx:415:","pop");
				matrix2.pop();
			}
		} catch( e ) {
			console.log("src/nx3/qs/QSParser.hx:419:",(e instanceof js__$Boot_HaxeError) ? e.val : e);
		}
		return matrix2;
	}
	,matrixAddBar: function(matrix,bar) {
		if(bar == null) {
			bar = "-";
		}
		matrix.push({ bar : bar, parts : [{ part : "pp", voices : [{ voice : "vv", notes : []}]}]});
	}
	,resetBar: function() {
		this.barGlobals = { time : nx3_ETime.Time4_4};
	}
	,resetPart: function() {
		this.partGlobals = { clef : nx3_EClef.ClefG, key : nx3_EKey.Natural, type : nx3_EPartType.Normal};
	}
	,resetVoice: function() {
		this.voiceGlobals = { dir : nx3_EDirectionUAD.Auto};
	}
	,traceCurrent: function(str) {
		if(str == null) {
			str = "";
		}
		console.log("src/nx3/qs/QSParser.hx:436:","" + this.barIdx + ":" + this.partIdx + ":" + this.voiceIdx + ":" + this.noteIdx + " : " + str);
	}
	,__class__: nx3_qs_QSParser
};
var nx3_qs_StrTools = function() { };
$hxClasses["nx3.qs.StrTools"] = nx3_qs_StrTools;
nx3_qs_StrTools.__name__ = ["nx3","qs","StrTools"];
nx3_qs_StrTools.has = function(s,needle) {
	return s.indexOf(needle) > -1;
};
var nx3_qs_ArrTools = function() { };
$hxClasses["nx3.qs.ArrTools"] = nx3_qs_ArrTools;
nx3_qs_ArrTools.__name__ = ["nx3","qs","ArrTools"];
nx3_qs_ArrTools.last = function(arr) {
	return arr[arr.length - 1];
};
var nx3_qs_QSParserTools = function() { };
$hxClasses["nx3.qs.QSParserTools"] = nx3_qs_QSParserTools;
nx3_qs_QSParserTools.__name__ = ["nx3","qs","QSParserTools"];
nx3_qs_QSParserTools.urlEncode = function(qcode) {
	return StringTools.replace(qcode,"/",nx3_qs_QSParserTools.relaceSlash);
};
nx3_qs_QSParserTools.urlDecode = function(qcode) {
	return StringTools.replace(qcode,nx3_qs_QSParserTools.relaceSlash,"/");
};
nx3_qs_QSParserTools.filterLyrics = function(qcode) {
	if(qcode.indexOf("/lyr") > -1) {
		qcode = HxOverrides.substr(qcode,qcode.indexOf("/lyr") + 4,null);
	}
	return qcode;
};
var nx3_render_ITarget = function() { };
$hxClasses["nx3.render.ITarget"] = nx3_render_ITarget;
nx3_render_ITarget.__name__ = ["nx3","render","ITarget"];
nx3_render_ITarget.prototype = {
	__class__: nx3_render_ITarget
};
var nx3_render_Renderer = function(target,targetX,targetY,interactions) {
	if(targetY == null) {
		targetY = 0;
	}
	if(targetX == null) {
		targetX = 0;
	}
	this.target = target;
	this.targetX = targetX;
	this.targetY = targetY;
	this.scaling = this.target.getScaling();
	this.interactions = interactions != null ? interactions : [];
};
$hxClasses["nx3.render.Renderer"] = nx3_render_Renderer;
nx3_render_Renderer.__name__ = ["nx3","render","Renderer"];
nx3_render_Renderer.prototype = {
	xToUnitX: function(x) {
		return x * (1 / this.scaling.unitX);
	}
	,yToUnitY: function(y) {
		return y * (1 / this.scaling.unitY);
	}
	,renderSystem: function(system,newX,newY) {
		if(newY == null) {
			newY = -1;
		}
		if(newX == null) {
			newX = -1;
		}
		if(newX != -1) {
			this.targetX = newX;
		}
		if(newY != -1) {
			this.targetY = newY;
		}
		this.drawSystem(system);
	}
	,renderScore: function(score,newX,newY,systemwidth) {
		if(systemwidth == null) {
			systemwidth = 400;
		}
		if(newY == null) {
			newY = -1;
		}
		if(newX == null) {
			newX = -1;
		}
		if(newX != -1) {
			this.targetX = newX;
		}
		if(newY != -1) {
			this.targetY = newY;
		}
		this.drawSystems(score.getSystems(systemwidth));
		var tmp = score.getWidth();
		this.target.totalWidth = tmp * this.scaling.unitX;
		var tmp1 = score.getHeight();
		this.target.totalHeight = tmp1 * this.scaling.unitY;
		return { width : score.getWidth() * this.scaling.unitX, height : score.getHeight() * this.scaling.unitY};
	}
	,testText: function() {
		this.target.setFont(nx3_Constants.FONT_TEXT_DEFAULTFORMAT);
		this.target.text(0,0,"ABC abc 123");
		var w = this.target.textwidth("ABC abc 123");
		var h = this.target.textheight("ABC abc 123");
		this.target.rectangle(0,0,new nx3_geom_Rectangle(0,0,w,h),1,16711680);
	}
	,addInteraction: function(interaction) {
		this.interactions.push(interaction);
	}
	,drawSystems: function(systems) {
		var _g = 0;
		while(_g < systems.length) this.drawSystem(systems[_g++]);
	}
	,drawSystemExtras: function(systems,system,nx,ny) {
		if(ny == null) {
			ny = 0;
		}
		if(nx == null) {
			nx = 0;
		}
		var tx = this.targetX + nx * this.scaling.unitX;
		var ty = this.targetY + ny * this.scaling.unitY;
		var _g = 0;
		var _g1 = system.getSystembars();
		while(_g < _g1.length) {
			var systembar = _g1[_g];
			++_g;
			if(systembar == system.getSystembars()[0]) {
				if(system != systems[0]) {
					var idx = systems.indexOf(system);
					var array = (idx <= 0 ? null : systems[idx - 1]).getSystembars();
					var tieconnections = array[array.length - 1].bar.getTieConnections();
					var _g2 = 0;
					while(_g2 < tieconnections.length) {
						var connection = tieconnections[_g2];
						++_g2;
						var fromBarX = systembar.getXPosition();
						var fromNoteX = systembar.getBarMeasurements().getLeftContentMarginXPosition() + connection.from.getXPosition();
						var part = connection.to.getComplex().getPart();
						var party = part.getBar().getParts().indexOf(part) * 20 * this.scaling.unitY;
						var tielevel = 0;
						var _g3 = connection.tie;
						if(_g3._hx_index == 0) {
							tielevel = _g3.level;
						}
						this.drawTie(system,tx,ty + party,new nx3_geom_Rectangle(fromBarX + fromNoteX + -5,connection.level + tielevel,3,1),nx3_EDirectionUD.Down);
					}
				}
			}
			var array1 = system.getSystembars();
			if(systembar == array1[array1.length - 1]) {
				var tieconnections1 = systembar.bar.getTieConnections();
				var _g21 = 0;
				while(_g21 < tieconnections1.length) {
					var connection1 = tieconnections1[_g21];
					++_g21;
					var fromBarX1 = systembar.getXPosition();
					var fromNoteX1 = systembar.getBarMeasurements().getLeftContentMarginXPosition() + connection1.from.getXPosition();
					var toBarX = systembar.getXPosition() + systembar.getBarMeasurements().getTotalWidth();
					var part1 = connection1.to.getComplex().getPart();
					var party1 = part1.getBar().getParts().indexOf(part1) * 20 * this.scaling.unitY;
					var tielevel1 = 0;
					var _g31 = connection1.tie;
					if(_g31._hx_index == 0) {
						tielevel1 = _g31.level;
					}
					this.drawTie(system,tx,ty + party1,new nx3_geom_Rectangle(fromBarX1 + fromNoteX1 + 2,connection1.level + tielevel1,toBarX - (fromBarX1 + fromNoteX1),2),nx3_EDirectionUD.Down);
				}
			} else {
				var tieconnections2 = systembar.bar.getTieConnections();
				var _g22 = 0;
				while(_g22 < tieconnections2.length) {
					var connection2 = tieconnections2[_g22];
					++_g22;
					var fromBarX2 = systembar.getXPosition();
					var nextsystembar = connection2.to.getComplex().getPart().getBar().getSystembar();
					var toBarX1 = nextsystembar.getXPosition();
					var fromNoteX2 = systembar.getBarMeasurements().getLeftContentMarginXPosition() + connection2.from.getXPosition();
					var toNoteX = nextsystembar.getBarMeasurements().getLeftContentMarginXPosition() + connection2.to.getXPosition();
					var part2 = connection2.to.getComplex().getPart();
					var party2 = part2.getBar().getParts().indexOf(part2) * 20 * this.scaling.unitY;
					var tielevel2 = 0;
					var _g32 = connection2.tie;
					if(_g32._hx_index == 0) {
						tielevel2 = _g32.level;
					}
					this.drawTie(system,tx,ty + party2,new nx3_geom_Rectangle(fromBarX2 + fromNoteX2 + 2,connection2.level + tielevel2,toBarX1 + toNoteX - (fromBarX2 + fromNoteX2) - 2 - 2,2),nx3_EDirectionUD.Down);
				}
			}
		}
	}
	,drawSystem: function(system) {
		this.drawBarlines(system,system.getSystembars());
		var _g = 0;
		var _g1 = system.getSystembars();
		while(_g < _g1.length) {
			var systembar = _g1[_g];
			++_g;
			this.drawBarAttributes(system,systembar);
			this.drawBarContent(system,systembar);
		}
	}
	,drawBarlines: function(system,systembars) {
		var tx = this.targetX;
		var ty = this.targetY + system.getY() * this.scaling.unitY;
		systembars[0].bar.getParts()[0].getBar().getParts();
		var partFirstY = system.getPartY(0) * this.scaling.unitY - 4 * this.scaling.unitY;
		var partY = 0.0;
		var _g = 0;
		while(_g < systembars.length) {
			var systembar = systembars[_g];
			++_g;
			var barX = systembar.getX();
			var barWidth = systembar.getBarMeasurements().getTotalWidth();
			var _g1 = 0;
			var _g2 = systembar.bar.getParts();
			while(_g1 < _g2.length) {
				var part = _g2[_g1];
				++_g1;
				var part_getYPosition = system.getPartY(part.getBar().getParts().indexOf(part));
				if(part.npart.type._hx_index == 0) {
					var barlineX = tx + (barX + barWidth) * this.scaling.unitX;
					this.target.line(barlineX,ty + (part_getYPosition - 4) * this.scaling.unitY,barlineX,ty + (part_getYPosition + 4) * this.scaling.unitY,1.4,0);
					partY = part_getYPosition;
				}
			}
		}
		this.target.line(tx,ty + partFirstY,tx,ty + (partY + 4) * this.scaling.unitY,2,0);
	}
	,drawBarAttributes: function(system,systembar) {
		var _g = 0;
		var _g1 = systembar.bar.getParts();
		while(_g < _g1.length) {
			var part = _g1[_g];
			++_g;
			var e = part.npart.type;
			if($hxEnums[e.__enum__].__constructs__[e._hx_index] != "Normal") {
				continue;
			}
			var partIdx = systembar.bar.getParts().indexOf(part);
			var partX = this.targetX + systembar.getX() * this.scaling.unitX;
			var partY = this.targetY + (system.getY() + system.getPartY(partIdx)) * this.scaling.unitY;
			this.target.testLines(partX,partY,systembar.getBarMeasurements().getTotalWidth() * this.scaling.unitX);
			this.drawBarAttributeClef(system,systembar,part);
			this.drawBarAttributeKey(system,systembar,part);
			this.drawBarAttributeTime(system,systembar,part);
		}
	}
	,drawBarAttributeTime: function(system,systembar,part) {
		if(!systembar.barConfig.showTime) {
			return;
		}
		var acttime = systembar.actAttributes.time;
		var tx = this.targetX + systembar.getX() * this.scaling.unitX;
		var ty = this.targetY;
		var timeX = systembar.getBarMeasurements().getTimeXPosition() * this.scaling.unitX;
		var partidx = part.getBar().getParts().indexOf(part);
		var part_getYPosition = system.getY() + system.getPartY(partidx);
		var timeChars = nx3_ETimeUtils.toString(acttime).split("/");
		if(timeChars.length == 2) {
			this.target.shape(timeChars[0],tx + timeX,ty + -3 * this.scaling.unitY + part_getYPosition * this.scaling.unitY,this.getSvgNumber(timeChars[0]));
			this.target.shape(timeChars[1],tx + timeX,ty + this.scaling.unitY + part_getYPosition * this.scaling.unitY,this.getSvgNumber(timeChars[1]));
		} else {
			this.target.shape(timeChars[0],tx + timeX,ty + -1 * this.scaling.unitY + part_getYPosition * this.scaling.unitY,this.getSvgNumber(timeChars[0]));
		}
	}
	,drawBarAttributeKey: function(system,systembar,part) {
		if(!systembar.barConfig.showKey) {
			return;
		}
		var partidx = systembar.bar.getParts().indexOf(part);
		var part_getYPosition = system.getPartY(partidx);
		var actkey = systembar.actAttributes.keys[partidx];
		var tx = this.targetX + systembar.getX() * this.scaling.unitX;
		var ty = this.targetY + system.getY() * this.scaling.unitY;
		var keyX = systembar.getBarMeasurements().getKeyXPosition() * this.scaling.unitX;
		var keyCode = nx3_EKeysTools.getSigncode(actkey);
		var svgXmlstr = keyCode == -1 ? nx3_render_svg_SvgElements.signFlat : nx3_render_svg_SvgElements.signSharp;
		var keyLevels = nx3_EKeysTools.getLevels(actkey,systembar.actAttributes.clefs[partidx]);
		var _g = 0;
		while(_g < keyLevels.length) {
			var keyY = keyLevels[_g++] * this.scaling.unitY;
			this.target.shape(keyCode == -1 ? "Flat" : "Sharp",tx + keyX,ty + keyY + part_getYPosition * this.scaling.unitY,svgXmlstr);
			keyX += 2.4 * this.target.getScaling().unitX;
		}
	}
	,drawBarAttributeClef: function(system,systembar,part) {
		if(!systembar.barConfig.showClef) {
			return;
		}
		var partidx = systembar.bar.getParts().indexOf(part);
		var part_getYPosition = system.getPartY(partidx);
		var actclef = systembar.actAttributes.clefs[partidx];
		var tx = this.targetX + systembar.getX() * this.scaling.unitX;
		var ty = this.targetY + system.getY() * this.scaling.unitY;
		var clefX = systembar.getBarMeasurements().getClefXPosition() * this.scaling.unitX;
		var clefY = this.scaling.unitY;
		var svgXmlstr;
		switch(actclef._hx_index) {
		case 0:
			svgXmlstr = nx3_render_svg_SvgElements.clefG;
			break;
		case 1:
			svgXmlstr = nx3_render_svg_SvgElements.clefF;
			break;
		case 2:
			svgXmlstr = nx3_render_svg_SvgElements.clefC;
			break;
		}
		this.target.shape($hxEnums[actclef.__enum__].__constructs__[actclef._hx_index],tx + clefX,ty + clefY + part_getYPosition * this.scaling.unitY,svgXmlstr);
	}
	,drawBarContent: function(system,systembar) {
		var bar = systembar.bar;
		systembar.getX();
		systembar.getBarMeasurements().getContentXPosition();
		systembar.getBarMeasurements().getContentXPosition();
		bar.getContentwidth();
		var _g = 0;
		var _g1 = bar.getParts();
		while(_g < _g1.length) {
			var _g2 = 0;
			var _g3 = _g1[_g++].getVoices();
			while(_g2 < _g3.length) {
				var _g4 = 0;
				var _g5 = _g3[_g2++].getBeamgroups();
				while(_g4 < _g5.length) this.drawBeamgroup(system,systembar,_g5[_g4++]);
			}
		}
		var _g6 = 0;
		var _g11 = bar.getColumns();
		while(_g6 < _g11.length) {
			var _g21 = 0;
			var _g31 = _g11[_g6++].getComplexes();
			while(_g21 < _g31.length) this.drawComplex(system,systembar,_g31[_g21++]);
		}
	}
	,drawNoteHeads: function(system,systembar,note) {
		var _gthis = this;
		var part = note.getComplex().getPart();
		var part_getYPosition = system.getPartY(part.getBar().getParts().indexOf(part));
		var barx = systembar.getX() + systembar.getBarMeasurements().getContentXPosition();
		var x = this.targetX + (barx + note.getComplex().getXPosition()) * this.target.getScaling().unitX;
		var y = this.targetY + (system.getY() + part_getYPosition) * this.target.getScaling().unitY;
		var _g = note.nnote.type;
		switch(_g._hx_index) {
		case 3:
			var pause = _g.pause;
			var sign = _g.sign;
			var level = _g.level;
			var rect = note.getHeadsRects()[0].clone();
			rect.inflate(-0.8,-0.8);
			var color = pause ? 11184810 : 0;
			this.target.filledellipse(x,y,rect,this.scaling.linesWidth * 5,color,16777215);
			var numSvgStr;
			switch((-level + 21) % 7) {
			case 0:
				numSvgStr = nx3_render_svg_SvgElements.tpl1;
				break;
			case 1:
				numSvgStr = nx3_render_svg_SvgElements.tpl2;
				break;
			case 2:
				numSvgStr = nx3_render_svg_SvgElements.tpl3;
				break;
			case 3:
				numSvgStr = nx3_render_svg_SvgElements.tpl4;
				break;
			case 4:
				numSvgStr = nx3_render_svg_SvgElements.tpl5;
				break;
			case 5:
				numSvgStr = nx3_render_svg_SvgElements.tpl6;
				break;
			case 6:
				numSvgStr = nx3_render_svg_SvgElements.tpl7;
				break;
			default:
				numSvgStr = nx3_render_svg_SvgElements.tpl1;
			}
			if(pause) {
				numSvgStr = StringTools.replace(numSvgStr,"fill:#000000","fill:#AAAAAA");
				console.log("src/nx3/render/Renderer.hx:581:",numSvgStr);
			}
			var tx = this.scaling == nx3_render_scaling_Scaling.NORMAL ? x - this.scaling.unitX * 5 : x - this.scaling.unitX * 5.5;
			var e = note.getVoice().getPart().npart.type;
			var ty = $hxEnums[e.__enum__].__constructs__[e._hx_index] == "Tplchain" ? y + level * 3 * this.scaling.unitY : y;
			ty += this.scaling.unitY * .4;
			this.target.shape(null,tx,ty,numSvgStr,color);
			var signSvgStr;
			if(sign != null) {
				switch(sign._hx_index) {
				case 2:
					signSvgStr = nx3_render_svg_SvgElements.tplArrowDown;
					break;
				case 3:
					signSvgStr = nx3_render_svg_SvgElements.tplArrowUp;
					break;
				default:
					signSvgStr = nx3_render_svg_SvgElements.tplArrowUp;
				}
			} else {
				signSvgStr = "";
			}
			if(signSvgStr != "") {
				this.target.shape(null,tx,ty,signSvgStr,color);
			}
			break;
		case 4:
			var rect1 = note.getHeadsRects()[0];
			this.target.rectangle(x,y,rect1,1,255);
			this.target.text(x + rect1.x * this.scaling.unitX,y + rect1.y * this.scaling.unitY,_g.text);
			break;
		case 7:
			var rect2 = note.getHeadsRects()[0];
			var nextnote = note.getNext();
			var width = nextnote != null ? nextnote.getXPosition() - note.getXPosition() : systembar.getBarMeasurements().getContentWidth() - note.getXPosition();
			this.target.rectangle(x,y,new nx3_geom_Rectangle(rect2.x,rect2.y,width,rect2.height),3,255);
			break;
		default:
			var svginfo = nx3_render_RendererTools.getHeadSvgInfo(note.nnote);
			var hx1 = x;
			var hx2 = x;
			var _g1 = 0;
			var _g11 = note.getHeadsRects();
			while(_g1 < _g11.length) {
				var rect3 = [_g11[_g1]];
				++_g1;
				this.target.shape(null,x + rect3[0].x * this.scaling.unitX,y + (rect3[0].y + svginfo.y) * this.scaling.unitY,svginfo.xmlStr);
				var tmp = this.target;
				var rect4 = rect3[0];
				var tmp1 = 5 * this.scaling.linesWidth;
				var tmp2 = (function(rect5) {
					return function(activityType) {
						var _g2 = 0;
						var _g3 = _gthis.interactions;
						while(_g2 < _g3.length) _g3[_g2++].handleAction(nx3_action_EActionType.NoteAction(activityType,note,nx3_action_EActionInfo.TargetXY(_gthis.target,x + rect5[0].x * _gthis.scaling.unitX,y + rect5[0].y * _gthis.scaling.unitY)));
					};
				})(rect3);
				tmp.interactiveEllipse(x,y,rect4,tmp1,3585587,null,tmp2);
			}
			var i = 0;
			var _g4 = 0;
			var _g12 = note.getHeadsRects();
			while(_g4 < _g12.length) {
				var rect6 = _g12[_g4];
				++_g4;
				var level1 = note.getHeads()[i].nhead.level;
				if(level1 > 5 || level1 < -5) {
					hx1 = Math.min(hx1,x + (rect6.x - 0.6) * this.scaling.unitX);
					hx2 = Math.max(hx2,x + (rect6.x + rect6.width + 0.6) * this.scaling.unitX);
				}
				++i;
			}
			var _g5 = 0;
			var _g13 = note.getHeads();
			while(_g5 < _g13.length) {
				var level2 = _g13[_g5++].nhead.level;
				if(level2 < 5 && level2 > -5) {
					continue;
				}
				var _g31 = level2 < 0 ? level2 : 5;
				var _g21 = level2 < 0 ? -4 : level2 + 1;
				while(_g31 < _g21) {
					var l = _g31++;
					if((l + 100) % 2 == 1) {
						continue;
					}
					var hy = y + l * this.scaling.unitY;
					this.target.line(hx1,hy,hx2,hy,1,0);
				}
			}
		}
	}
	,drawComplex: function(system,systembar,complex) {
		if(complex == null) {
			return;
		}
		var _g = 0;
		var _g1 = complex.getNotes();
		while(_g < _g1.length) this.drawNoteHeads(system,systembar,_g1[_g++]);
		this.drawComplexSigns(system,systembar,complex);
		this.drawComplexDots(system,systembar,complex);
		this.drawComplexTies(system,systembar,complex);
	}
	,drawComplexTies: function(system,systembar,complex,nx,ny) {
		if(ny == null) {
			ny = 0;
		}
		if(nx == null) {
			nx = 0;
		}
		var part = complex.getPart();
		var part_getYPosition = system.getPartY(part.getBar().getParts().indexOf(part));
		var barx = systembar.getX() + systembar.getBarMeasurements().getContentXPosition();
		var x = this.targetX + (barx + complex.getXPosition()) * this.target.getScaling().unitX;
		var y = this.targetY + (system.getY() + part_getYPosition) * this.target.getScaling().unitY;
		var _g = 0;
		var _g1 = complex.getTieinfos();
		while(_g < _g1.length) {
			var info = _g1[_g];
			++_g;
			var rect = info.rect;
			var direction = info.direction;
			if(info.target != null) {
				var targetcomplex = info.target.getNote().getComplex();
				var thisx = complex.getXPosition() + rect.x;
				var targetAllRect = nx3_geom_RectanglesTools.unionAll(targetcomplex.getAllRects());
				rect.width = targetcomplex.getXPosition() + targetAllRect.x - thisx - 0.5;
				this.drawTie(system,x + .5 * this.scaling.unitX,y,rect,direction);
			} else {
				rect.width = 6;
			}
		}
	}
	,drawComplexDots: function(system,systembar,complex,nx,ny) {
		if(ny == null) {
			ny = 0;
		}
		if(nx == null) {
			nx = 0;
		}
		var _g = 0;
		var _g1 = complex.getDotRects();
		while(_g < _g1.length) {
			var r = _g1[_g++];
			var part = complex.getPart();
			var part_getYPosition = system.getPartY(part.getBar().getParts().indexOf(part));
			var barx = systembar.getX() + systembar.getBarMeasurements().getContentXPosition();
			var x = this.targetX + (barx + complex.getXPosition()) * this.target.getScaling().unitX;
			var y = this.targetY + (system.getY() + part_getYPosition) * this.target.getScaling().unitY;
			var crect = r.clone();
			var ddot = crect.width == 3.0;
			crect.offset(0.9,0.2);
			crect.width = 0.7;
			crect.height = 0.6;
			this.target.filledellipse(x,y,crect,0,0,0);
			if(!ddot) {
				continue;
			}
			crect.offset(1.3,0);
			this.target.filledellipse(x,y,crect,0,0,0);
		}
	}
	,drawComplexSigns: function(system,systembar,complex,nx,ny) {
		if(ny == null) {
			ny = 0;
		}
		if(nx == null) {
			nx = 0;
		}
		var part = complex.getPart();
		var part_getYPosition = system.getPartY(part.getBar().getParts().indexOf(part));
		var barx = systembar.getX() + systembar.getBarMeasurements().getContentXPosition();
		var x = this.targetX + (barx + complex.getXPosition()) * this.target.getScaling().unitX;
		var y = this.targetY + (system.getY() + part_getYPosition) * this.target.getScaling().unitY;
		var signs = complex.getVisibleSigns();
		var rects = complex.getSignsRects();
		var _g1 = 0;
		var _g = signs.length;
		while(_g1 < _g) {
			var i = _g1++;
			var rect = rects[i];
			var xmlStr;
			switch(signs[i].sign._hx_index) {
			case 1:
				xmlStr = nx3_render_svg_SvgElements.signNatural;
				break;
			case 2:
				xmlStr = nx3_render_svg_SvgElements.signFlat;
				break;
			case 3:
				xmlStr = nx3_render_svg_SvgElements.signSharp;
				break;
			default:
				xmlStr = null;
			}
			if(xmlStr != null) {
				this.target.shape(null,x + rect.x * this.scaling.unitX,y + (rect.y + 2) * this.scaling.unitY,xmlStr);
			}
		}
	}
	,drawBeamgroup: function(system,systembar,beamgroup) {
		var frame = beamgroup.getFrame();
		if(frame == null) {
			return;
		}
		var barx = systembar.getX() + systembar.getBarMeasurements().getContentXPosition();
		var tx = this.targetX + barx * this.scaling.unitX;
		var ty = this.targetY + system.getY() * this.scaling.unitY;
		var part = beamgroup.getPVoice().getPart();
		var rightY = ty + system.getPartY(part.getBar().getParts().indexOf(part)) * this.target.getScaling().unitY;
		beamgroup.getDirection();
		var firstnote = beamgroup.pnotes[0];
		var leftX = beamgroup.getNotesStemXPositions()[0] * this.scaling.unitX;
		var leftTipY = frame.leftTipY * this.scaling.unitY;
		this.target.line(tx + leftX,rightY + frame.leftInnerY * this.scaling.unitY,tx + leftX,rightY + leftTipY,1,0);
		if(beamgroup.pnotes.length == 1) {
			if(nx3_ENoteValTools.beaminglevel(firstnote.nnote.value) > 0) {
				if(beamgroup.getDirection() == nx3_EDirectionUD.Up) {
					this.target.shape(nx3_ENoteValTools.beaminglevel(firstnote.nnote.value) == 2 ? "Flag16Up" : "Flag8Up",tx + leftX - 0.6 * this.scaling.unitX,rightY + this.scaling.unitY + leftTipY,nx3_ENoteValTools.beaminglevel(firstnote.nnote.value) == 2 ? nx3_render_svg_SvgElements.flagUp16 : nx3_render_svg_SvgElements.flagUp8,0);
				} else {
					this.target.shape(nx3_ENoteValTools.beaminglevel(firstnote.nnote.value) == 2 ? "Flag16Down" : "Flag8Down",tx + leftX - 0.6 * this.scaling.unitX,rightY + -3 * this.scaling.unitY + leftTipY,nx3_ENoteValTools.beaminglevel(firstnote.nnote.value) == 2 ? nx3_render_svg_SvgElements.flagDown16 : nx3_render_svg_SvgElements.flagDown8,0);
				}
			}
		}
		if(beamgroup.pnotes.length < 2) {
			return;
		}
		var storeY = [rightY + leftTipY];
		var storeX = [tx + leftX];
		var array = beamgroup.getNotesStemXPositions();
		var rightX = array[array.length - 1] * this.scaling.unitX;
		var rightTipY = frame.rightTipY * this.scaling.unitY;
		this.target.line(tx + rightX,rightY + frame.rightInnerY * this.scaling.unitY,tx + rightX,rightY + rightTipY,1,0);
		var beamh = 0.95 * this.scaling.unitY;
		beamh = beamgroup.getDirection() == nx3_EDirectionUD.Up ? -beamh : beamh;
		this.target.parallellogram(tx + leftX,rightY + leftTipY - beamh,tx + rightX,rightY + rightTipY - beamh,beamh,0,0,0);
		if(beamgroup.pnotes.length > 2) {
			var _g1 = 1;
			var _g = frame.outerLevels.length - 1;
			while(_g1 < _g) {
				var i = _g1++;
				var midX = beamgroup.getNotesStemXPositions()[i] * this.scaling.unitX;
				var midTipY = leftTipY + (rightTipY - leftTipY) * ((midX - leftX) / (rightX - leftX));
				this.target.line(tx + midX,rightY + frame.innerLevels[i] * this.scaling.unitY,tx + midX,rightY + midTipY,1,0);
				storeY.push(rightY + midTipY);
				storeX.push(tx + midX);
			}
		}
		storeY.push(rightY + rightTipY);
		storeX.push(tx + rightX);
		var idx = 0;
		var beamh1 = 0.95 * this.scaling.unitY;
		var _g2 = 0;
		var _g11 = beamgroup.getFrame().beamflags;
		while(_g2 < _g11.length) {
			var flagtype = _g11[_g2++];
			var adjustY = beamgroup.getDirection() == nx3_EDirectionUD.Up ? 2.1 : -2.1;
			adjustY *= this.scaling.unitY;
			var currX = storeX[idx];
			var currY = storeY[idx] + adjustY;
			var nextX = storeX[idx + 1];
			var nextY = storeY[idx + 1] + adjustY;
			var factor = 2.2 * this.scaling.unitX;
			switch(flagtype._hx_index) {
			case 1:
				this.target.parallellogram(currX,currY - beamh1 / 2,currX + factor,factor / (nextX - currX) * (nextY - currY) + currY - beamh1 / 2,beamh1,0,0,0);
				break;
			case 2:
				var startX = nextX - factor;
				this.target.parallellogram(startX,-((nextX - startX) / (nextX - currX)) * (nextY - currY) + nextY - beamh1 / 2,nextX,nextY - beamh1 / 2,beamh1,0,0,0);
				break;
			case 3:
				this.target.parallellogram(currX,currY - beamh1 / 2,nextX,nextY - beamh1 / 2,beamh1,0,0,0);
				break;
			default:
			}
			++idx;
		}
	}
	,drawBeamgroupX: function(system,beamgroup,nx,ny) {
		if(ny == null) {
			ny = 0;
		}
		if(nx == null) {
			nx = 0;
		}
		var frame = beamgroup.getFrame();
		if(frame == null) {
			return;
		}
		var part = beamgroup.getPVoice().getPart();
		var part_getYPosition = part.getBar().getParts().indexOf(part) * 20;
		var rightY = this.targetY + part_getYPosition * this.target.getScaling().unitY;
		beamgroup.getDirection();
		var firstnote = beamgroup.pnotes[0];
		var leftX = beamgroup.getNotesStemXPositions()[0] * this.scaling.unitX;
		var leftTipY = frame.leftTipY * this.scaling.unitY;
		this.target.line(this.targetX + leftX,rightY + frame.leftInnerY * this.scaling.unitY,this.targetX + leftX,rightY + leftTipY,1,0);
		if(beamgroup.pnotes.length == 1) {
			if(nx3_ENoteValTools.beaminglevel(firstnote.nnote.value) > 0) {
				if(beamgroup.getDirection() == nx3_EDirectionUD.Up) {
					this.target.shape(null,this.targetX + leftX - 0.6 * this.scaling.unitX,rightY + this.scaling.unitY + leftTipY,nx3_ENoteValTools.beaminglevel(firstnote.nnote.value) == 2 ? nx3_render_svg_SvgElements.flagUp16 : nx3_render_svg_SvgElements.flagUp8,0);
				} else {
					this.target.shape(null,this.targetX + leftX - 0.6 * this.scaling.unitX,rightY + -3 * this.scaling.unitY + leftTipY,nx3_ENoteValTools.beaminglevel(firstnote.nnote.value) == 2 ? nx3_render_svg_SvgElements.flagDown16 : nx3_render_svg_SvgElements.flagDown8,0);
				}
			}
		}
		if(beamgroup.pnotes.length < 2) {
			return;
		}
		var storeY = [rightY + leftTipY];
		var storeX = [this.targetX + leftX];
		var array = beamgroup.getNotesStemXPositions();
		var rightX = array[array.length - 1] * this.scaling.unitX;
		var rightTipY = frame.rightTipY * this.scaling.unitY;
		this.target.line(this.targetX + rightX,rightY + frame.rightInnerY * this.scaling.unitY,this.targetX + rightX,rightY + rightTipY,1,0);
		var beamh = 0.95 * this.scaling.unitY;
		beamh = beamgroup.getDirection() == nx3_EDirectionUD.Up ? -beamh : beamh;
		this.target.parallellogram(this.targetX + leftX,rightY + leftTipY - beamh,this.targetX + rightX,rightY + rightTipY - beamh,beamh,0,0,0);
		if(beamgroup.pnotes.length > 2) {
			var _g1 = 1;
			var _g = frame.outerLevels.length - 1;
			while(_g1 < _g) {
				var i = _g1++;
				var midX = beamgroup.getNotesStemXPositions()[i] * this.scaling.unitX;
				var midTipY = leftTipY + (rightTipY - leftTipY) * ((midX - leftX) / (rightX - leftX));
				this.target.line(this.targetX + midX,rightY + frame.innerLevels[i] * this.scaling.unitY,this.targetX + midX,rightY + midTipY,1,0);
				storeY.push(rightY + midTipY);
				storeX.push(this.targetX + midX);
			}
		}
		storeY.push(rightY + rightTipY);
		storeX.push(this.targetX + rightX);
		var idx = 0;
		var beamh1 = 0.95 * this.scaling.unitY;
		var _g2 = 0;
		var _g11 = beamgroup.getFrame().beamflags;
		while(_g2 < _g11.length) {
			var flagtype = _g11[_g2++];
			var adjustY = beamgroup.getDirection() == nx3_EDirectionUD.Up ? 2.1 : -2.1;
			adjustY *= this.scaling.unitY;
			var currX = storeX[idx];
			var currY = storeY[idx] + adjustY;
			var nextX = storeX[idx + 1];
			var nextY = storeY[idx + 1] + adjustY;
			var factor = 2.2 * this.scaling.unitX;
			switch(flagtype._hx_index) {
			case 1:
				this.target.parallellogram(currX,currY - beamh1 / 2,currX + factor,factor / (nextX - currX) * (nextY - currY) + currY - beamh1 / 2,beamh1,0,0,0);
				break;
			case 2:
				var startX = nextX - factor;
				this.target.parallellogram(startX,-((nextX - startX) / (nextX - currX)) * (nextY - currY) + nextY - beamh1 / 2,nextX,nextY - beamh1 / 2,beamh1,0,0,0);
				break;
			case 3:
				this.target.parallellogram(currX,currY - beamh1 / 2,nextX,nextY - beamh1 / 2,beamh1,0,0,0);
				break;
			default:
			}
			++idx;
		}
	}
	,drawTie: function(system,x,y,rect,direction) {
		var a1 = null;
		var c1 = null;
		var c2 = null;
		var a2 = null;
		this.target.filledrectangle(x,y,rect);
		if(direction == nx3_EDirectionUD.Down) {
			a1 = { x : rect.x, y : rect.y};
			c1 = { x : rect.x + 1, y : rect.get_bottom()};
			c2 = { x : rect.get_right() - 1, y : rect.get_bottom()};
			a2 = { x : rect.get_right(), y : rect.y};
		} else {
			a1 = { x : rect.x, y : rect.get_bottom()};
			c1 = { x : rect.x + 1, y : rect.y};
			c2 = { x : rect.get_right() - 1, y : rect.y};
			a2 = { x : rect.get_right(), y : rect.get_bottom()};
		}
		var coords1 = nx3_geom_BezieerTool.bezieerCoordinates(a1,c1,c2,a2);
		var thickness = 0.06 * this.scaling.unitY;
		if(direction == nx3_EDirectionUD.Down) {
			c1 = { x : rect.x, y : rect.get_bottom() - thickness};
			c2 = { x : rect.get_right(), y : rect.get_bottom() - thickness};
		} else {
			c1 = { x : rect.x, y : rect.y + thickness};
			c2 = { x : rect.get_right(), y : rect.y + thickness};
		}
		var coords2 = nx3_geom_BezieerTool.bezieerCoordinates(a2,c2,c1,a1);
		coords1.shift();
		var coords = coords1.concat(coords2);
		this.target.polyfill(x,y,coords);
	}
	,getSvgNumber: function(char) {
		switch(char) {
		case "0":
			return nx3_render_svg_SvgElements.time0;
		case "1":
			return nx3_render_svg_SvgElements.time1;
		case "2":
			return nx3_render_svg_SvgElements.time2;
		case "3":
			return nx3_render_svg_SvgElements.time3;
		case "4":
			return nx3_render_svg_SvgElements.time4;
		case "5":
			return nx3_render_svg_SvgElements.time5;
		case "6":
			return nx3_render_svg_SvgElements.time6;
		case "7":
			return nx3_render_svg_SvgElements.time7;
		case "8":
			return nx3_render_svg_SvgElements.time8;
		case "9":
			return nx3_render_svg_SvgElements.time9;
		case "AllaBreve":
			return nx3_render_svg_SvgElements.timeAllabreve;
		case "C":
			return nx3_render_svg_SvgElements.timeCommon;
		default:
			return "";
		}
	}
	,getTarget: function() {
		return this.target;
	}
	,interactiveComplex: function(system,complex,nx,ny) {
		if(complex == null) {
			return;
		}
		var part = complex.getPart();
		part.getBar().getParts();
		complex.getXPosition();
		this.target.getScaling();
		this.target.getScaling();
		var _g = 0;
		var _g1 = complex.getNotes();
		while(_g < _g1.length) this.interactiveNote(system,_g1[_g++],nx,ny);
	}
	,interactiveNote: function(system,note,nx,ny) {
		var part = note.getComplex().getPart();
		part.getBar().getParts();
		note.getComplex().getXPosition();
		this.target.getScaling();
		this.target.getScaling();
	}
	,__class__: nx3_render_Renderer
};
var nx3_render_RendererTools = function() { };
$hxClasses["nx3.render.RendererTools"] = nx3_render_RendererTools;
nx3_render_RendererTools.__name__ = ["nx3","render","RendererTools"];
nx3_render_RendererTools.getHeadSvgInfo = function(nnote) {
	switch(nnote.type._hx_index) {
	case 0:
		switch(nx3_ENoteValTools.head(nnote.value)._hx_index) {
		case 1:
			return { xmlStr : nx3_render_svg_SvgElements.noteWhite, y : 0};
		case 2:
			return { xmlStr : nx3_render_svg_SvgElements.noteWhole, y : 0};
		default:
			return { xmlStr : nx3_render_svg_SvgElements.noteBlack, y : 0};
		}
		break;
	case 1:
		switch(nx3_ENoteValTools.beaminglevel(nnote.value)) {
		case 0:
			switch(nx3_ENoteValTools.head(nnote.value)._hx_index) {
			case 0:
				return { xmlStr : nx3_render_svg_SvgElements.pauseNv4, y : 2};
			case 1:
				return { xmlStr : nx3_render_svg_SvgElements.pauseNv2, y : 2};
			case 2:
				return { xmlStr : nx3_render_svg_SvgElements.pauseNv1, y : 2};
			}
			break;
		case 1:
			return { xmlStr : nx3_render_svg_SvgElements.pauseNv8, y : 2};
		case 2:
			return { xmlStr : nx3_render_svg_SvgElements.pauseNv16, y : 2};
		case 3:
			return { xmlStr : nx3_render_svg_SvgElements.pauseNv16, y : 2};
		default:
			return { xmlStr : nx3_render_svg_SvgElements.clefG, y : 2};
		}
		break;
	default:
		return { xmlStr : nx3_render_svg_SvgElements.clefG, y : 2};
	}
};
var nx3_render_TargetSvgXml = function(svgId,scaling) {
	this.svgId = svgId;
	this.svg = Xml.createElement("svg");
	this.svg.set("id",svgId);
	this.scaling = scaling != null ? scaling : nx3_render_scaling_Scaling.NORMAL;
	this.font = nx3_Constants.FONT_TEXT_DEFAULTFORMAT;
};
$hxClasses["nx3.render.TargetSvgXml"] = nx3_render_TargetSvgXml;
nx3_render_TargetSvgXml.__name__ = ["nx3","render","TargetSvgXml"];
nx3_render_TargetSvgXml.__interfaces__ = [nx3_render_ITarget];
nx3_render_TargetSvgXml.prototype = {
	getXml: function() {
		this.svg.set("width",Std.string(this.totalWidth));
		this.svg.set("height",Std.string(this.totalHeight + nx3_render_TargetSvgXml.SVG_EXTRA_HEIGHT));
		return this.svg;
	}
	,getScaling: function() {
		return this.scaling;
	}
	,testLines: function(x,y,width) {
		var _g = -2;
		while(_g < 3) {
			var cy = y + _g++ * this.scaling.space;
			this.line(x,cy,x + width,cy,this.scaling.linesWidth,0);
		}
	}
	,rect: function(x,y,rect,lineWidth,lineColor) {
	}
	,rectangle: function(x,y,rect,lineWidth,lineColor) {
		if(lineColor == null) {
			lineColor = 0;
		}
		if(lineWidth == null) {
			lineWidth = 1;
		}
		var r = Xml.createElement("rect");
		r.set("x",Std.string(x + rect.x * this.scaling.unitX));
		r.set("y",Std.string(y + rect.y * this.scaling.unitY));
		r.set("width",Std.string(rect.width * this.scaling.unitX));
		r.set("height",Std.string(rect.height * this.scaling.unitY));
		r.set("fill","none");
		r.set("stroke","#eee");
		r.set("stroke-width",Std.string(lineWidth * this.scaling.linesWidth));
		this.svg.addChild(r);
	}
	,rectangles: function(x,y,rects,lineWidth,lineColor) {
	}
	,filledrectangle: function(x,y,rect,lineWidth,lineColor,fillColor) {
	}
	,filledellipse: function(x,y,rect,lineWidth,lineColor,fillColor) {
		var r = Xml.createElement("ellipse");
		r.set("cx",Std.string(x + (rect.x + rect.width / 2) * this.scaling.unitX));
		r.set("cy",Std.string(y + (rect.y + rect.height / 2) * this.scaling.unitY));
		r.set("rx",Std.string(rect.width / 2 * this.scaling.unitX));
		r.set("ry",Std.string(rect.height / 2 * this.scaling.unitY));
		r.set("fill","#000");
		r.set("stroke","#000");
		r.set("stroke-width",Std.string(lineWidth * this.scaling.linesWidth));
		r.set("style","fill: #000; stroke: #000; stroke-width: " + lineWidth * this.scaling.linesWidth + "; cursor:pointer;");
		this.svg.addChild(r);
	}
	,line: function(x,y,x2,y2,lineWidth,lineColor) {
		if(lineColor == null) {
			lineColor = 16711680;
		}
		if(lineWidth == null) {
			lineWidth = 1;
		}
		var el = Xml.createElement("line");
		el.set("x1",x == null ? "null" : "" + x);
		el.set("y1",y == null ? "null" : "" + y);
		el.set("x2",x2 == null ? "null" : "" + x2);
		el.set("y2",y2 == null ? "null" : "" + y2);
		el.set("stroke","#000");
		el.set("style","stroke-width:" + lineWidth * this.scaling.linesWidth);
		this.svg.addChild(el);
	}
	,shape: function(shapeId,x,y,xmlStr,fillColor) {
		if(fillColor == null) {
			fillColor = 0;
		}
		var xml = Xml.parse(xmlStr);
		var _this = xml.firstElement();
		if(_this.nodeType != Xml.Document && _this.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + _this.nodeType);
		}
		var _this1 = _this.children[0];
		if(_this1.nodeType != Xml.Document && _this1.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + _this1.nodeType);
		}
		var _this2 = _this1.children[0];
		if(_this2.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + _this2.nodeType);
		}
		var elementTag = _this2.nodeName.toLowerCase();
		var element = Xml.createElement("dummy");
		if(elementTag == "path") {
			element = Xml.createElement("path");
			var _this3 = xml.firstElement();
			if(_this3.nodeType != Xml.Document && _this3.nodeType != Xml.Element) {
				throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + _this3.nodeType);
			}
			var _this4 = _this3.children[0];
			if(_this4.nodeType != Xml.Document && _this4.nodeType != Xml.Element) {
				throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + _this4.nodeType);
			}
			element.set("d",_this4.children[0].get("d"));
			element.set("stroke","none");
			element.set("fill","#000");
		} else if(elementTag == "rect") {
			var _this5 = xml.firstElement();
			if(_this5.nodeType != Xml.Document && _this5.nodeType != Xml.Element) {
				throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + _this5.nodeType);
			}
			var _this6 = _this5.children[0];
			if(_this6.nodeType != Xml.Document && _this6.nodeType != Xml.Element) {
				throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + _this6.nodeType);
			}
			var rectXml = _this6.children[0];
			element = Xml.createElement("rect");
			element.set("x",rectXml.get("x"));
			element.set("y",rectXml.get("y"));
			element.set("width",rectXml.get("width"));
			element.set("height",rectXml.get("height"));
		} else {
			throw new js__$Boot_HaxeError("Shape element " + elementTag + " - UNIMPLEMENTED");
		}
		var sc = this.scaling.svgScale;
		element.set("transform","matrix(" + sc + ",0,0," + sc + ",0,0)");
		var svg = Xml.createElement("svg");
		svg.set("x",Std.string(x + this.scaling.svgX));
		svg.set("y",Std.string(y + this.scaling.svgY));
		svg.addChild(element);
		this.svg.addChild(svg);
	}
	,parallellogram: function(x,y,x2,y2,pheight,lineWidth,lineColor,fillColor) {
		var el = Xml.createElement("path");
		el.set("d","M " + x + " " + y + " L " + x2 + " " + y2 + "  L " + x2 + " " + (y2 + pheight) + "  L " + x + "  " + (y + pheight) + "  L " + x + " " + y);
		el.set("fill","#000");
		el.set("stroke","#000");
		el.set("style","stroke-width:" + lineWidth * this.scaling.linesWidth);
		this.svg.addChild(el);
	}
	,clear: function() {
		this.svg = Xml.createElement("svg");
		this.svg.set("id",this.svgId);
	}
	,polyline: function(x,y,coordinates,lineWidth,lineColor) {
		if(lineColor == null) {
			lineColor = 0;
		}
		if(lineWidth == null) {
			lineWidth = 1;
		}
	}
	,polyfill: function(x,y,coordinates,lineWidth,lineColor,fillColor) {
		if(fillColor == null) {
			fillColor = 255;
		}
		if(lineColor == null) {
			lineColor = 0;
		}
		if(lineWidth == null) {
			lineWidth = 1;
		}
		console.log("src/nx3/render/TargetSvgXml.hx:192:","Polyfill: " + x + " " + y);
		var coord = coordinates.shift();
		var path = "M " + Std.string(coord.x * this.scaling.unitX + x) + " " + Std.string(coord.y * this.scaling.unitY + y) + " ";
		var _g = 0;
		while(_g < coordinates.length) {
			var coord1 = coordinates[_g];
			++_g;
			path += "L " + Std.string(coord1.x * this.scaling.unitX + x) + " " + Std.string(coord1.y * this.scaling.unitY + y) + " ";
		}
		console.log("src/nx3/render/TargetSvgXml.hx:203:",path);
		var el = Xml.createElement("path");
		el.set("d",path);
		el.set("fill","#000");
		el.set("stroke","#000");
		el.set("style","stroke-width:" + lineWidth * this.scaling.linesWidth);
		this.svg.addChild(el);
	}
	,sline: function(x,y,start,end,lineWidth,lineColor) {
	}
	,interactiveEllipse: function(x,y,rect,lineWidth,lineColor,fillColor,cb) {
	}
	,scaleRect: function(rect,inflateX,inflateY) {
		if(inflateY == null) {
			inflateY = 0;
		}
		if(inflateX == null) {
			inflateX = 0;
		}
		return null;
	}
	,tooltipShow: function(rect,text) {
	}
	,tooltipHide: function() {
	}
	,setFont: function(font) {
		this.font = font;
	}
	,text: function(x,y,text) {
		x += 4 * this.scaling.fontScaling;
		y += (-3 + this.font.size) * this.scaling.fontScaling;
		var txt = Xml.createElement("text");
		txt.set("x",x == null ? "null" : "" + x);
		txt.set("y",y == null ? "null" : "" + y);
		txt.set("font-size",Std.string(this.font.size * this.scaling.fontScaling));
		txt.set("font-family",Std.string(this.font.name));
		txt.addChild(Xml.createPCData(text));
		this.svg.addChild(txt);
	}
	,textwidth: function(text) {
		if(this.context == null) {
			var canvas = window.document.getElementById("CanvasTextMeasurement");
			if(canvas == null) {
				console.log("src/nx3/render/TargetSvgXml.hx:300:","creating a canvas for text measurement");
				canvas = window.document.createElement("canvas");
				canvas.id = "CanvasTextMeasurement";
			}
			this.context = canvas.getContext("2d",null);
		}
		this.context.font = "" + this.font.size * this.scaling.fontScaling + "px " + this.font.name;
		return this.context.measureText(text).width / this.scaling.unitX;
	}
	,textheight: function(text) {
		return this.font.size / 3.8;
	}
	,addToDomElement: function(elementId) {
		var tmp = haxe_xml_Printer.print(this.getXml());
		window.document.getElementById(elementId).innerHTML = tmp;
	}
	,__class__: nx3_render_TargetSvgXml
};
var nx3_render_scaling_Scaling = function() { };
$hxClasses["nx3.render.scaling.Scaling"] = nx3_render_scaling_Scaling;
nx3_render_scaling_Scaling.__name__ = ["nx3","render","scaling","Scaling"];
nx3_render_scaling_Scaling.scaleRect = function(scaling,rect) {
	return new nx3_geom_Rectangle(rect.x * scaling.unitX,rect.y * scaling.unitY,rect.width * scaling.unitX,rect.height * scaling.unitY);
};
var nx3_render_svg_SvgElements = function() { };
$hxClasses["nx3.render.svg.SvgElements"] = nx3_render_svg_SvgElements;
nx3_render_svg_SvgElements.__name__ = ["nx3","render","svg","SvgElements"];
var nx3_xml_BarXML = function() { };
$hxClasses["nx3.xml.BarXML"] = nx3_xml_BarXML;
nx3_xml_BarXML.__name__ = ["nx3","xml","BarXML"];
nx3_xml_BarXML.copy = function(bar) {
	return nx3_xml_BarXML.fromXmlStr(haxe_xml_Printer.print(nx3_xml_BarXML.toXml(bar)));
};
nx3_xml_BarXML.toXml = function(bar) {
	var xml = Xml.createElement("bar");
	var _g = 0;
	var _g1 = bar.nparts;
	while(_g < _g1.length) xml.addChild(nx3_xml_PartXML.toXml(_g1[_g++]));
	if(bar.type._hx_index != 0) {
		xml.set("type",Std.string(bar.type));
	}
	if(bar.time != null) {
		if(bar.time._hx_index != 5) {
			xml.set("time",Std.string(nx3_ETimeUtils.toString(bar.time)));
		}
	}
	if(bar.timeDisplay._hx_index != 1) {
		xml.set("timedisplay",Std.string(bar.timeDisplay));
	}
	return xml;
};
nx3_xml_BarXML.fromXmlStr = function(xmlStr) {
	var xml = Xml.parse(xmlStr).firstElement();
	var parts = [];
	var p = xml.elements();
	while(p.hasNext()) parts.push(nx3_xml_PartXML.fromXmlStr(haxe_xml_Printer.print(p.next())));
	var typeStr = xml.get("type");
	var type = typeStr == null ? nx3_EBarType.Normal : cx_EnumTools.createFromString(nx3_EBarType,typeStr);
	var time = null;
	var timeStr = xml.get("time");
	if(timeStr != null) {
		time = nx3_ETimeUtils.fromString(timeStr);
	}
	var timeDisplayStr = xml.get("timedisplay");
	return new nx3_NBar(parts,type,time,timeDisplayStr == null ? nx3_EDisplayALN.Layout : cx_EnumTools.createFromString(nx3_EDisplayALN,timeDisplayStr));
};
nx3_xml_BarXML.test = function(item) {
	var str = haxe_xml_Printer.print(nx3_xml_BarXML.toXml(item));
	var str2 = haxe_xml_Printer.print(nx3_xml_BarXML.toXml(nx3_xml_BarXML.fromXmlStr(str)));
	console.log("src/nx3/xml/BarXML.hx:102:",str);
	console.log("src/nx3/xml/BarXML.hx:103:",str2);
	return str == str2;
};
var nx3_xml_HeadXML = function() { };
$hxClasses["nx3.xml.HeadXML"] = nx3_xml_HeadXML;
nx3_xml_HeadXML.__name__ = ["nx3","xml","HeadXML"];
nx3_xml_HeadXML.toXml = function(head) {
	var xml = Xml.createElement(nx3_xml_HeadXML.XHEAD);
	switch(head.type._hx_index) {
	case 1:case 2:
		xml.set(nx3_xml_HeadXML.XHEAD_TYPE,Std.string(head.type));
		break;
	default:
	}
	xml.set(nx3_xml_HeadXML.XHEAD_LEVEL,head.level == null ? "null" : "" + head.level);
	if(head.sign != nx3_ESign.None) {
		xml.set(nx3_xml_HeadXML.XHEAD_SIGN,Std.string(head.sign));
	}
	if(head.tie != null) {
		var _g1 = head.tie;
		switch(_g1._hx_index) {
		case 0:
			var level = _g1.level;
			var direction = _g1.direction;
			xml.set(nx3_xml_HeadXML.XHEAD_TIE,"true");
			if(level != 0) {
				xml.set(nx3_xml_HeadXML.XHEAD_TIE_LEVEL,level == null ? "null" : "" + level);
			}
			if(direction != nx3_EDirectionUAD.Auto) {
				xml.set(nx3_xml_HeadXML.XHEAD_TIE_DIRECTION,Std.string($hxEnums[direction.__enum__].__constructs__[direction._hx_index]));
			}
			break;
		case 1:
			var levelLeft = _g1.levelLeft;
			xml.set(nx3_xml_HeadXML.XHEAD_TIE,levelLeft == null ? "null" : "" + levelLeft);
			break;
		}
	}
	if(head.tieTo != null) {
		switch(head.tieTo._hx_index) {
		case 0:
			xml.set(nx3_xml_HeadXML.XHEAD_TIETO,Std.string(head.tieTo));
			break;
		case 1:
			xml.set(nx3_xml_HeadXML.XHEAD_TIETO,Std.string(head.tieTo));
			break;
		}
	}
	return xml;
};
nx3_xml_HeadXML.fromXmlStr = function(xmlStr) {
	var xml = Xml.parse(xmlStr).firstElement();
	var type = cx_EnumTools.createFromString(nx3_EHeadType,xml.get(nx3_xml_HeadXML.XHEAD_TYPE));
	var level = Std.parseInt(xml.get(nx3_xml_HeadXML.XHEAD_LEVEL));
	var sign = cx_EnumTools.createFromString(nx3_ESign,xml.get(nx3_xml_HeadXML.XHEAD_SIGN));
	var tie = null;
	if(xml.get(nx3_xml_HeadXML.XHEAD_TIE) != null) {
		tie = nx3_ETie.Tie(xml.get(nx3_xml_HeadXML.XHEAD_TIE_DIRECTION) == null ? nx3_EDirectionUAD.Auto : nx3_EDirectionUAD.Up,xml.get(nx3_xml_HeadXML.XHEAD_TIE_LEVEL) == null ? 0 : Std.parseInt(xml.get(nx3_xml_HeadXML.XHEAD_TIE_LEVEL)));
	}
	return new nx3_NHead(type,level,sign,tie,cx_EnumTools.createFromString(nx3_ETie,xml.get(nx3_xml_HeadXML.XHEAD_TIETO)));
};
nx3_xml_HeadXML.test = function(item) {
	var str = haxe_xml_Printer.print(nx3_xml_HeadXML.toXml(item));
	var str2 = haxe_xml_Printer.print(nx3_xml_HeadXML.toXml(nx3_xml_HeadXML.fromXmlStr(str)));
	console.log("src/nx3/xml/HeadXML.hx:152:",str);
	console.log("src/nx3/xml/HeadXML.hx:153:",str2);
	return str == str2;
};
var nx3_xml_NoteXML = function() { };
$hxClasses["nx3.xml.NoteXML"] = nx3_xml_NoteXML;
nx3_xml_NoteXML.__name__ = ["nx3","xml","NoteXML"];
nx3_xml_NoteXML.toXml = function(note) {
	var xml = null;
	var _g = note.type;
	switch(_g._hx_index) {
	case 0:
		var attributes = _g.attributes;
		var articulations = _g.articulations;
		var variant = _g.variant;
		var heads = _g.heads;
		xml = Xml.createElement("note");
		var _g1 = 0;
		while(_g1 < heads.length) xml.addChild(nx3_xml_HeadXML.toXml(heads[_g1++]));
		if(variant != null) {
			xml.set("variant",Std.string(variant));
		}
		if(articulations != null) {
			var articulationStrings = [];
			var _g2 = 0;
			while(_g2 < articulations.length) articulationStrings.push(Std.string(articulations[_g2++]));
			xml.set("articulations",articulationStrings.join(";"));
		}
		if(attributes != null) {
			var attributesStrings = [];
			var _g3 = 0;
			while(_g3 < attributes.length) attributesStrings.push(Std.string(attributes[_g3++]));
			xml.set("attributes",attributesStrings.join(";"));
		}
		break;
	case 1:
		var level = _g.level;
		xml = Xml.createElement("pause");
		if(level != 0) {
			xml.set("level",level == null ? "null" : "" + level);
		}
		break;
	case 3:
		var sign = _g.sign;
		var level1 = _g.level;
		xml = Xml.createElement("tpl");
		xml.set("level",level1 == null ? "null" : "" + level1);
		if(sign != nx3_ESign.None) {
			xml.set("sign",Std.string(sign));
		}
		if(_g.pause == true) {
			xml.set("pause","true");
		}
		break;
	case 4:
		var format = _g.font;
		var continuation = _g.continuation;
		var offset = _g.offset;
		xml = Xml.createElement("lyric");
		xml.set("text",_g.text);
		if(continuation != null) {
			xml.set("continuation",Std.string(continuation));
		}
		if(offset != null) {
			xml.set("offset",Std.string(offset));
		}
		if(format != null) {
			xml.set("format",Std.string(format));
		}
		break;
	case 7:
		var midinote = _g.midinote;
		var level2 = _g.level;
		xml = Xml.createElement("pitch");
		if(level2 != 0) {
			xml.set("level",level2 == null ? "null" : "" + level2);
		}
		if(midinote != 0) {
			xml.set("midinote",midinote == null ? "null" : "" + midinote);
		}
		break;
	default:
		xml = Xml.createElement("undefined");
	}
	if(nx3_ENoteValTools.value(note.value) != nx3_ENoteValTools.value(nx3_ENoteVal.Nv4)) {
		xml.set("val",Std.string(nx3_ENoteValTools.toValString(note.value)));
	}
	if(note.direction != nx3_EDirectionUAD.Auto) {
		xml.set("direction",Std.string(note.direction));
	}
	return xml;
};
nx3_xml_NoteXML.fromXmlStr = function(xmlStr) {
	var xml = Xml.parse(xmlStr).firstElement();
	if(xml.nodeType != Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + xml.nodeType);
	}
	var type = null;
	switch(xml.nodeName) {
	case "lyric":
		type = nx3_ENoteType.Lyric(xml.get("text"),cx_EnumTools.createFromString(nx3_EPosition,xml.get("offset")),cx_EnumTools.createFromString(nx3_ELyricContinuation,xml.get("continuation")));
		break;
	case "note":
		var heads = [];
		var h = xml.elementsNamed(nx3_xml_HeadXML.XHEAD);
		while(h.hasNext()) heads.push(nx3_xml_HeadXML.fromXmlStr(haxe_xml_Printer.print(h.next())));
		var variant = cx_EnumTools.createFromString(nx3_ENotationVariant,xml.get("variant"));
		var articulations = [];
		var articulationsStr = xml.get("articulations");
		if(articulationsStr != null) {
			var articulationStrings = articulationsStr.split(";");
			var _g = 0;
			while(_g < articulationStrings.length) articulations.push(cx_EnumTools.createFromString(nx3_ENoteArticulation,articulationStrings[_g++]));
		}
		if(articulations.length == 0) {
			articulations = null;
		}
		var attributes = [];
		var attributesStr = xml.get("attributes");
		if(attributesStr != null) {
			var attributesStrings = attributesStr.split(";");
			var _g1 = 0;
			while(_g1 < attributesStrings.length) attributes.push(cx_EnumTools.createFromString(nx3_ENoteAttributes,attributesStrings[_g1++]));
		}
		if(attributes.length == 0) {
			attributes = null;
		}
		type = nx3_ENoteType.Note(heads,variant,articulations,attributes);
		break;
	case "pause":
		var pauseLevelStr = xml.get("level");
		type = nx3_ENoteType.Pause(pauseLevelStr == null ? 0 : Std.parseInt(pauseLevelStr));
		break;
	case "pitch":
		var levelstr = xml.get("level");
		var level = levelstr != null ? Std.parseInt(levelstr) : 0;
		var midinotestr = xml.get("midinote");
		type = nx3_ENoteType.Pitch(level,midinotestr != null ? Std.parseInt(midinotestr) : 0);
		break;
	case "tpl":
		var levelstr1 = xml.get("level");
		var level1 = levelstr1 != null ? Std.parseInt(levelstr1) : 0;
		var sign = cx_EnumTools.createFromString(nx3_ESign,xml.get("sign"));
		var pausestr = xml.get("pause");
		type = nx3_ENoteType.Tpl(level1,sign,pausestr != null && pausestr.toLowerCase() == "true");
		break;
	}
	return new nx3_NNote(type,null,nx3_ENoteValTools.fromValString(xml.get("val")),cx_EnumTools.createFromString(nx3_EDirectionUAD,xml.get("direction")));
};
nx3_xml_NoteXML.test = function(item) {
	var str = haxe_xml_Printer.print(nx3_xml_NoteXML.toXml(item));
	var str2 = haxe_xml_Printer.print(nx3_xml_NoteXML.toXml(nx3_xml_NoteXML.fromXmlStr(str)));
	console.log("src/nx3/xml/NoteXML.hx:245:",str);
	console.log("src/nx3/xml/NoteXML.hx:246:",str2);
	return str == str2;
};
nx3_xml_NoteXML.clone = function(nnote) {
	return nx3_xml_NoteXML.fromXmlStr(haxe_xml_Printer.print(nx3_xml_NoteXML.toXml(nnote)));
};
var nx3_xml_PartXML = function() { };
$hxClasses["nx3.xml.PartXML"] = nx3_xml_PartXML;
nx3_xml_PartXML.__name__ = ["nx3","xml","PartXML"];
nx3_xml_PartXML.toXml = function(part) {
	var xml = Xml.createElement("part");
	var _g = 0;
	var _g1 = part.nvoices;
	while(_g < _g1.length) xml.addChild(nx3_xml_VoiceXML.toXml(_g1[_g++]));
	var _g2 = part.type;
	switch(_g2._hx_index) {
	case 0:
		break;
	case 2:
		var octave = _g2.octave;
		var modus = _g2.modus;
		xml.set("type","tplchain");
		if(modus != null) {
			if(modus != nx3_EModus.Major) {
				xml.set("modus",Std.string(modus));
			}
		}
		if(octave != null) {
			if(octave != nx3_EOctave.Normal || octave != null) {
				xml.set("octave",Std.string(octave));
			}
		}
		break;
	case 3:
		var octave1 = _g2.octave;
		var modus1 = _g2.modus;
		xml.set("type","tplchain");
		if(modus1 != null) {
			if(modus1 != nx3_EModus.Major) {
				xml.set("modus",Std.string(modus1));
			}
		}
		if(octave1 != null) {
			if(octave1 != nx3_EOctave.Normal || octave1 != null) {
				xml.set("octave",Std.string(octave1));
			}
		}
		break;
	case 9:
		var leveloffset = _g2.leveloffset;
		xml.set("type","pitchchain");
		xml.set("leveloffset",leveloffset == null ? "null" : "" + leveloffset);
		break;
	default:
		xml.set("type",Std.string(part.type));
	}
	if(part.clef != null) {
		if(part.clef._hx_index != 0) {
			xml.set("clef",Std.string(part.clef));
		}
	}
	if(part.key != null) {
		if(part.key._hx_index != 6) {
			xml.set("key",Std.string(part.key));
		}
	}
	if(part.clefDisplay._hx_index != 1) {
		xml.set("clefdisplay",Std.string(part.clefDisplay));
	}
	if(part.keyDisplay._hx_index != 1) {
		xml.set("keydisplay",Std.string(part.keyDisplay));
	}
	return xml;
};
nx3_xml_PartXML.fromXmlStr = function(xmlStr) {
	var xml = Xml.parse(xmlStr).firstElement();
	var voices = [];
	var v = xml.elements();
	while(v.hasNext()) voices.push(nx3_xml_VoiceXML.fromXmlStr(haxe_xml_Printer.print(v.next())));
	var type = null;
	var typeStr = xml.get("type");
	if(typeStr == "pitchchain") {
		type = nx3_EPartType.PitchChain(Std.parseInt(xml.get("leveloffset")));
	} else if(typeStr == "tplchain" || typeStr == "tplrow") {
		var oct = xml.get("octave");
		var octave = null;
		if(oct != null) {
			octave = cx_EnumTools.createFromString(nx3_EOctave,oct);
		}
		var mod = xml.get("modus");
		var modus = null;
		if(mod != null) {
			modus = cx_EnumTools.createFromString(nx3_EModus,mod);
		}
		type = nx3_EPartType.Tplchain(modus,octave);
	} else {
		type = cx_EnumTools.createFromString(nx3_EPartType,typeStr);
	}
	var str = xml.get("clef");
	var clef = null;
	if(str != null) {
		clef = cx_EnumTools.createFromString(nx3_EClef,str);
	}
	var clefDisplayStr = xml.get("clefdisplay");
	var clefDisplay = clefDisplayStr == null ? nx3_EDisplayALN.Layout : cx_EnumTools.createFromString(nx3_EDisplayALN,clefDisplayStr);
	var str1 = xml.get("key");
	var key = null;
	if(str1 != null) {
		key = cx_EnumTools.createFromString(nx3_EKey,str1);
	}
	var keyDisplayStr = xml.get("keydisplay");
	return new nx3_NPart(voices,type,clef,clefDisplay,key,keyDisplayStr == null ? nx3_EDisplayALN.Layout : cx_EnumTools.createFromString(nx3_EDisplayALN,keyDisplayStr));
};
var nx3_xml_ScoreXML = function() { };
$hxClasses["nx3.xml.ScoreXML"] = nx3_xml_ScoreXML;
nx3_xml_ScoreXML.__name__ = ["nx3","xml","ScoreXML"];
nx3_xml_ScoreXML.toXml = function(score) {
	var xml = Xml.createElement("score");
	var config = Xml.createElement("config");
	config.set("test","12345");
	xml.addChild(config);
	var bar = score.iterator();
	while(bar.hasNext()) xml.addChild(nx3_xml_BarXML.toXml(bar.next()));
	return xml;
};
nx3_xml_ScoreXML.fromXmlStr = function(xmlStr) {
	var xml = Xml.parse(xmlStr).firstElement();
	var bars = [];
	var config = xml.elementsNamed("config").next();
	var configObject = { };
	if(config != null) {
		var attr = config.attributes();
		while(attr.hasNext()) {
			var attr1 = attr.next();
			configObject[attr1] = config.get(attr1);
		}
	}
	var b = xml.elementsNamed("bar");
	while(b.hasNext()) bars.push(nx3_xml_BarXML.fromXmlStr(haxe_xml_Printer.print(b.next())));
	var score = new nx3_NScore(bars);
	score.configuration = configObject;
	return score;
};
var nx3_xml_VoiceXML = function() { };
$hxClasses["nx3.xml.VoiceXML"] = nx3_xml_VoiceXML;
nx3_xml_VoiceXML.__name__ = ["nx3","xml","VoiceXML"];
nx3_xml_VoiceXML.toXml = function(voice) {
	var xml = Xml.createElement("voice");
	if(voice.type._hx_index == 1) {
		xml.set("type",Std.string(voice.type));
	}
	if(voice.direction != nx3_EDirectionUAD.Auto) {
		xml.set("direction",Std.string(voice.direction));
	}
	if(voice.nnotes != null) {
		var _g1 = 0;
		var _g2 = voice.nnotes;
		while(_g1 < _g2.length) xml.addChild(nx3_xml_NoteXML.toXml(_g2[_g1++]));
	}
	return xml;
};
nx3_xml_VoiceXML.fromXmlStr = function(xmlStr) {
	var xml = Xml.parse(xmlStr).firstElement();
	var type = cx_EnumTools.createFromString(nx3_EVoiceType,xml.get("type"));
	var directionStr = xml.get("direction");
	var direction = null;
	direction = directionStr == null ? nx3_EDirectionUAD.Auto : cx_EnumTools.createFromString(nx3_EDirectionUAD,directionStr);
	var notes = [];
	var n = xml.elements();
	while(n.hasNext()) notes.push(nx3_xml_NoteXML.fromXmlStr(haxe_xml_Printer.print(n.next())));
	return new nx3_NVoice(notes,type,direction);
};
nx3_xml_VoiceXML.test = function(item) {
	var str = haxe_xml_Printer.print(nx3_xml_VoiceXML.toXml(item));
	var str2 = haxe_xml_Printer.print(nx3_xml_VoiceXML.toXml(nx3_xml_VoiceXML.fromXmlStr(str)));
	console.log("src/nx3/xml/VoiceXML.hx:76:",str);
	console.log("src/nx3/xml/VoiceXML.hx:77:",str2);
	return str == str2;
};
var storage_StorageSource = function() {
};
$hxClasses["storage.StorageSource"] = storage_StorageSource;
storage_StorageSource.__name__ = ["storage","StorageSource"];
storage_StorageSource.prototype = {
	getUrl: function(storagePath) {
		console.log("src/storage/StorageSource.hx:9:","download " + storagePath);
		return firebase.storage().ref(storagePath).getDownloadURL();
	}
	,getUrls: function(storagePaths) {
		var _gthis = this;
		return Promise.all(storagePaths.map(function(sp) {
			return _gthis.getUrl(sp);
		}));
	}
	,__class__: storage_StorageSource
};
var ui_QSyntax = function() {
	markdown_InlineSyntax.call(this,ui_QSyntax.REGEX);
};
$hxClasses["ui.QSyntax"] = ui_QSyntax;
ui_QSyntax.__name__ = ["ui","QSyntax"];
ui_QSyntax.__super__ = markdown_InlineSyntax;
ui_QSyntax.prototype = $extend(markdown_InlineSyntax.prototype,{
	onMatch: function(parser) {
		var code = this.pattern.matched(1);
		console.log("src/ui/Bookpage.hx:30:","found QSyntax: " + code);
		parser.addNode(new ui_StringRenderNode("score",code));
		return true;
	}
	,getRenderer: function(code) {
		return ui_StringRendererMapper.instance.get("score");
	}
	,__class__: ui_QSyntax
});
var ui_MediaSyntax = function() {
	markdown_InlineSyntax.call(this,ui_MediaSyntax.REGEX);
};
$hxClasses["ui.MediaSyntax"] = ui_MediaSyntax;
ui_MediaSyntax.__name__ = ["ui","MediaSyntax"];
ui_MediaSyntax.__super__ = markdown_InlineSyntax;
ui_MediaSyntax.prototype = $extend(markdown_InlineSyntax.prototype,{
	onMatch: function(parser) {
		var url = this.pattern.matched(1);
		console.log("src/ui/Bookpage.hx:51:","found MediaSyntax: " + url);
		parser.addNode(new ui_MediaNode("media",url));
		return true;
	}
	,getRenderer: function(code) {
		return ui_StringRendererMapper.instance.get("score");
	}
	,__class__: ui_MediaSyntax
});
var ui_MediaNode = function(tag,data) {
	markdown_ElementNode.call(this,tag,[]);
	this.data = data;
};
$hxClasses["ui.MediaNode"] = ui_MediaNode;
ui_MediaNode.__name__ = ["ui","MediaNode"];
ui_MediaNode.__super__ = markdown_ElementNode;
ui_MediaNode.prototype = $extend(markdown_ElementNode.prototype,{
	__class__: ui_MediaNode
});
var ui_StringRenderNode = function(tag,code) {
	markdown_ElementNode.call(this,tag,[]);
	this.code = code;
};
$hxClasses["ui.StringRenderNode"] = ui_StringRenderNode;
ui_StringRenderNode.__name__ = ["ui","StringRenderNode"];
ui_StringRenderNode.__super__ = markdown_ElementNode;
ui_StringRenderNode.prototype = $extend(markdown_ElementNode.prototype,{
	__class__: ui_StringRenderNode
});
var ui_Bookpage = function() {
	ui_Bookpage.BP_RENDER_COUNT++;
};
$hxClasses["ui.Bookpage"] = ui_Bookpage;
ui_Bookpage.__name__ = ["ui","Bookpage"];
ui_Bookpage.__interfaces__ = [mithril_Mithril];
ui_Bookpage.prototype = {
	chapterView: function(chapter) {
		try {
			if(chapter == null) {
				return null;
			}
			if(chapter.type == null || (chapter.type instanceof data_StandardChaptertype)) {
				return m.m("section",[m.m("h1","" + chapter.title),markdown_MithrilRendererCache.instance.markdownToView(chapter.path,chapter.text,[new markdown_inlineRenderer_QInlineSyntaxRenderer()])]);
			} else {
				return null;
			}
		} catch( e ) {
			return m.m("div.error","chapterView: " + Std.string((e instanceof js__$Boot_HaxeError) ? e.val : e));
		}
	}
	,chaptersView: function(chapters,book) {
		try {
			return m.m("nav",[m.m("a.btn",{ href : "/content" + data_FilterModel.instance.getShelf().path, oncreate : mithril__$M_M_$Impl_$.routeLink},"<<"),m.m("img",{ src : "/assets/books/" + book.id + ".jpg"}),m.m("h3","Innehåll:"),m.m("ul",chapters.map(function(chap) {
				return m.m("li",m.m("a" + (chap == data_FilterModel.instance.getChapter() ? ".selected" : ""),{ href : "/content" + chap.path, oncreate : mithril__$M_M_$Impl_$.routeLink},"" + chap.title));
			}))]);
		} catch( e ) {
			return m.m("div.error","chaptersView: " + Std.string((e instanceof js__$Boot_HaxeError) ? e.val : e));
		}
	}
	,subchaptersView: function(subchapters) {
		if(subchapters == null || subchapters.length == 0) {
			return null;
		}
		try {
			return m.m("menu",[subchapters.map(function(sub) {
				return m.m("a" + (sub == data_FilterModel.instance.getSubchapter() ? ".selected" : ""),{ href : "/content" + sub.path, oncreate : mithril__$M_M_$Impl_$.routeLink},"" + sub.title);
			})]);
		} catch( e ) {
			return m.m("div.error","subchaptersView: " + Std.string((e instanceof js__$Boot_HaxeError) ? e.val : e));
		}
	}
	,editChapterView: function(chapter) {
		if(chapter == null) {
			return null;
		}
		try {
			return m.m("details",[m.m("textarea",{ style : { width : "100%", height : "300px"}, oninput : function(e) {
				markdown_MithrilRendererCache.instance.clearCacheKey(chapter.path);
				return chapter.set_text(e.target.value);
			}, value : chapter.text}),m.m("button",{ onclick : function(e1) {
				console.log("src/ui/Bookpage.hx:155:",chapter.dbpath);
				return firebase.database().ref(chapter.dbpath).update({ text : chapter.text},function(e2) {
					console.log("src/ui/Bookpage.hx:157:","after update " + Std.string(e2));
					return;
				});
			}},"Save")]);
		} catch( e3 ) {
			return m.m("div.error","editChapterView: " + Std.string((e3 instanceof js__$Boot_HaxeError) ? e3.val : e3));
		}
	}
	,editSubchapterView: function(chapter) {
		try {
			if(chapter.subchapters == null || chapter.subchapters == []) {
				return null;
			}
			return m.m("details",[m.m("textarea",{ style : { width : "100%", height : "300px"}, oninput : function(e) {
				return chapter.set_text(e.target.value);
			}, value : chapter.text}),m.m("button",{ onclick : function(e1) {
				console.log("src/ui/Bookpage.hx:179:",chapter.dbpath);
				return firebase.database().ref(chapter.dbpath).update({ text : chapter.text},function(e2) {
					console.log("src/ui/Bookpage.hx:181:","after update " + Std.string(e2));
					return;
				});
			}},"Save")]);
		} catch( e3 ) {
			return m.m("div.error","editSubchapterView: " + Std.string((e3 instanceof js__$Boot_HaxeError) ? e3.val : e3));
		}
	}
	,headerView: function(book) {
		try {
			if(book != null) {
				return m.m("header",[m.m("div",book.title + " " + ui_Bookpage.BP_RENDER_COUNT)]);
			} else {
				return "No book selected";
			}
		} catch( e ) {
			return m.m("div.error","headerView: " + Std.string((e instanceof js__$Boot_HaxeError) ? e.val : e));
		}
	}
	,specialChapterView: function(chapter) {
		try {
			return ui_ChapterTypeViewCache.instance.getTypeView(chapter);
		} catch( e ) {
			return m.m("div.error","specialChapterView: " + Std.string((e instanceof js__$Boot_HaxeError) ? e.val : e));
		}
	}
	,view: function() {
		if(arguments.length > 0 && arguments[0].tag != this) return arguments[0].tag.view.apply(arguments[0].tag, arguments);
		var book = data_FilterModel.instance.getBook();
		var chapter = data_FilterModel.instance.getChapter();
		var chapters = data_FilterModel.instance.getChapters();
		var subchapter = data_FilterModel.instance.getSubchapter();
		var subchapters = data_FilterModel.instance.getSubchapters();
		return m.m("div.book",[this.headerView(book),this.chaptersView(chapters,book),m.m("article",[this.editChapterView(chapter),this.chapterView(chapter),this.specialChapterView(chapter),this.subchaptersView(subchapters),this.editChapterView(subchapter),this.chapterView(subchapter),this.specialChapterView(subchapter)])]);
	}
	,__class__: ui_Bookpage
};
var ui_ChapterTypeViewCache = function() {
	this.cache = new haxe_ds_StringMap();
};
$hxClasses["ui.ChapterTypeViewCache"] = ui_ChapterTypeViewCache;
ui_ChapterTypeViewCache.__name__ = ["ui","ChapterTypeViewCache"];
ui_ChapterTypeViewCache.prototype = {
	clearCache: function() {
		var key = this.cache.keys();
		while(key.hasNext()) {
			var key1 = key.next();
			this.cache.remove(key1);
		}
	}
	,clearCacheKey: function(key) {
		var _this = this.cache;
		if(__map_reserved[key] != null ? _this.existsReserved(key) : _this.h.hasOwnProperty(key)) {
			this.cache.remove(key);
		}
	}
	,getTypeView: function(chapter) {
		var path = chapter.path;
		var _this = this.cache;
		if(__map_reserved[path] != null ? _this.existsReserved(path) : _this.h.hasOwnProperty(path)) {
			console.log("src/ui/ChapterTypeViewCache.hx:34:","get " + path + " from cache");
			var _this1 = this.cache;
			if(__map_reserved[path] != null) {
				return _this1.getReserved(path);
			} else {
				return _this1.h[path];
			}
		}
		var view = null;
		if(chapter == null || chapter.type == null) {
			view = null;
		} else {
			var o = chapter.type;
			switch(o == null ? null : js_Boot.getClass(o)) {
			case data_PdfChaptertype:
				view = ui_ViewMapper.instance.getNew("ui.PdfChapter",[chapter.type]).view();
				break;
			case data_PitchChaptertype:
				view = ui_ViewMapper.instance.getNew("ui.PitchChapter",[chapter.type]).view();
				break;
			case data_RosettaChaptertype:
				view = ui_ViewMapper.instance.getNew("ui.RosettaChapter",[chapter.type]).view();
				break;
			case data_ScorxmixerChaptertype:
				view = ui_ViewMapper.instance.getNew("ui.ScorxmixerChapter",[chapter.type]).view();
				break;
			case data_VideoChaptertype:
				view = ui_ViewMapper.instance.getNew("ui.VideoChapter",[chapter.type]).view();
				break;
			default:
				return m.m("div","Undefined special chapter: " + Std.string(chapter.type));
			}
			var _this2 = this.cache;
			var value = view;
			if(__map_reserved[path] != null) {
				_this2.setReserved(path,value);
			} else {
				_this2.h[path] = value;
			}
		}
		return view;
	}
	,__class__: ui_ChapterTypeViewCache
};
var ui_render_IStringRenderer = function() { };
$hxClasses["ui.render.IStringRenderer"] = ui_render_IStringRenderer;
ui_render_IStringRenderer.__name__ = ["ui","render","IStringRenderer"];
ui_render_IStringRenderer.prototype = {
	__class__: ui_render_IStringRenderer
};
var ui_DefaultRenderer = function() {
};
$hxClasses["ui.DefaultRenderer"] = ui_DefaultRenderer;
ui_DefaultRenderer.__name__ = ["ui","DefaultRenderer"];
ui_DefaultRenderer.__interfaces__ = [ui_render_IStringRenderer];
ui_DefaultRenderer.prototype = {
	renderFromCode: function(code) {
		return "DefaultRenderer:getString():" + code;
	}
	,__class__: ui_DefaultRenderer
};
var ui_StringRendererMapper = function() {
	this.map = new haxe_ds_StringMap();
	var _this = this.map;
	var value = new ui_DefaultRenderer();
	if(__map_reserved["default"] != null) {
		_this.setReserved("default",value);
	} else {
		_this.h["default"] = value;
	}
};
$hxClasses["ui.StringRendererMapper"] = ui_StringRendererMapper;
ui_StringRendererMapper.__name__ = ["ui","StringRendererMapper"];
ui_StringRendererMapper.prototype = {
	set: function(name,renderer) {
		var _this = this.map;
		if(__map_reserved[name] != null) {
			_this.setReserved(name,renderer);
		} else {
			_this.h[name] = renderer;
		}
	}
	,get: function(name) {
		var _this = this.map;
		if(__map_reserved[name] != null ? _this.existsReserved(name) : _this.h.hasOwnProperty(name)) {
			var _this1 = this.map;
			if(__map_reserved[name] != null) {
				return _this1.getReserved(name);
			} else {
				return _this1.h[name];
			}
		}
		var _this2 = this.map;
		if(__map_reserved["default"] != null) {
			return _this2.getReserved("default");
		} else {
			return _this2.h["default"];
		}
	}
	,__class__: ui_StringRendererMapper
};
var ui_DefaultView = function(msg) {
	if(msg == null) {
		msg = "message";
	}
	this.msg = msg;
};
$hxClasses["ui.DefaultView"] = ui_DefaultView;
ui_DefaultView.__name__ = ["ui","DefaultView"];
ui_DefaultView.__interfaces__ = [mithril_Mithril];
ui_DefaultView.prototype = {
	view: function() {
		if(arguments.length > 0 && arguments[0].tag != this) return arguments[0].tag.view.apply(arguments[0].tag, arguments);
		return [m.m("div","DefaultView: " + this.msg)];
	}
	,__class__: ui_DefaultView
};
var ui_ViewMapper = function() {
	this.map = new data_ClassMap();
	this.map.set("default",ui_DefaultView);
};
$hxClasses["ui.ViewMapper"] = ui_ViewMapper;
ui_ViewMapper.__name__ = ["ui","ViewMapper"];
ui_ViewMapper.prototype = {
	getNew: function(cls,args) {
		if(this.map.exists(cls)) {
			return this.map.getNew(cls,args);
		}
		return this.map.getNew("default",["ViewMapper: can not find class alias \"" + cls + "\""]);
	}
	,set: function(name,cls) {
		this.map.set(name,cls);
	}
	,__class__: ui_ViewMapper
};
var ui_content_ContentTreeView = function(content) {
	this.content = content;
};
$hxClasses["ui.content.ContentTreeView"] = ui_content_ContentTreeView;
ui_content_ContentTreeView.__name__ = ["ui","content","ContentTreeView"];
ui_content_ContentTreeView.__interfaces__ = [mithril_Mithril];
ui_content_ContentTreeView.prototype = {
	view: function() {
		if(arguments.length > 0 && arguments[0].tag != this) return arguments[0].tag.view.apply(arguments[0].tag, arguments);
		var path = this.content.id;
		return m.m("details[open]",[m.m("summary","Content " + this.content.id)].concat(this.content.rooms.map(function(child) {
			return new ui_content_UIRoom(child).view();
		})));
	}
	,__class__: ui_content_ContentTreeView
};
var ui_content_UIRoom = function(item) {
	this.item = null;
	this.item = item;
};
$hxClasses["ui.content.UIRoom"] = ui_content_UIRoom;
ui_content_UIRoom.__name__ = ["ui","content","UIRoom"];
ui_content_UIRoom.__interfaces__ = [mithril_Mithril];
ui_content_UIRoom.prototype = {
	view: function() {
		if(arguments.length > 0 && arguments[0].tag != this) return arguments[0].tag.view.apply(arguments[0].tag, arguments);
		var children = this.item.shelves != null ? this.item.shelves : [];
		var anchor = m.m("a",{ href : "/content" + this.item.path, oncreate : mithril__$M_M_$Impl_$.routeLink},"Room:" + this.item.title + ":" + this.item.path);
		return m.m("details[open]",[m.m("summary",[anchor])].concat(children.map(function(child) {
			return new ui_content_UIShelf(child).view();
		})));
	}
	,__class__: ui_content_UIRoom
};
var ui_content_UIShelf = function(item) {
	this.item = item;
};
$hxClasses["ui.content.UIShelf"] = ui_content_UIShelf;
ui_content_UIShelf.__name__ = ["ui","content","UIShelf"];
ui_content_UIShelf.__interfaces__ = [mithril_Mithril];
ui_content_UIShelf.prototype = {
	view: function() {
		if(arguments.length > 0 && arguments[0].tag != this) return arguments[0].tag.view.apply(arguments[0].tag, arguments);
		var books = this.item.books != null ? this.item.books : [];
		var css = "access" + this.item.access;
		var anchor = m.m("a",{ href : "/content" + this.item.path, oncreate : mithril__$M_M_$Impl_$.routeLink},"Shelf:" + this.item.title + ":" + this.item.path);
		return m.m("details[openx]." + css,[m.m("summary",[anchor])].concat(books.map(function(child) {
			return new ui_content_UIBook(child).view();
		})));
	}
	,__class__: ui_content_UIShelf
};
var ui_content_UIBook = function(item) {
	this.item = null;
	this.item = item;
};
$hxClasses["ui.content.UIBook"] = ui_content_UIBook;
ui_content_UIBook.__name__ = ["ui","content","UIBook"];
ui_content_UIBook.__interfaces__ = [mithril_Mithril];
ui_content_UIBook.prototype = {
	view: function() {
		if(arguments.length > 0 && arguments[0].tag != this) return arguments[0].tag.view.apply(arguments[0].tag, arguments);
		var chapters = this.item.chapters != null ? this.item.chapters : [];
		var css = "access" + this.item.access;
		var anchor = m.m("a",{ href : "/content" + this.item.path, oncreate : mithril__$M_M_$Impl_$.routeLink},"Book:" + this.item.title + ":" + this.item.path);
		return m.m("details[openx]." + css,[m.m("summary",[anchor])].concat(chapters.map(function(child) {
			return new ui_content_UIChapter(child).view();
		})));
	}
	,__class__: ui_content_UIBook
};
var ui_content_UIChapter = function(item) {
	this.item = null;
	this.item = item;
};
$hxClasses["ui.content.UIChapter"] = ui_content_UIChapter;
ui_content_UIChapter.__name__ = ["ui","content","UIChapter"];
ui_content_UIChapter.__interfaces__ = [mithril_Mithril];
ui_content_UIChapter.prototype = {
	view: function() {
		if(arguments.length > 0 && arguments[0].tag != this) return arguments[0].tag.view.apply(arguments[0].tag, arguments);
		var chapters = this.item.subchapters != null ? this.item.subchapters : [];
		var css = "access" + this.item.access;
		var anchor = m.m("a",{ href : "/content" + this.item.path, oncreate : mithril__$M_M_$Impl_$.routeLink},"Chapter:" + this.item.title + ":" + this.item.path + " " + Std.string(this.item.type));
		return m.m("details[openx]." + css,[m.m("summary",[anchor])].concat(chapters.map(function(child) {
			return new ui_content_UISubchapter(child).view();
		})));
	}
	,__class__: ui_content_UIChapter
};
var ui_content_UISubchapter = function(item) {
	this.item = null;
	this.item = item;
};
$hxClasses["ui.content.UISubchapter"] = ui_content_UISubchapter;
ui_content_UISubchapter.__name__ = ["ui","content","UISubchapter"];
ui_content_UISubchapter.__interfaces__ = [mithril_Mithril];
ui_content_UISubchapter.prototype = {
	view: function() {
		if(arguments.length > 0 && arguments[0].tag != this) return arguments[0].tag.view.apply(arguments[0].tag, arguments);
		var chapters = this.item.subchapters != null ? this.item.subchapters : [];
		var css = "access" + this.item.access;
		var anchor = m.m("a",{ href : "/content" + this.item.path, oncreate : mithril__$M_M_$Impl_$.routeLink},"Subhapter:" + this.item.title + ":" + this.item.path + " " + Std.string(this.item.type));
		return m.m("details[open]." + css,[m.m("summary",[anchor])].concat(chapters.map(function(child) {
			return new ui_content_UIChapter(child).view();
		})));
	}
	,__class__: ui_content_UISubchapter
};
var ui_media_StorageItem = function(src) {
	this.src = src;
};
$hxClasses["ui.media.StorageItem"] = ui_media_StorageItem;
ui_media_StorageItem.__name__ = ["ui","media","StorageItem"];
ui_media_StorageItem.__interfaces__ = [mithril_Mithril];
ui_media_StorageItem.prototype = {
	view: function() {
		if(arguments.length > 0 && arguments[0].tag != this) return arguments[0].tag.view.apply(arguments[0].tag, arguments);
		var storageUrl = data_StorageMap.instance.get(this.src);
		console.log("src/ui/media/StorageItem.hx:18:","storageUrl:" + storageUrl);
		var itemView = null;
		if(storageUrl == data_StorageMap.instance.getDefault(this.src)) {
			itemView = this.getUploadView(this.src);
		} else if(storageUrl == data_StorageMap.NONEXISTING) {
			itemView = this.getUploadView(this.src);
		} else {
			itemView = this.getItemView(data_StorageMap.instance.get(this.src));
		}
		return itemView;
	}
	,getLoadingView: function(src) {
	}
	,getItemView: function(src) {
		return [m.m("img",{ src : data_StorageMap.instance.get(src)})];
	}
	,getUploadView: function(src) {
		var tmp = m.m("span","Upload file: " + src);
		var tmp1 = m.m("input",{ type : "file", id : "file", onchange : function(e) {
			ui_media_StorageItem.file = e.target.files[0];
			console.log("src/ui/media/StorageItem.hx:58:",ui_media_StorageItem.file);
			return;
		}});
		var tmp2 = m.m("button",{ onclick : function(e1) {
			console.log("src/ui/media/StorageItem.hx:63:","upload");
			console.log("src/ui/media/StorageItem.hx:64:",ui_media_StorageItem.file);
			if(ui_media_StorageItem.file == null) {
				return;
			}
			var fileref = src;
			var storageRef = firebase.storage().ref(fileref);
			console.log("src/ui/media/StorageItem.hx:70:",storageRef);
			storageRef.put(ui_media_StorageItem.file).on("state_changed",function(snap) {
				console.log("src/ui/media/StorageItem.hx:74:","uploading " + src + "...");
				return null;
			},function(error) {
				console.log("src/ui/media/StorageItem.hx:77:","error2 " + e1);
				return;
			},function() {
				console.log("src/ui/media/StorageItem.hx:80:","hehe");
				m.redraw();
				return;
			});
			return;
		}},"Upload");
		var tmp3 = m.m("span",Std.string(ui_media_StorageItem.file) + "");
		return m.m("div",{ style : { border : "2px solid green", padding : "1em"}},[tmp,tmp1,tmp2,tmp3]);
	}
	,__class__: ui_media_StorageItem
};
var ui_media_StorageAudio = function(src) {
	ui_media_StorageItem.call(this,src);
};
$hxClasses["ui.media.StorageAudio"] = ui_media_StorageAudio;
ui_media_StorageAudio.__name__ = ["ui","media","StorageAudio"];
ui_media_StorageAudio.__super__ = ui_media_StorageItem;
ui_media_StorageAudio.prototype = $extend(ui_media_StorageItem.prototype,{
	getItemView: function(src) {
		var tmp = m.m("source",{ src : src});
		return m.m("audio",{ controls : true},tmp);
	}
	,__class__: ui_media_StorageAudio
});
var ui_media_StorageImage = function(src) {
	ui_media_StorageItem.call(this,src);
};
$hxClasses["ui.media.StorageImage"] = ui_media_StorageImage;
ui_media_StorageImage.__name__ = ["ui","media","StorageImage"];
ui_media_StorageImage.__super__ = ui_media_StorageItem;
ui_media_StorageImage.prototype = $extend(ui_media_StorageItem.prototype,{
	getItemView: function(src) {
		return [m.m("img",{ src : src})];
	}
	,__class__: ui_media_StorageImage
});
var ui_media_StorageMedia = function(src) {
	this.src = src;
	var tmp;
	switch(haxe_io_Path.extension(src)) {
	case "mp3":
		tmp = new ui_media_StorageAudio(src);
		break;
	case "mp4":
		tmp = new ui_media_StorageVideo(src);
		break;
	default:
		tmp = new ui_media_StorageImage(src);
	}
	this.item = tmp;
};
$hxClasses["ui.media.StorageMedia"] = ui_media_StorageMedia;
ui_media_StorageMedia.__name__ = ["ui","media","StorageMedia"];
ui_media_StorageMedia.prototype = {
	view: function() {
		return this.item.view();
	}
	,__class__: ui_media_StorageMedia
};
var ui_media_StorageVideo = function(src) {
	ui_media_StorageItem.call(this,src);
};
$hxClasses["ui.media.StorageVideo"] = ui_media_StorageVideo;
ui_media_StorageVideo.__name__ = ["ui","media","StorageVideo"];
ui_media_StorageVideo.__super__ = ui_media_StorageItem;
ui_media_StorageVideo.prototype = $extend(ui_media_StorageItem.prototype,{
	getItemView: function(src) {
		return m.m("video",{ src : src, controls : true, style : { width : "100%", objectFit : "contain", backgroundColor : "black"}});
	}
	,__class__: ui_media_StorageVideo
});
var ui_render_QSyntaxRenderer = function() {
};
$hxClasses["ui.render.QSyntaxRenderer"] = ui_render_QSyntaxRenderer;
ui_render_QSyntaxRenderer.__name__ = ["ui","render","QSyntaxRenderer"];
ui_render_QSyntaxRenderer.__interfaces__ = [ui_render_IStringRenderer];
ui_render_QSyntaxRenderer.prototype = {
	renderFromCode: function(code) {
		var nscore = new nx3_qs_QSParser(code).parse();
		var target = new nx3_render_TargetSvgXml("id",nx3_render_scaling_Scaling.NORMAL);
		new nx3_render_Renderer(target,0,0).renderScore(new nx3_PScore(nscore));
		return haxe_xml_Printer.print(target.getXml());
	}
	,__class__: ui_render_QSyntaxRenderer
};
var utils__$UserEmail_UserEmail_$Impl_$ = {};
$hxClasses["utils._UserEmail.UserEmail_Impl_"] = utils__$UserEmail_UserEmail_$Impl_$;
utils__$UserEmail_UserEmail_$Impl_$.__name__ = ["utils","_UserEmail","UserEmail_Impl_"];
utils__$UserEmail_UserEmail_$Impl_$.isValid = function(address) {
	return utils__$UserEmail_UserEmail_$Impl_$.ereg.match(address);
};
utils__$UserEmail_UserEmail_$Impl_$._new = function(address) {
	if(!utils__$UserEmail_UserEmail_$Impl_$.isValid(address)) {
		throw new js__$Boot_HaxeError("EmailAddress \"" + address + "\" is invalid");
	}
	return address.toLowerCase();
};
utils__$UserEmail_UserEmail_$Impl_$.fromString = function(address) {
	if(!utils__$UserEmail_UserEmail_$Impl_$.isValid(address)) {
		throw new js__$Boot_HaxeError("EmailAddress \"" + address + "\" is invalid");
	}
	return address.toLowerCase();
};
utils__$UserEmail_UserEmail_$Impl_$.makePiped = function(email) {
	return StringTools.replace(StringTools.replace(email,"@","||"),".","|");
};
utils__$UserEmail_UserEmail_$Impl_$.toPiped = function(this1) {
	return utils__$UserEmail_UserEmail_$Impl_$.makePiped(this1);
};
utils__$UserEmail_UserEmail_$Impl_$.fromPiped = function(pipedEmail) {
	var pa = pipedEmail;
	pa = StringTools.replace(pipedEmail,"||","@");
	pa = StringTools.replace(pa,"|",".");
	if(!utils__$UserEmail_UserEmail_$Impl_$.isValid(pa)) {
		throw new js__$Boot_HaxeError("EmailAddress \"" + pa + "\" is invalid");
	}
	return pa.toLowerCase();
};
var utils__$UserPassword_UserPassword_$Impl_$ = {};
$hxClasses["utils._UserPassword.UserPassword_Impl_"] = utils__$UserPassword_UserPassword_$Impl_$;
utils__$UserPassword_UserPassword_$Impl_$.__name__ = ["utils","_UserPassword","UserPassword_Impl_"];
utils__$UserPassword_UserPassword_$Impl_$.isValid = function(str) {
	return str.length > 3;
};
function $getIterator(o) { if( o instanceof Array ) return HxOverrides.iter(o); else return o.iterator(); }
var $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = m.bind(o); o.hx__closures__[m.__id__] = f; } return f; }
$hxClasses["Math"] = Math;
var __map_reserved = {};
String.prototype.__class__ = $hxClasses["String"] = String;
String.__name__ = ["String"];
$hxClasses["Array"] = Array;
Array.__name__ = ["Array"];
Date.prototype.__class__ = $hxClasses["Date"] = Date;
Date.__name__ = ["Date"];
var Int = { };
var Dynamic = { };
var Float = Number;
var Bool = Boolean;
var Class = { };
var Enum = { };
haxe_ds_ObjectMap.count = 0;
Object.defineProperty(js__$Boot_HaxeError.prototype,"message",{ get : function() {
	return String(this.val);
}});
var ArrayBuffer = $global.ArrayBuffer || js_html_compat_ArrayBuffer;
if(ArrayBuffer.prototype.slice == null) {
	ArrayBuffer.prototype.slice = js_html_compat_ArrayBuffer.sliceImpl;
}
var Uint8Array = $global.Uint8Array || js_html_compat_Uint8Array._new;
try {
var __varName = window.m;
(function(m) {
			if (m.m) return;
			m.m = function() {
				try { 
					for(var i=0; i < arguments.length; ++i) if(arguments[i] instanceof List) {
						var list = arguments[i].h; arguments[i] = [];
						while(list != null) { arguments[i].push(l[0]); list = l[1]; }
					}
				} catch(e) {}
				return m.apply(this, arguments);
			}
		})(__varName);
} catch(_) {}
try {
GLOBAL.m = require("mithril");
var __varName1 = GLOBAL.m;
(function(m) {
			if (m.m) return;
			m.m = function() {
				try { 
					for(var i=0; i < arguments.length; ++i) if(arguments[i] instanceof List) {
						var list = arguments[i].h; arguments[i] = [];
						while(list != null) { arguments[i].push(l[0]); list = l[1]; }
					}
				} catch(e) {}
				return m.apply(this, arguments);
			}
		})(__varName1);
} catch(_) {}
DateTools.DAY_SHORT_NAMES = ["Sun","Mon","Tue","Wed","Thu","Fri","Sat"];
DateTools.DAY_NAMES = ["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"];
DateTools.MONTH_SHORT_NAMES = ["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];
DateTools.MONTH_NAMES = ["January","February","March","April","May","June","July","August","September","October","November","December"];
Require.jsPath = "./";
Require.jsExt = ".js";
Require.loaded = new haxe_ds_StringMap();
Require.handlers = new haxe_ds_StringMap();
Xml.Element = 0;
Xml.PCData = 1;
Xml.CData = 2;
Xml.Comment = 3;
Xml.DocType = 4;
Xml.ProcessingInstruction = 5;
Xml.Document = 6;
audio_Audio.instance = new audio_Audio();
audio_scorx_MixerModel.instance = new audio_scorx_MixerModel();
client2_ContentManager.instance = new client2_ContentManager();
client2_FilterManager.instance = new client2_FilterManager();
client2_Footer.instance = new client2_Footer();
client2_Header.instance = new client2_Header();
client2_PageBook.instance = new client2_PageBook();
client2_ChapterTypeModel.instance = new client2_ChapterTypeModel();
client2_SubchapterTypeModel.instance = new client2_SubchapterTypeModel();
client2_PageContent.instance = new client2_PageContent();
client2_PageHome.instance = new client2_PageHome();
client2_PageSearch.instance = new client2_PageSearch();
client2_PageShelves.instance = new client2_PageShelves();
client2_RoutesManager.instance = new client2_RoutesManager();
client2_SidewaysManager.instance = new client2_SidewaysManager();
client2_UserManager.instance = new client2_UserManager();
cx_GUID.CHARS = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split("");
cx_Lorem.loremIdx = 0;
cx_Lorem.headlineIdx = 0;
cx_Lorem.lorem = ["Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Enim eu turpis egestas pretium aenean pharetra magna ac placerat. Diam donec adipiscing tristique risus nec feugiat in fermentum. Et netus et malesuada fames ac turpis egestas maecenas. Neque aliquam vestibulum morbi blandit cursus risus at ultrices mi. Cursus euismod quis viverra nibh. Sit amet justo donec enim diam vulputate. Sapien faucibus et molestie ac feugiat. Tempus iaculis urna id volutpat lacus laoreet non. Tortor posuere ac ut consequat. Proin fermentum leo vel orci porta non. Nisl nisi scelerisque eu ultrices vitae auctor eu augue ut. Ac ut consequat semper viverra nam libero. Orci nulla pellentesque dignissim enim sit amet venenatis urna cursus. Nisi lacus sed viverra tellus in hac habitasse platea dictumst.","/@score a b c @/ Malesuada fames ac turpis egestas integer eget aliquet nibh praesent. Consequat nisl vel pretium lectus quam id. Convallis convallis tellus id interdum velit laoreet id donec ultrices. Accumsan in nisl nisi scelerisque. Id porta nibh venenatis cras sed felis eget velit aliquet. Ipsum nunc aliquet bibendum enim facilisis. Sagittis orci a scelerisque purus semper. Vel eros donec ac odio tempor orci. Pharetra pharetra massa massa ultricies. Diam vel quam elementum pulvinar etiam non quam. Id faucibus nisl tincidunt eget nullam non nisi est sit. Ullamcorper eget nulla facilisi etiam dignissim diam. Vulputate sapien nec sagittis aliquam malesuada bibendum arcu vitae. Proin nibh nisl condimentum id venenatis a condimentum vitae. Sit amet massa vitae tortor. Non diam phasellus vestibulum lorem. Feugiat in ante metus dictum at tempor commodo. Duis at consectetur lorem donec massa sapien faucibus et. Quis risus sed vulputate odio ut enim blandit.","Nisi scelerisque eu ultrices vitae auctor. /@score g f8 e d c a4 @/ Viverra orci sagittis eu volutpat odio. Lorem dolor sed viverra ipsum nunc aliquet. Fames ac turpis egestas maecenas pharetra convallis posuere. Netus et malesuada fames ac turpis. Mattis enim ut tellus elementum sagittis vitae et. Nulla porttitor massa id neque. Sed faucibus turpis in eu. Eget aliquet nibh praesent tristique magna sit. Arcu ac tortor dignissim convallis aenean et tortor. Lacus viverra vitae congue eu consequat ac. Purus gravida quis blandit turpis cursus in hac habitasse. Morbi tristique senectus et netus et malesuada fames ac.","Sed sed risus pretium quam. Felis eget velit aliquet sagittis id consectetur purus ut faucibus. Sed ullamcorper morbi tincidunt ornare massa eget egestas purus viverra. Risus sed vulputate odio ut enim blandit volutpat. Pellentesque nec nam aliquam sem et tortor. Cursus sit amet dictum sit amet justo donec. Massa id neque aliquam vestibulum morbi blandit cursus risus at. Ac felis donec et odio pellentesque diam volutpat commodo. Habitasse platea dictumst quisque sagittis. Et odio pellentesque diam volutpat commodo sed egestas egestas fringilla. Egestas congue quisque egestas diam in arcu cursus. Consectetur purus ut faucibus pulvinar elementum integer. Nulla pellentesque dignissim enim sit amet. Nec tincidunt praesent semper feugiat nibh sed pulvinar proin gravida. Nibh cras pulvinar mattis nunc sed blandit libero volutpat sed.","Mattis pellentesque id nibh tortor id aliquet lectus proin nibh. Massa massa ultricies mi quis. Sed blandit libero volutpat sed. Imperdiet massa tincidunt nunc pulvinar sapien et. Nec ultrices dui sapien eget mi proin. Ultrices tincidunt arcu non sodales neque sodales ut etiam. Iaculis nunc sed augue lacus viverra. Tristique senectus et netus et. Imperdiet massa tincidunt nunc pulvinar sapien et ligula ullamcorper malesuada. Viverra accumsan in nisl nisi. Dictum non consectetur a erat nam at lectus urna duis. Quis ipsum suspendisse ultrices gravida dictum fusce ut placerat orci. Diam maecenas ultricies mi eget mauris. Pulvinar etiam non quam lacus suspendisse.","Accumsan in nisl nisi scelerisque eu ultrices. Sit amet volutpat consequat mauris. Pretium quam vulputate dignissim suspendisse in. Aliquet eget sit amet tellus. Sagittis vitae et leo duis ut diam. Sit amet tellus cras adipiscing enim. Pellentesque diam volutpat commodo sed egestas egestas fringilla phasellus. Eget nunc scelerisque viverra mauris in aliquam. Mollis nunc sed id semper risus in. In fermentum posuere urna nec tincidunt. Nunc mi ipsum faucibus vitae aliquet nec ullamcorper. Morbi leo urna molestie at elementum eu facilisis sed odio. Ligula ullamcorper malesuada proin libero. Enim ut tellus elementum sagittis vitae et leo duis. Suspendisse in est ante in nibh mauris cursus mattis molestie. Nisl pretium fusce id velit ut tortor. Mauris nunc congue nisi vitae suscipit tellus mauris a diam.","Phasellus egestas tellus rutrum tellus pellentesque eu tincidunt tortor. /@score g2 c b8 a g e @/ Id ornare arcu odio ut sem nulla pharetra diam. Elit eget gravida cum sociis natoque penatibus et magnis dis. Tincidunt lobortis feugiat vivamus at augue eget arcu dictum. Mauris commodo quis imperdiet massa tincidunt nunc pulvinar. Dictum fusce ut placerat orci nulla pellentesque dignissim enim. Risus quis varius quam quisque id diam vel. Ullamcorper malesuada proin libero nunc consequat interdum. Est velit egestas dui id ornare arcu. Porta non pulvinar neque laoreet suspendisse interdum consectetur libero. Amet cursus sit amet dictum. Ultricies leo integer malesuada nunc vel risus commodo. Facilisis magna etiam tempor orci eu lobortis. Ultricies integer quis auctor elit sed vulputate mi sit. Tellus orci ac auctor augue. Cras ornare arcu dui vivamus arcu. Magna fermentum iaculis eu non diam phasellus. Urna nec tincidunt praesent semper feugiat. Interdum velit euismod in pellentesque massa placerat duis.","Ullamcorper a lacus vestibulum sed. Est sit amet facilisis magna etiam. Velit laoreet id donec ultrices tincidunt arcu non sodales. Sit amet mauris commodo quis. Sagittis nisl rhoncus mattis rhoncus urna neque viverra justo. Metus vulputate eu scelerisque felis imperdiet proin. Enim sed faucibus turpis in eu mi. Augue eget arcu dictum varius duis at consectetur. Feugiat vivamus at augue eget arcu dictum varius. Faucibus a pellentesque sit amet porttitor. Viverra tellus in hac habitasse platea dictumst vestibulum rhoncus. Dignissim diam quis enim lobortis scelerisque fermentum. Suscipit tellus mauris a diam maecenas sed enim ut. Rhoncus est pellentesque elit ullamcorper dignissim cras tincidunt lobortis.","Viverra tellus in hac habitasse. Leo integer malesuada nunc vel risus. Enim praesent elementum facilisis leo vel fringilla est ullamcorper eget. Non enim praesent elementum facilisis leo vel fringilla est ullamcorper. Gravida neque convallis a cras. Nisl rhoncus mattis rhoncus urna neque viverra justo nec. Ut venenatis tellus in metus vulputate eu. Nec nam aliquam sem et tortor consequat. Lobortis mattis aliquam faucibus purus in. Lacus vestibulum sed arcu non odio. Nisi quis eleifend quam adipiscing.","Est velit egestas dui id ornare arcu. Velit euismod in pellentesque massa placerat duis ultricies lacus. Ut morbi tincidunt augue interdum velit euismod. Neque sodales ut etiam sit amet nisl. Ac tincidunt vitae semper quis lectus. Fermentum iaculis eu non diam phasellus vestibulum lorem sed risus. Euismod elementum nisi quis eleifend quam adipiscing vitae proin sagittis. Ornare arcu odio ut sem nulla pharetra diam. At erat pellentesque adipiscing commodo elit at imperdiet. Ridiculus mus mauris vitae ultricies leo integer malesuada nunc. Eget mi proin sed libero enim sed faucibus turpis in. Libero enim sed faucibus turpis in eu mi bibendum. Ultrices vitae auctor eu augue ut lectus arcu bibendum. Est velit egestas dui id ornare arcu odio. Sapien et ligula ullamcorper malesuada proin libero nunc consequat. Enim praesent elementum facilisis leo. Aliquam malesuada bibendum arcu vitae. Felis eget velit aliquet sagittis. Tempus imperdiet nulla malesuada pellentesque elit eget gravida. Placerat vestibulum lectus mauris ultrices eros in cursus."];
cx_Lorem.headlines = ["Lorem ipsum beginning","The story continues","Behind the lorem ipsum scenes","A quite long headline - with all normal standards","Breaf history of Lorem Ipsum","And on it goes","Will this go on forever?","Yes, it will!","And so it does","The final is here - finally"];
cx_MathTools.EPSILON = 0.0000000000009;
cx_MathTools.PI2Over360 = 2 * Math.PI / 360;
cx_StrTools.SUPERSCRIPT_ZERO = String.fromCharCode(8304);
cx_StrTools.SUPERSCRIPT_ONE = String.fromCharCode(185);
cx_StrTools.SUPERSCRIPT_TWO = String.fromCharCode(178);
cx_StrTools.SUPERSCRIPT_THREE = String.fromCharCode(8307);
cx_StrTools.SUPERSCRIPT_FOUR = String.fromCharCode(8308);
cx_StrTools.SUPERSCRIPT_FIVE = String.fromCharCode(8309);
cx_StrTools.SUPERSCRIPT_SIX = String.fromCharCode(8310);
cx_StrTools.SUPERSCRIPT_SEVEN = String.fromCharCode(8311);
cx_StrTools.SUPERSCRIPT_EIGHT = String.fromCharCode(8312);
cx_StrTools.SUPERSCRIPT_NINE = String.fromCharCode(8313);
cx_StrTools.SUBSCRIPT_ZERO = String.fromCharCode(8320);
cx_StrTools.SUBSCRIPT_ONE = String.fromCharCode(8321);
cx_StrTools.SUBSCRIPT_TWO = String.fromCharCode(8322);
cx_StrTools.SUBSCRIPT_THREE = String.fromCharCode(8323);
cx_StrTools.SUBSCRIPT_FOUR = String.fromCharCode(8324);
cx_StrTools.SUBSCRIPT_FIVE = String.fromCharCode(8325);
cx_StrTools.SUBSCRIPT_SIX = String.fromCharCode(8326);
cx_StrTools.SUBSCRIPT_SEVEN = String.fromCharCode(8327);
cx_StrTools.SUBSCRIPT_EIGHT = String.fromCharCode(8328);
cx_StrTools.SUBSCRIPT_NINE = String.fromCharCode(8329);
data_ClassMap.instance = new data_ClassMap();
data_UserData.__meta__ = { obj : { dataClassRtti : [{ firstname : "String", lastname : "String", email : "String", domains : "Array<String>", access : "Int"}]}};
data_UserConfig.__meta__ = { obj : { dataClassRtti : [{ domain : "String"}]}};
data_UserResponse.__meta__ = { obj : { dataClassRtti : [{ userData : "DataClass<data.UserData>", errors : "Array<String>"}]}};
data_Content.__meta__ = { obj : { dataClassRtti : [{ id : "String", rooms : "Array<DataClass<data.Room>>"}]}, fields : { path : { exclude : null}, dbpath : { exclude : null}}};
data_Room.__meta__ = { obj : { dataClassRtti : [{ id : "String", shelves : "Array<DataClass<data.Shelf>>", title : "String", sort : "Int", home : "DataClass<data.Home>"}]}, fields : { path : { exclude : null}, dbpath : { exclude : null}}};
data_Home.__meta__ = { obj : { dataClassRtti : [{ title : "String", sections : "Array<Interface<data.IHomeSection>>"}]}};
data_SectionShelves.__meta__ = { obj : { dataClassRtti : [{ title : "String", sort : "Int"}]}};
data_SectionCells.__meta__ = { obj : { dataClassRtti : [{ title : "String", sort : "Int", cells : "Array<Interface<data.IHomeCell>>"}]}};
data_TextCell.__meta__ = { obj : { dataClassRtti : [{ title : "String", sort : "Int", gridColumn : "String", gridRow : "String", color : "String", text : "String", bgcolor : "String", bgimage : "String", url : "String", image : "String"}]}};
data_VideoCell.__meta__ = { obj : { dataClassRtti : [{ title : "String", sort : "Int", gridColumn : "String", gridRow : "String", color : "String", text : "String", bgcolor : "String", bgimage : "String", url : "String", image : "String", video : "String"}]}};
data_Shelf.__meta__ = { obj : { dataClassRtti : [{ id : "String", title : "String", access : "Int", info : "String", books : "Array<DataClass<data.Book>>", sort : "Int", type : "String"}]}, fields : { path : { exclude : null}, dbpath : { exclude : null}}};
data_Book.__meta__ = { obj : { dataClassRtti : [{ id : "String", title : "String", access : "Int", type : "String", info : "String", chapters : "Array<DataClass<data.Chapter>>", sort : "Int"}]}, fields : { path : { exclude : null}, dbpath : { exclude : null}}};
data_Chapter.__meta__ = { obj : { dataClassRtti : [{ id : "String", title : "String", access : "Int", info : "String", text : "String", sort : "Int", subchapters : "Array<DataClass<data.Chapter>>", type : "Interface<data.IChaptertype>"}]}, fields : { path : { exclude : null}, dbpath : { exclude : null}}};
data_StandardChaptertype.__meta__ = { obj : { dataClassRtti : [{ }]}};
data_VideoChaptertype.__meta__ = { obj : { dataClassRtti : [{ url : "String"}]}};
data_RosettaChaptertype.__meta__ = { obj : { dataClassRtti : [{ data : "String"}]}};
data_PdfChaptertype.__meta__ = { obj : { dataClassRtti : [{ filename : "String"}]}};
data_PitchChaptertype.__meta__ = { obj : { dataClassRtti : [{ }]}};
data_ScorxmixerChaptertype.__meta__ = { obj : { dataClassRtti : [{ paths : "Array<String>"}]}};
data_ContentUtils.typeCounter = 0;
data_ContentModel.instance = new data_ContentModel();
data_ErrorsAndLogs.element = ($_=window.document,$bind($_,$_.querySelector));
data_ErrorsAndLogs.logs = [];
data_ErrorsAndLogs.errors = [];
data_FilterModel.instance = new data_FilterModel();
data_FirebaseModel.instance = new data_FirebaseModel();
data_PagesModel.instance = new data_PagesModel();
data_StorageMap.DEFAULT_IMG = "/assets/default.jpg";
data_StorageMap.DEFAULT_MP3 = "/assets/default.mp3";
data_StorageMap.NONEXISTING = "NONEXISTING";
data_StorageMap.instance = new data_StorageMap();
dataclass_Converter.typedClassFieldName = "classtype";
dataclass_Converter.directConversions = ["Int","Bool","Float","String"];
dataclass_Converter.enumCache = new haxe_ds_StringMap();
dataclass_Converter.classCache = new haxe_ds_StringMap();
dataclass_JsonConverter.current = new dataclass_JsonConverter();
dataclass_StringJsonConverter.current = new dataclass_StringJsonConverter();
dataclass_TypedJsonConverter.current = new dataclass_TypedJsonConverter();
haxe_xml_Parser.escapes = (function($this) {
	var $r;
	var h = new haxe_ds_StringMap();
	if(__map_reserved["lt"] != null) {
		h.setReserved("lt","<");
	} else {
		h.h["lt"] = "<";
	}
	if(__map_reserved["gt"] != null) {
		h.setReserved("gt",">");
	} else {
		h.h["gt"] = ">";
	}
	if(__map_reserved["amp"] != null) {
		h.setReserved("amp","&");
	} else {
		h.h["amp"] = "&";
	}
	if(__map_reserved["quot"] != null) {
		h.setReserved("quot","\"");
	} else {
		h.h["quot"] = "\"";
	}
	if(__map_reserved["apos"] != null) {
		h.setReserved("apos","'");
	} else {
		h.h["apos"] = "'";
	}
	$r = h;
	return $r;
}(this));
js_Boot.__toStr = ({ }).toString;
js_html_compat_Uint8Array.BYTES_PER_ELEMENT = 1;
markdown_BlockSyntax.RE_EMPTY = new EReg("^([ \\t]*)$","");
markdown_BlockSyntax.RE_SETEXT = new EReg("^((=+)|(-+))$","");
markdown_BlockSyntax.RE_HEADER = new EReg("^(#{1,6})(.*?)#*$","");
markdown_BlockSyntax.RE_BLOCKQUOTE = new EReg("^[ ]{0,3}>[ ]?(.*)$","");
markdown_BlockSyntax.RE_INDENT = new EReg("^(?:    |\t)(.*)$","");
markdown_BlockSyntax.RE_CODE = new EReg("^```(\\w*)\\s*$","");
markdown_BlockSyntax.RE_HR = new EReg("^[ ]{0,3}((-+[ ]{0,2}){3,}|(_+[ ]{0,2}){3,}|(\\*+[ ]{0,2}){3,})$","");
markdown_BlockSyntax.RE_HTML = new EReg("^<[ ]*\\w+[ >]","");
markdown_BlockSyntax.RE_UL = new EReg("^[ ]{0,3}[*+-][ \\t]+(.*)$","");
markdown_BlockSyntax.RE_OL = new EReg("^[ ]{0,3}\\d+\\.[ \\t]+(.*)$","");
markdown_TableSyntax.TABLE_PATTERN = new EReg("^(.+? +:?\\|:? +)+(.+)$","");
markdown_TableSyntax.CELL_PATTERN = new EReg("(\\|)?([^\\|]+)(\\|)?","g");
markdown_HtmlRenderer.BLOCK_TAGS = new EReg("blockquote|h1|h2|h3|h4|h5|h6|hr|p|pre","");
markdown_HtmlRenderer.attributeOrder = ["src","alt"];
markdown_LinkSyntax.linkPattern = "\\](?:(" + "\\s?\\[([^\\]]*)\\]" + "|" + "\\s?\\(([^ )]+)(?:[ ]*\"([^\"]+)\"|)\\)" + ")|)";
markdown_ImgSyntax.linkPattern = "\\](?:(" + "\\s?\\[([^\\]]*)\\]" + "|" + "\\s?\\(([^ )]+)(?:[ ]*\"([^\"]+)\"|)\\)" + ")|)";
markdown_InlineParser.defaultSyntaxes = [new markdown_AutolinkSyntaxWithoutBrackets(),new markdown_TextSyntax(" {2,}\n","<br />\n"),new markdown_TextSyntax("\\s*[A-Za-z0-9]+"),new markdown_AutolinkSyntax(),new markdown_LinkSyntax(),new markdown_ImgSyntax(),new markdown_TextSyntax(" \\* "),new markdown_TextSyntax(" _ "),new markdown_TextSyntax("&[#a-zA-Z0-9]*;"),new markdown_TextSyntax("&","&amp;"),new markdown_TextSyntax("</?\\w+.*?>"),new markdown_TextSyntax("<","&lt;"),new markdown_TagSyntax("\\*\\*","strong"),new markdown_TagSyntax("__","strong"),new markdown_TagSyntax("\\*","em"),new markdown_TagSyntax("\\b_","em","_\\b"),new markdown_CodeSyntax("``\\s?((?:.|\\n)*?)\\s?``"),new markdown_CodeSyntax("`([^`]*)`")];
markdown_MithrilRenderer.instance = new markdown_MithrilRenderer();
markdown_MithrilRendererCache.instance = new markdown_MithrilRendererCache();
markdown_MithrilTools.cache = new cx_Cache(5);
markdown_inlineRenderer_QInlineSyntaxRenderer.REGEX = "/@score ([0-9a-zA-Z ]*)@/";
markdown_syntax_TestcodeSyntax.REGEX = "/@test ([0-9a-zA-Z ]*)@/";
nx3_Constants.BASE_NOTE_VALUE = 3024;
nx3_Constants.STAVE_LENGTH = 6.8;
nx3_Constants.STAVE_BASIC_LENGTH = 7;
nx3_Constants.SIGN_TO_NOTE_DISTANCE = 0.8;
nx3_Constants.COMPLEX_COLLISION_OVERLAP_XTRA = 0.6;
nx3_Constants.SIGN_NORMAL_WIDTH = 2.6;
nx3_Constants.SIGN_PARENTHESIS_WIDTH = 4.4;
nx3_Constants.HEAD_ADJUST_X = 0;
nx3_Constants.COMPLEX_COLLISION_ADJUST_SAMELINE = 3.0;
nx3_Constants.COMPLEX_COLLISION_ADJUST_NEXTLINE = 2.2;
nx3_Constants.COMPLEX_COLLISION_ADJUST_SAMELINE_WHOLE = 4.3;
nx3_Constants.COMPLEX_COLLISION_ADJUST_NEXTLINE_WHOLE = 4;
nx3_Constants.NOTE_STEM_X_NORMAL = 1.6;
nx3_Constants.HEAD_WIDTH_NORMAL = 3.2;
nx3_Constants.HEAD_HALFWIDTH_NORMAL = 1.6;
nx3_Constants.HEAD_HALFWIDTH_WIDE = 2.2;
nx3_Constants.COMPLEX_COLLISION_CHORD_INTERSECTION = 0.8;
nx3_Constants.COMPLEX_COLLISION_NEXTLINEDELTA = 0.7;
nx3_Constants.COMPLEX_COLLISION_NEXTLINEDELTA_H1 = 0.9;
nx3_Constants.DOT_WIDTH = 2.0;
nx3_Constants.DDOT_WIDTH = 3.0;
nx3_Constants.FLAG_HEIGHT = 4.8;
nx3_Constants.FLAG_WIDTH = 2.6;
nx3_Constants.FLOAT_QUASI_ZERO = 0.0000001;
nx3_Constants.FONT_TEXT_DEFAULTFORMAT = { name : "Georgia", size : 20, bold : false, italic : false};
nx3_Constants.JS_CANVAS_TEXT_MEASUREMENT = "CanvasTextMeasurement";
nx3_Constants.FONT_TEXT_X_ADJUST_SVG = 4;
nx3_Constants.FONT_TEXT_Y_ADJUST_SVG = -3;
nx3_Constants.FONT_TEXT_Y_ADJUST_FLASH = -1.2;
nx3_Constants.FONT_TEXT_X_ADJUST_FLASH = -.3;
nx3_Constants.FONT_TEXT_X_ADJUST_SYS = 0;
nx3_Constants.FONT_TEXT_Y_ADJUST_SYS = -6;
nx3_Constants.BEAM_HEIGHT = 0.95;
nx3_Constants.TIE_WIDTH_CHORD = 3.2;
nx3_Constants.TIE_WIDTH_SINGLE = 3;
nx3_Constants.TIE_HEIGHT = 1.6;
nx3_Constants.LEGER_MARGIN = 0.6;
nx3_Constants.OBJECT_XMARGIN = 0.6;
nx3_Constants.ATTRIBUTE_SIGN_WIDTH = 2.4;
nx3_Constants.SCORE_DEFAULT_COUNTIN = 0;
nx3_Constants.SCORE_DEFAULT_TEMPO = 80;
nx3_Constants.BAR_SPACING_DEFAULT = 8;
nx3_ENoteValTools.DOT = 1.5;
nx3_ENoteValTools.DOTDOT = 1.75;
nx3_ENoteValTools.TRI = 0.66666666;
nx3_ENoteValTools.N1 = 4;
nx3_ENoteValTools.N2 = 2;
nx3_ENoteValTools.N4 = 1;
nx3_ENoteValTools.N8 = .5;
nx3_ENoteValTools.N16 = .25;
nx3_ENoteValTools.N32 = .125;
nx3_ENoteValTools.valNv1 = 12096;
nx3_ENoteValTools.valNv1dot = 18144;
nx3_ENoteValTools.valNv1ddot = 21168;
nx3_ENoteValTools.valNv1tri = 8063;
nx3_ENoteValTools.valNv2 = 6048;
nx3_ENoteValTools.valNv2dot = 9072;
nx3_ENoteValTools.valNv2ddot = 10584;
nx3_ENoteValTools.valNv2tri = 4031;
nx3_ENoteValTools.valNv4 = 3024;
nx3_ENoteValTools.valNv4dot = 4536;
nx3_ENoteValTools.valNv4ddot = 5292;
nx3_ENoteValTools.valNv4tri = 2015;
nx3_ENoteValTools.valNv8 = 1512;
nx3_ENoteValTools.valNv8dot = 2268;
nx3_ENoteValTools.valNv8ddot = 2646;
nx3_ENoteValTools.valNv8tri = 1007;
nx3_ENoteValTools.valNv16 = 756;
nx3_ENoteValTools.valNv16dot = 1134;
nx3_ENoteValTools.valNv16ddot = 1323;
nx3_ENoteValTools.valNv16tri = 503;
nx3_ENoteValTools.valNv32 = 378;
nx3_ENoteValTools.valNv32dot = 567;
nx3_ENoteValTools.valNv32ddot = 661;
nx3_ENoteValTools.valNv32tri = 251;
nx3_PBaseRectCalculator.BASERECT_HEIGHT = 3;
nx3_PBaseRectCalculator.BASERECT_HEIGHT_X_2 = 6.;
nx3_PBaseRectCalculator.BASERECT_MARGIN = 0.6;
nx3_PBaseRectCalculator.BASERECT_MARGIN_X_2 = 1.2;
nx3_PColumnsAllotmentCalculator.delta = 0.5;
nx3_PSystemBarsGenerator.defaultClef = nx3_EClef.ClefF;
nx3_PSystemBarsGenerator.defaultKey = nx3_EKey.Flat2;
nx3_qs_QSParserTools.relaceSlash = "---";
nx3_render_TargetSvgXml.SVG_EXTRA_HEIGHT = 5;
nx3_render_scaling_Scaling.MID = { linesWidth : 1.25, space : 12.0, unitY : 6.0, noteWidth : 10, unitX : 5, quarterNoteWidth : 2.5, signPosWidth : 14.0, svgScale : .27, svgX : 0, svgY : -55.0, fontScaling : 1.5};
nx3_render_scaling_Scaling.NORMAL = { linesWidth : .75, space : 8.0, unitY : 4.0, noteWidth : 7.0, unitX : 3.5, quarterNoteWidth : 1.75, signPosWidth : 9.5, svgScale : .175, svgX : 0, svgY : -36.0, fontScaling : 1.0};
nx3_render_scaling_Scaling.SMALL = { linesWidth : .5, space : 6.0, unitY : 3.0, noteWidth : 5.0, unitX : 2.5, quarterNoteWidth : 1.25, signPosWidth : 7.0, svgScale : .14, svgX : 0, svgY : -28.5, fontScaling : 0.75};
nx3_render_scaling_Scaling.MINI = { linesWidth : .5, space : 4.0, unitY : 2.0, noteWidth : 3.3333333333333335, unitX : 1.6666666666666667, quarterNoteWidth : 0.83333333333333337, signPosWidth : 4.666666666666667, svgScale : 0.093333333333333338, svgX : 0, svgY : -19., fontScaling : 0.5};
nx3_render_scaling_Scaling.BIG = { linesWidth : 1.5, space : 16.0, unitY : 8.0, noteWidth : 14.0, unitX : 7.0, quarterNoteWidth : 5.5, signPosWidth : 19.0, svgScale : .36, svgX : -0.0, svgY : -74.0, fontScaling : 2.0};
nx3_render_scaling_Scaling.PRINT1 = { linesWidth : 3, space : 32.0, unitY : 16.0, noteWidth : 28.0, unitX : 14.0, quarterNoteWidth : 11.0, signPosWidth : 38.0, svgScale : .72, svgX : -0.0, svgY : -148.0, fontScaling : 4.0};
nx3_render_svg_SvgElements.pauseNv2 = "<svg><g><rect height=\"23\" width=\"50\" x=\"8\" y=\"210\" /></g></svg>";
nx3_render_svg_SvgElements.pauseNv1 = "<svg><g><rect height=\"26\" width=\"50\" x=\"8\" y=\"234\" /></g></svg>";
nx3_render_svg_SvgElements.clefG = "<svg><g><path style=\"fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:none\"\r\n\t\t\td=\"m 95.72971,266.7949 c -5.57504,2.79274 -12.48498,4.1891 -20.72511,4.1891 -9.69981,0 -18.99938,-1.66998 -27.91049,-5.00757 -8.90876,-3.33996 -16.75807,-7.86163 -23.54558,-13.56975 -6.78751,-5.70339 -12.24248,-12.38094 -16.36254,-20.03029 -4.12007,-7.64934 -6.1801,-15.78458 -6.1801,-24.40572 0,-29.26234 20.72746,-61.31506 62.18472,-96.1605 -1.3349,-5.34251 -2.33313,-10.74399 -2.99941,-16.209153 -0.66627,-5.460449 -1.00058,-11.107236 -1.00058,-16.938007 0,-8.010226 0.66392,-15.871864 1.99646,-23.582532 1.3302,-7.710668 3.23955,-14.935434 5.72336,-21.674325 2.48617,-6.738864 5.54208,-12.869193 9.17715,-18.393316 3.63272,-5.5265031 7.814,-10.1708424 12.53677,-13.9306366 16.47555,22.8253826 24.71097,44.6247216 24.71097,65.3862176 0,13.480109 -3.18069,26.321 -9.54442,38.522682 -6.36138,12.20404 -16.32959,24.07079 -29.90225,35.60967 l 7.99763,38.42834 c 4.36256,-0.35616 6.78751,-0.53307 7.2725,-0.53307 6.05767,0 11.72453,1.09209 16.99586,3.27863 5.27368,2.18418 9.88109,5.18919 13.82693,9.01269 3.94349,3.82349 7.07003,8.34517 9.37727,13.56502 2.30488,5.21986 3.4585,10.86193 3.46085,16.93329 -0.002,4.36836 -0.78869,8.68011 -2.36374,12.92581 -1.57504,4.25042 -3.814,8.28856 -6.72159,12.10969 -2.90994,3.82586 -6.36373,7.34272 -10.36137,10.55766 -3.99764,3.21965 -8.42141,5.98172 -13.26896,8.28856 0,-0.24294 0.18129,0.45523 0.54385,2.09218 0.36492,1.63932 0.8193,3.79048 1.36315,6.46291 0.5462,2.67008 1.18187,5.64443 1.90935,8.92306 0.72749,3.27626 1.36316,6.43224 1.90936,9.46556 0.5462,3.03568 1.02884,5.73878 1.45497,8.10222 0.42378,2.37052 0.63567,3.97681 0.63567,4.82595 0,5.70576 -1.21248,10.92561 -3.63508,15.65957 -2.42495,4.73396 -5.69746,8.80041 -9.81988,12.19933 -4.12006,3.39656 -8.90875,6.03833 -14.36136,7.9206 -5.45497,1.88226 -11.21364,2.82339 -17.27602,2.82339 -4.60506,0 -8.90641,-0.72885 -12.90875,-2.18654 -4,-1.45769 -7.515,-3.52157 -10.54502,-6.18929 -3.02765,-2.67244 -5.422,-5.91568 -7.18068,-9.73918 -1.75632,-3.82113 -2.63449,-8.03853 -2.63449,-12.64984 0,-3.27862 0.54621,-6.37563 1.63626,-9.2863 1.09005,-2.91066 2.60623,-5.39912 4.54384,-7.463 1.93996,-2.06389 4.3037,-3.7032 7.09122,-4.91323 2.78987,-1.21474 5.81989,-1.82329 9.09004,-1.82329 2.90994,0 5.63625,0.66988 8.18127,2.00492 2.54502,1.33503 4.72748,3.06634 6.54502,5.18919 1.81754,2.12521 3.27251,4.5547 4.36491,7.2861 1.09005,2.72905 1.63626,5.49111 1.63626,8.28384 0,6.31431 -2.33314,11.4752 -7.00176,15.48267 -4.66627,4.00512 -10.51205,6.37328 -17.54441,7.09976 5.57504,2.79509 11.329,4.19146 17.2666,4.1891 4.8452,0.002 9.57268,-0.87745 14.17773,-2.64177 4.6027,-1.75961 8.62859,-4.12777 12.08474,-7.10212 3.45379,-2.97436 6.24131,-6.43932 8.3602,-10.38547 2.11889,-3.94614 3.18069,-8.16354 3.18069,-12.65692 0,-1.70299 -0.18365,-3.58526 -0.54385,-5.64914 L 95.72971,266.7949 z M 95.18821,27.488123 c -1.21483,-0.243068 -2.30724,-0.365597 -3.27486,-0.365597 -3.75986,0 -7.24661,1.912917 -10.46026,5.738777 -3.21365,3.823478 -6.00352,8.80275 -8.36726,14.933079 -2.36374,6.132684 -4.21188,13.022518 -5.54914,20.671856 -1.33254,7.649365 -2.00117,15.298698 -2.00117,22.948042 0,3.158334 0.12478,6.194011 0.36492,9.10704 0.24485,2.91538 0.67333,5.70811 1.2831,8.37819 24.73216,-21.976242 37.09942,-41.768292 37.09942,-59.373819 0,-8.378205 -3.03237,-15.723276 -9.09475,-22.037568 z m 3.814,231.850857 c 5.94467,-4.37072 10.46026,-9.16837 13.55619,-14.39058 3.09123,-5.21986 4.63802,-10.86429 4.63802,-16.93801 0,-3.76216 -0.63802,-7.4347 -1.91171,-11.01996 -1.27134,-3.57818 -3.08887,-6.76718 -5.45497,-9.56227 -2.36609,-2.78801 -5.18657,-5.03588 -8.46143,-6.7318 -3.27486,-1.69828 -6.85108,-2.54506 -10.72865,-2.54506 -0.24249,0 -0.72749,0.0307 -1.45497,0.0873 -0.72513,0.0613 -1.75633,0.15097 -3.08887,0.2689 l 12.90639,60.83151 z M 81.56374,199.26225 c -3.75749,0.48354 -7.2725,1.42468 -10.545,2.82104 -3.27251,1.39637 -6.08828,3.12767 -8.45202,5.19155 -2.36374,2.06389 -4.24249,4.43205 -5.63625,7.10212 -1.39376,2.67244 -2.09064,5.58546 -2.09064,8.7438 0,9.34762 4.96527,17.11962 14.88874,23.31127 -8.24013,-1.33503 -14.84636,-4.52167 -19.81634,-9.56227 -4.96997,-5.03823 -7.45378,-11.38084 -7.45378,-19.03255 0,-4.49101 0.93937,-8.83106 2.81812,-13.02016 1.87875,-4.18909 4.39317,-7.95598 7.54325,-11.30065 3.15479,-3.34703 6.85108,-6.23647 11.09121,-8.66595 4.24249,-2.43421 8.72748,-4.13721 13.45261,-5.10664 l -7.63507,-36.42579 c -17.08768,12.86684 -30.02468,25.49546 -38.81101,37.88112 -8.78633,12.38567 -13.1795,24.64868 -13.1795,36.79139 0,6.67755 1.48322,12.99421 4.45438,18.94292 2.97115,5.95106 6.9735,11.14026 12.00469,15.5723 5.03119,4.4344 10.85107,7.92531 17.45966,10.47274 6.60623,2.55214 13.60563,3.82821 20.9982,3.82821 4.24249,0 8.18127,-0.39627 11.81634,-1.18408 3.63743,-0.79017 7.03001,-2.03558 10.1801,-3.73386 L 81.56374,199.26225 z\" />\r\n\t\t</g></svg>";
nx3_render_svg_SvgElements.clefC = "<svg><g><path style=\"fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:none\"\r\n\t\t\td=\"M 90,276 C 86,276 81,275 77,274 73,273 70,271 67,268 64,266 61,263 60,260 58,256 57,253 57,249 57,247 57,245 58,243 59,241 60,239 61,238 63,236 64,235 66,234 68,233 70,232 72,232 74,232 76,233 77,233 79,234 81,236 82,237 84,238 85,240 86,242 87,244 87,246 87,248 87,250 86,252 85,253 84,255 82,256 80,258 79,259 77,260 76,261 75,262 74,262 74,263 74,267 79,269 88,269 92,269 96,268 98,267 101,266 103,264 105,261 107,258 108,255 109,250 110,245 110,239 110,232 110,228 110,224 109,220 108,216 107,212 105,210 104,207 102,204 100,203 98,201 96,200 93,200 84,200 76,207 67,222 66,217 65,213 64,209 63,205 62,201 60,199 59,196 57,193 55,192 53,190 52,189 49,189 48,189 47,189 46,190 L 46,275 39,275 39,93 46,93 46,179 C 46,179 47,179 47,179 48,180 48,180 49,180 51,180 53,179 55,177 57,175 59,173 60,170 62,167 63,163 64,159 65,155 66,151 67,147 77,160 86,166 92,166 94,166 97,165 99,164 101,162 103,160 104,157 106,155 107,151 108,148 109,144 109,140 109,135 109,128 109,122 108,117 107,113 106,109 104,107 102,104 99,102 96,101 93,100 89,100 84,100 75,100 71,102 71,105 71,106 73,107 75,108 80,110 83,112 85,114 86,116 87,118 87,121 87,123 87,124 86,126 85,128 84,130 83,131 81,133 80,134 78,135 76,136 74,137 72,137 68,137 64,135 61,132 58,129 56,125 56,120 56,114 58,108 62,102 66,98 70,95 74,94 79,93 83,92 88,92 95,92 101,93 106,95 112,96 116,99 120,102 124,105 127,110 129,114 131,119 132,125 132,131 132,136 131,142 129,147 128,152 125,157 122,161 119,165 116,168 112,170 108,173 103,174 98,174 89,174 81,172 76,169 L 76,169 C 74,169 72,170 71,173 70,175 69,178 69,182 69,184 69,186 69,188 70,191 70,193 71,194 72,196 72,197 73,198 74,199 75,200 76,200 79,197 82,194 86,193 89,191 93,190 97,190 102,190 107,191 111,194 116,196 120,200 123,204 126,209 129,214 130,219 132,225 133,231 133,237 133,250 129,259 122,266 114,273 104,276 90,276 Z M 27,93 L 27,275 4,275 4,93 27,93 Z\"/>\r\n\t\t</g></svg>";
nx3_render_svg_SvgElements.clefF = "<svg><g><path style=\"fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:none\"\r\n\t\t\td=\"M 8,240 C 21,236 32,230 39,224 45,218 51,211 57,204 62,197 67,190 70,183 74,176 77,168 79,161 81,153 82,146 82,139 82,133 81,127 80,122 78,118 76,113 73,110 70,106 66,103 62,101 58,99 53,98 48,98 44,98 41,99 37,100 33,101 30,103 27,106 24,108 22,111 20,114 18,117 17,120 17,123 17,125 17,126 18,126 18,126 18,126 19,125 20,125 20,124 22,123 23,123 24,122 26,122 27,121 29,121 31,121 33,121 35,121 36,122 38,123 40,124 41,126 42,127 43,129 44,131 45,133 45,135 45,137 45,143 43,147 40,151 36,155 32,157 26,157 23,157 20,156 18,155 16,154 14,152 12,149 10,147 9,144 8,141 7,138 7,134 7,131 7,126 8,121 11,116 13,111 16,107 21,104 25,101 29,98 35,96 40,94 46,93 52,93 62,93 71,95 78,98 85,101 91,105 95,111 99,116 102,122 104,128 105,134 106,140 106,147 106,150 106,154 105,157 105,161 104,164 102,168 101,172 99,176 97,180 94,185 91,190 88,195 84,202 78,209 71,215 64,221 57,226 50,230 43,235 36,238 29,240 23,243 18,244 14,244 10,244 8,243 8,240 Z M 121,116 C 121,113 122,111 124,110 125,108 127,107 130,107 133,107 135,108 136,110 138,111 139,113 139,116 139,119 138,121 136,122 135,124 133,125 130,125 127,125 125,124 124,122 122,121 121,119 121,116 Z M 121,162 C 121,159 122,157 124,156 125,154 127,153 130,153 133,153 135,154 136,156 138,157 139,159 139,162 139,165 138,167 136,168 135,170 133,171 130,171 127,171 125,170 124,168 122,167 121,165 121,162 Z\"/>\r\n\t\t</g></svg>";
nx3_render_svg_SvgElements.HVT4 = nx3_render_svg_SvgElements.noteBlack;
nx3_render_svg_SvgElements.noteBlack = "<svg><g><path style=\"fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:none\"\r\n\t\t\td = \"m 20.557649,250.57631 c -5.81753,-0.002 -10.6650905,-1.36806 -14.5450105,-4.0971 -3.87756,-2.73612 -5.81516995,-6.6516 -5.81516995,-11.74881 0,-4.12777 1.30193995,-8.10458 3.90816995,-11.92807 2.60387,-3.82585 5.9069905,-7.19411 9.9070005,-10.1095 3.99998,-2.91302 8.452014,-5.24816 13.360774,-7.01013 4.90876,-1.7596 9.66448,-2.63941 14.2719,-2.63941 6.1801,0 11.17834,1.42467 14.99703,4.27637 3.81636,2.85406 5.72572,6.70821 5.72572,11.56483 0,4.00747 -1.30195,7.92295 -3.90817,11.7488 -2.60623,3.8235 -5.93761,7.19412 -9.99882,10.10714 -4.05885,2.91303 -8.54382,5.27883 -13.45258,7.10448 -4.90878,1.81858 -9.72573,2.72905 -14.450844,2.7314 z\" />\r\n\t\t</g></svg>";
nx3_render_svg_SvgElements.HVT2 = nx3_render_svg_SvgElements.noteWhite;
nx3_render_svg_SvgElements.noteWhite = "<svg><g><path style=\"fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:none\"\r\n\t\t\td=\"m -0.01820308,235.29885 c 0,-4.12777 1.15125988,-8.19421 3.45376988,-12.20168 2.30253,-4.00747 5.3325496,-7.55735 9.0900592,-10.65436 3.7575,-3.09701 7.96936,-5.58546 12.63565,-7.46772 4.66627,-1.88227 9.30428,-2.8234 13.90934,-2.8234 7.63741,0 13.69743,1.60865 18.18243,4.82831 4.48262,3.2173 6.72393,7.73898 6.72863,13.56739 -0.005,4.25042 -1.21482,8.25553 -3.63977,12.02006 -2.4226,3.76452 -5.57504,7.04315 -9.4526,9.83588 -3.87756,2.79037 -8.30134,5.00522 -13.27367,6.64689 -4.96763,1.63695 -10.06001,2.45779 -15.27249,2.46015 -6.18245,-0.002 -11.45615,-1.42939 -15.8186992,-4.28109 -4.36254,-2.85641 -6.54264988,-6.83322 -6.54264988,-11.93043 z M 49.439026,207.62158 c -1.93759,0 -4.39551,0.48589 -7.3643,1.45769 -2.97117,0.96944 -6.15186,2.2455 -9.54915,3.82113 -3.39257,1.57799 -6.75924,3.39893 -10.09297,5.46517 -3.33606,2.06388 -6.36843,4.18438 -9.09475,6.37091 -2.731,2.18182 -4.9417295,4.39902 -6.6391792,6.64453 -1.69512,2.24787 -2.54502,4.28109 -2.54738,6.10202 0.002,5.7034 3.4561299,8.55746 10.3684392,8.55746 3.27486,0 7.45849,-1.06143 12.55087,-3.18664 5.09241,-2.12285 10.0624,-4.73396 14.91464,-7.82861 4.84756,-3.097 9.03119,-6.34497 12.54619,-9.74153 3.51735,-3.40128 5.27603,-6.4346 5.27603,-9.10468 0,-5.7034 -3.45377,-8.55745 -10.36844,-8.55745 z\" />\r\n\t\t</g></svg>";
nx3_render_svg_SvgElements.HVT1 = nx3_render_svg_SvgElements.noteWhole;
nx3_render_svg_SvgElements.noteWhole = "<svg><g><path style=\"fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:none\"\r\n\t\t\td=\"m 0.14197458,226.9183 c 0,-3.64187 1.21011002,-6.97946 3.63271012,-10.01514 2.4226,-3.03568 5.66217,-5.64679 9.7233503,-7.83569 4.0565,-2.18182 8.692204,-3.85179 13.899944,-5.00757 5.21012,-1.15106 10.54031,-1.72894 15.99057,-1.7313 5.09006,0.002 10.08827,0.64157 14.99232,1.91292 4.9064,1.27843 9.32782,3.00738 13.26661,5.19156 3.93643,2.18653 7.11712,4.76698 9.54208,7.74133 2.42025,2.97671 3.63271,6.22468 3.63271,9.74389 0,3.88718 -1.0312,7.34743 -3.08885,10.38311 -2.06004,3.03568 -4.99825,5.58546 -8.81461,7.64935 -3.81636,2.06388 -8.38843,3.67253 -13.71862,4.8283 -5.33019,1.15106 -11.26544,1.72895 -17.8081,1.73131 -5.81517,-0.002 -11.23482,-0.58025 -16.26603,-1.73131 -5.026479,-1.15577 -9.389044,-2.79508 -13.082984,-4.9203 -3.6962903,-2.12521 -6.6015203,-4.70565 -8.7204103,-7.73897 -2.1212401,-3.03568 -3.18069012,-6.43696 -3.18069012,-10.20149 z m 65.06407442,9.28158 c 0,-4.00511 -1.39376,-8.80276 -4.18363,-14.38822 -1.33254,-2.67007 -2.75691,-5.00757 -4.27074,-7.01248 -1.51618,-2.00256 -3.18305,-3.61121 -5.00057,-4.82595 -1.81754,-1.21239 -3.90817,-2.12522 -6.27193,-2.73141 -2.36373,-0.60619 -5.06179,-0.91047 -8.09181,-0.91047 -11.63506,0 -17.452602,4.675 -17.452602,14.02498 0,3.51922 0.696896,6.88984 2.090662,10.10714 1.39376,3.2173 3.24189,6.10202 5.54443,8.6518 2.30253,2.54978 4.84756,4.583 7.63508,6.09966 2.78751,1.51902 5.63859,2.27853 8.54853,2.27853 2.6651,0 5.17951,-0.12266 7.54324,-0.3656 2.36376,-0.24296 4.485,-0.72885 6.36375,-1.45769 1.8811,-0.72649 3.48674,-1.8516 4.81694,-3.36826 1.33489,-1.51666 2.24367,-3.55224 2.72865,-6.10203 z\" />\r\n\t\t</g></svg>";
nx3_render_svg_SvgElements.signNatural = "<svg><g><path style=\"fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:none;display:inline\"\r\n\t\t\td=\"m 27.763524,289.1105 0,-36.43051 -27.82574358,9.65191 0,-97.8116 4.52499988,0 0.0183,36.60977 27.8092637,-9.83589 0,97.81632 -4.52736,0 z m -23.3007437,-42.80378 23.3007437,-8.38055 -0.0157,-30.60209 -23.2842537,8.55981 0,30.42283 z\" />\t\r\n\t\t</g></svg>";
nx3_render_svg_SvgElements.signSharp = "<svg><g><path style=\"fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:none;display:inline\"\r\n\t\t\td=\"m 31.526296,208.23455 -17.48556,5.8284 0.0157,31.51021 17.46908,-5.82841 0,-31.5102 z m 4.52736,-43.89588 0.0131,26.0474 9.44083,-3.09464 0,16.5724 -9.4526,3.097 0,31.50785 9.4526,-3.09701 0,16.57476 -9.4526,3.09701 0,28.59482 -4.52736,0 0,-27.32111 -17.48556,5.82841 0,27.31875 -4.52736,0 0,-26.04268 -9.4526,3.09464 0,-16.57239 9.4526,-3.09701 -0.0131,-31.50785 -9.43847,3.09465 0,-16.5724 9.4526,-3.09701 0,-28.59482 4.52736,0 0.0157,27.32111 17.46908,-5.82841 0,-27.32347 4.52736,0 z\" />\t\r\n\t\t</g></svg>";
nx3_render_svg_SvgElements.signFlat = "<svg><g><path style=\"fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:none;display:inline\"\r\n\t\t\t\td=\"m 0.119631,150.69109 5.81283,0 -1.25721,57.37598 c 3.63742,-5.96993 9.26898,-8.95607 16.901689,-8.95371 2.66507,-0.002 5.23835,0.45287 7.72451,1.3657 2.48383,0.91046 4.63332,2.15823 6.45084,3.73622 1.8152,1.58034 3.27018,3.46025 4.36022,5.64914 1.09004,2.18654 1.63625,4.55234 1.63625,7.10684 -0.24254,3.52158 -1.54679,7.44178 -3.90817,11.75353 -2.36373,4.3141 -6.39435,8.53622 -12.08944,12.66399 l -25.631519,18.95235 0,-109.65004 z m 16.901689,55.71308 c -5.082969,0 -8.960559,2.55214 -11.620919,7.65407 -0.71102,6.92521 -1.06652,12.87863 -1.06652,17.86026 0,8.62586 0.29665,14.63825 0.88758,18.03953 2.30253,-1.45769 4.75337,-3.61121 7.35491,-6.46763 2.603867,-2.85641 4.991139,-5.89445 7.171249,-9.11175 2.17775,-3.21966 3.96469,-6.43696 5.35609,-9.65898 1.39141,-3.21966 2.08592,-6.04541 2.08827,-8.47254 -0.002,-2.79509 -0.96997,-5.13494 -2.90523,-7.0172 -1.93762,-1.88463 -4.35784,-2.82576 -7.26543,-2.82576 z\" />\r\n\t\t</g></svg>";
nx3_render_svg_SvgElements.flagDown8 = "<svg><g><path style=\"fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:none\" \r\n\t\t\td=\"M 10,227 C 12,227 14,227 15,227 16,227 17,226 19,226 20,225 22,224 23,223 25,222 27,220 30,218 39,211 44,206 46,205 54,195 58,185 58,174 58,166 55,156 48,144 48,143 47,142 47,141 47,140 48,139 48,139 49,139 50,140 52,142 53,144 55,146 56,149 57,152 59,155 60,158 61,161 62,164 62,166 63,171 64,176 64,181 64,186 63,190 61,195 60,200 57,204 54,209 50,213 47,216 43,220 39,224 36,228 33,232 29,237 25,243 22,249 18,255 15,262 13,269 12,269 12,270 12,271 12,271 12,272 13,272 13,273 12,273 10,273 L 10,227 Z\"/>\r\n\t\t</g></svg>";
nx3_render_svg_SvgElements.flagUp8 = "<svg><g><path style=\"fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:none\" \r\n\t\t\td=\"M 12,181 C 14,181 15,181 14,181 14,181 14,182 14,182 14,183 14,184 14,184 20,199 27,211 35,221 45,234 50,241 52,243 56,250 58,258 58,266 L 58,267 C 58,273 58,278 57,282 56,287 55,291 53,294 52,297 51,299 50,301 48,302 48,303 47,303 46,303 46,303 46,302 46,301 46,300 47,298 48,295 49,293 50,291 50,290 51,288 51,286 51,284 52,282 52,280 52,277 52,274 52,270 L 52,269 C 52,256 45,245 30,234 28,233 27,232 26,231 25,230 24,230 22,229 21,228 20,228 18,227 16,227 14,227 12,227 L 12,181 Z\"/>\r\n\t\t</g></svg>";
nx3_render_svg_SvgElements.flagDown16 = "<svg><g><path style=\"fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:none\" \r\n\t\t\td=\"M 65,152 C 65,157 64,162 63,165 65,169 66,175 66,181 66,186 65,191 64,196 62,200 59,205 56,209 52,213 49,217 45,221 42,224 38,228 35,232 31,238 27,243 23,250 20,256 17,262 15,269 15,269 15,270 15,271 15,271 15,272 15,272 15,273 14,273 12,273 L 12,192 C 16,192 20,192 24,190 28,188 32,186 36,183 39,181 42,178 45,176 47,174 49,172 50,171 55,165 58,158 58,150 58,143 56,135 53,127 52,125 51,124 51,123 51,122 52,122 53,122 55,122 56,123 58,126 59,129 60,132 61,136 62,139 63,143 64,146 65,149 65,151 65,152 Z M 60,179 C 60,178 60,177 60,177 60,176 60,175 60,174 59,175 58,177 55,180 53,182 50,185 47,187 45,190 42,192 40,194 37,196 36,198 35,199 29,207 23,216 19,226 20,225 22,225 24,224 26,222 28,221 30,219 36,214 41,210 44,207 48,204 50,202 50,202 57,195 60,187 60,179 Z\"/>\r\n\t\t</g></svg>";
nx3_render_svg_SvgElements.flagUp16 = "<svg><g><path style=\"fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:none\" \r\n\t\t\td=\"M 52,321 C 51,321 50,321 50,320 50,319 51,318 51,316 51,314 52,312 52,310 53,308 53,305 53,303 54,301 54,299 54,297 54,295 54,293 53,291 52,290 51,288 50,286 48,284 46,281 43,279 40,276 36,273 31,269 28,268 27,266 25,265 23,264 22,263 21,263 20,262 19,262 17,262 16,262 15,262 13,262 L 13,181 14,181 C 14,181 15,181 15,182 15,182 15,183 16,184 19,196 26,208 36,221 39,225 41,228 45,232 48,235 51,239 53,242 56,246 58,250 59,255 60,259 61,264 61,269 61,275 60,281 58,285 59,286 59,288 59,290 60,292 60,295 60,298 L 60,298 C 60,300 60,302 59,305 59,307 58,310 57,312 56,315 56,317 55,318 54,320 53,321 52,321 Z M 55,272 C 55,263 53,256 48,250 48,250 46,249 44,247 42,245 40,242 37,240 34,237 31,235 28,233 24,230 22,229 19,228 22,233 24,238 27,243 30,247 32,252 36,255 36,256 37,257 39,259 41,260 43,262 45,264 47,267 49,269 51,271 53,273 54,275 55,277 55,276 55,275 55,274 55,273 55,272 55,272 Z\"/>\r\n\t\t</g></svg>";
nx3_render_svg_SvgElements.pauseNv4 = "<svg><g><path style=\"fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:none\"\r\n\t\t\td=\"M 54,263 C 49,261 43,260 38,260 34,260 30,261 27,263 24,266 22,269 22,273 22,280 26,287 34,294 33,295 33,295 32,295 31,295 29,294 26,292 23,291 20,288 17,285 14,283 12,280 9,276 7,273 6,269 6,266 6,264 6,261 7,258 8,256 9,254 11,252 12,250 14,248 17,247 19,246 21,245 24,245 28,245 31,246 35,248 34,246 32,244 30,241 29,239 27,237 24,234 22,231 20,228 17,225 14,221 11,217 7,213 20,201 26,191 26,181 26,179 25,176 24,173 23,170 21,167 19,165 18,162 16,160 15,158 13,156 13,155 13,155 13,154 14,153 16,153 L 48,198 C 37,212 31,222 31,228 31,231 32,233 34,236 35,239 37,242 40,245 42,248 45,251 47,254 50,257 52,260 54,263 Z\" />\r\n\t\t</g></svg>";
nx3_render_svg_SvgElements.pauseNv8 = "<svg><g><path style=\"fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:none\"\r\n\t\t\td=\"M 30,273 L 22,273 52,208 C 42,211 34,213 28,213 17,213 11,208 11,199 11,197 12,194 15,193 18,191 21,190 24,190 31,190 34,193 34,199 34,202 33,205 31,209 32,209 32,209 34,209 42,209 50,205 60,197 L 30,273 Z\"/>\r\n\t\t</g></svg>";
nx3_render_svg_SvgElements.pauseNv16 = "<svg><g><path style=\"fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:none\"\r\n\t\t\td=\"M 26,314 L 18,314 44,253 C 37,256 30,258 23,258 12,258 6,254 6,245 6,242 8,240 10,238 13,236 16,235 20,235 27,235 30,238 30,244 30,246 29,249 27,253 28,253 29,253 29,253 30,253 31,253 31,253 34,253 39,252 46,249 L 65,207 C 57,210 49,212 42,212 31,212 25,208 25,200 25,197 26,194 29,192 31,190 34,189 38,189 44,189 48,192 48,198 48,201 47,204 45,208 46,208 47,208 48,208 53,208 62,204 73,196 L 26,314 Z\"/>\r\n\t\t</g></svg>";
nx3_render_svg_SvgElements.time0 = "<svg><g><path style=\"fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:none\" \r\n\t\t\td=\"M 81,227 C 81,232 80,238 78,243 76,248 74,252 70,256 67,260 63,263 59,265 54,268 50,269 45,269 40,269 35,268 30,265 26,263 22,260 19,256 16,252 13,247 11,242 9,237 8,232 8,227 8,222 9,216 11,211 13,206 16,202 19,197 22,193 26,190 30,188 35,185 40,184 45,184 49,184 54,185 58,188 63,190 67,193 70,197 73,201 76,206 78,211 80,216 81,221 81,227 Z M 58,229 C 58,202 54,189 45,189 36,189 31,202 31,227 31,252 36,264 45,264 54,264 58,252 58,229 Z\"/>\r\n\t\t</g></svg>";
nx3_render_svg_SvgElements.time1 = "<svg><g><path style=\"fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:none\" \r\n\t\t\td=\"M 10,269 C 10,266 11,264 13,264 16,263 18,262 19,261 20,259 20,257 20,253 L 20,215 C 20,211 20,208 19,207 19,207 18,208 17,210 16,211 15,212 13,214 12,216 11,217 9,219 8,220 8,221 7,221 7,221 6,221 5,221 14,203 19,191 20,184 21,184 23,185 25,185 26,185 29,185 31,185 37,185 41,185 43,184 L 43,253 C 43,257 44,259 45,261 46,262 47,262 48,263 50,263 51,264 52,264 53,265 54,266 54,269 L 10,269 Z\"/>\r\n\t\t</g></svg>";
nx3_render_svg_SvgElements.time2 = "<svg><g><path style=\"fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:none\" \r\n\t\t\td=\"M 76,239 C 75,260 68,271 55,271 53,271 51,270 48,269 45,268 41,267 38,266 35,265 32,263 29,262 26,261 24,261 23,261 21,261 19,261 18,262 17,263 16,263 15,264 14,265 13,266 12,267 11,267 10,268 9,268 8,268 7,267 7,267 7,263 8,259 10,257 12,255 13,252 15,250 18,245 23,240 29,236 34,232 38,229 40,227 43,225 45,223 47,221 48,219 49,217 49,215 50,213 50,211 50,209 50,204 49,199 46,196 43,193 39,191 34,191 28,191 24,193 22,196 24,197 27,199 29,201 31,203 32,205 32,208 32,210 32,211 31,213 30,214 29,215 28,216 27,217 25,218 24,219 22,219 21,220 19,220 12,220 8,216 8,208 8,200 11,194 17,189 23,185 31,183 42,183 48,183 54,184 58,186 62,188 65,190 68,192 70,195 72,198 73,201 74,204 74,206 74,208 74,214 72,219 68,223 67,224 64,225 61,227 57,229 53,231 49,233 44,235 40,237 36,239 32,241 29,243 27,245 L 27,245 C 27,245 28,245 29,245 29,245 30,245 31,245 33,245 35,245 38,246 41,247 44,247 48,248 51,249 54,250 56,251 59,252 61,252 62,252 65,252 68,251 69,249 69,249 70,248 71,246 71,244 73,242 76,239 Z\"/>\r\n\t\t</g></svg>";
nx3_render_svg_SvgElements.time3 = "<svg><g><path style=\"fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:none\" \r\n\t\t\td=\"M 70,245 C 70,253 67,260 61,264 56,268 48,270 37,270 33,270 29,270 25,269 21,268 18,267 15,265 12,263 10,261 8,259 7,257 6,254 6,251 6,248 7,245 10,243 12,241 15,240 18,240 21,240 24,241 26,243 28,245 29,247 29,250 29,255 27,259 24,262 26,264 30,265 35,265 39,265 43,263 45,260 48,257 49,253 49,249 49,243 48,239 46,237 44,234 41,232 37,231 33,231 30,231 28,230 25,230 24,229 24,228 24,227 24,225 24,225 24,224 25,223 25,223 26,223 27,223 28,223 29,223 30,222 32,222 37,222 41,220 44,218 47,216 48,212 48,206 48,195 43,189 32,189 28,189 25,190 23,192 25,194 26,196 28,198 29,200 30,202 30,205 30,208 29,211 27,212 24,214 22,215 19,215 15,215 13,214 10,212 8,210 7,207 7,203 7,197 10,192 15,189 21,186 28,184 37,184 46,184 54,186 60,190 65,194 68,199 68,207 68,211 67,215 64,219 61,222 58,225 53,226 L 54,227 C 58,228 62,230 65,233 68,236 70,240 70,245 Z\"/>\r\n\t\t</g></svg>";
nx3_render_svg_SvgElements.time4 = "<svg><g><path style=\"fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:none\" \r\n\t\t\td=\"M 66,250 L 66,255 C 66,256 66,256 66,257 66,257 66,258 66,258 66,260 67,262 68,262 69,263 72,264 76,264 L 77,269 32,269 32,264 C 38,264 41,262 42,261 43,260 43,256 43,250 L 6,250 6,243 C 8,239 11,235 14,230 16,225 19,220 21,215 23,209 25,204 26,199 28,193 29,189 29,184 L 60,184 C 58,192 52,202 41,213 28,226 21,235 18,242 L 43,242 43,221 66,201 66,242 78,242 78,250 66,250 Z\"/>\r\n\t\t</g></svg>";
nx3_render_svg_SvgElements.time5 = "<svg><g><path style=\"fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:none\" \r\n\t\t\td=\"M 4,249 C 4,245 5,242 8,239 10,236 13,235 16,235 25,235 29,239 29,247 29,248 29,250 28,251 27,253 27,254 26,255 25,256 24,258 24,258 23,259 22,260 22,260 24,263 28,264 32,264 43,264 48,256 48,241 48,234 47,230 44,226 42,222 38,220 33,220 29,220 24,222 18,225 17,225 17,225 17,226 17,226 16,226 16,226 16,227 15,227 14,227 13,227 11,227 9,228 9,223 10,217 10,209 11,202 11,193 12,183 20,185 31,186 44,186 52,186 61,185 69,184 68,197 56,204 34,204 34,204 32,204 31,204 30,204 28,204 27,204 25,203 23,203 22,203 21,203 20,203 19,203 19,203 18,204 18,205 18,206 18,207 18,209 18,210 17,212 17,213 17,215 17,217 17,218 24,215 31,213 39,213 43,213 47,214 51,215 56,216 59,218 62,220 65,223 68,226 69,229 71,232 72,236 72,240 72,245 71,249 69,252 67,256 65,259 62,261 58,264 55,266 50,267 46,268 41,269 36,269 31,269 26,268 23,267 19,266 15,265 13,263 10,261 8,259 6,256 5,254 4,251 4,249 Z\"/>\r\n\t\t</g></svg>";
nx3_render_svg_SvgElements.time6 = "<svg><g><path style=\"fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:none\" \r\n\t\t\td=\"M 74,241 C 74,245 73,249 72,253 70,257 68,260 65,262 62,265 59,267 55,268 51,269 46,270 42,270 30,270 21,266 15,259 9,251 6,240 6,227 6,221 7,215 9,210 10,204 13,200 16,196 19,192 23,189 27,186 31,184 36,183 41,183 46,183 49,183 53,184 57,185 60,186 63,188 66,189 68,191 69,193 71,196 72,198 72,201 72,204 71,207 68,210 66,212 63,213 59,213 55,213 52,212 50,209 47,207 46,204 46,201 46,200 46,198 47,196 48,195 48,193 48,192 48,189 46,188 42,188 40,188 38,189 36,190 34,192 33,194 32,196 31,198 30,201 29,204 28,207 28,211 28,214 28,214 28,215 28,217 28,219 28,221 28,223 35,220 43,218 50,218 57,218 63,220 67,224 72,228 74,234 74,241 Z M 43,226 C 34,226 29,232 29,245 29,258 33,264 41,264 49,264 53,258 53,245 53,232 50,226 43,226 Z\"/>\r\n\t\t</g></svg>";
nx3_render_svg_SvgElements.time7 = "<svg><g><path style=\"fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:none\" \r\n\t\t\td=\"M 77,188 C 77,194 72,207 63,227 54,245 50,259 50,269 L 50,271 C 47,270 42,270 34,270 32,270 29,270 27,270 25,270 24,271 22,271 23,257 32,242 49,225 55,219 59,214 61,209 56,212 50,213 45,213 44,213 41,213 39,212 36,211 34,210 31,209 28,208 26,207 23,206 21,206 20,205 19,205 18,205 16,207 15,209 14,212 13,214 12,217 10,215 9,213 8,211 L 8,203 C 8,203 8,201 8,200 8,198 8,197 8,195 L 8,186 C 14,188 17,190 17,190 18,190 18,189 20,189 21,188 23,187 25,186 26,185 28,185 30,184 32,183 34,183 36,183 38,183 40,184 42,185 45,186 48,188 50,190 53,192 55,193 57,195 59,196 61,197 62,197 67,197 71,193 72,187 L 74,187 C 76,187 77,187 77,188 Z\"/>\r\n\t\t</g></svg>";
nx3_render_svg_SvgElements.time8 = "<svg><g><path style=\"fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:none\" \r\n\t\t\td=\"M 75,244 C 75,248 74,251 72,255 71,258 68,260 65,263 62,265 58,267 54,268 50,269 46,270 42,270 37,270 32,269 28,268 24,267 21,266 18,264 15,262 12,259 11,256 9,253 8,250 8,246 8,242 9,238 12,234 14,231 18,229 22,227 14,223 10,216 10,207 10,203 11,200 12,197 14,195 16,192 19,190 21,188 25,187 28,186 32,185 36,184 40,184 50,184 58,186 64,189 70,193 73,198 73,204 73,213 69,219 61,225 70,229 75,235 75,244 Z M 60,203 C 60,198 58,195 55,192 52,190 47,189 41,189 31,189 26,193 26,200 26,208 34,214 50,219 57,215 60,210 60,203 L 60,203 Z M 58,252 C 58,249 57,247 56,246 54,244 52,242 49,240 47,239 44,237 40,235 37,234 33,232 30,231 23,234 20,240 20,246 20,251 22,256 26,259 30,262 35,263 41,263 45,263 49,262 53,260 56,258 58,255 58,252 Z\"/>\r\n\t\t</g></svg>";
nx3_render_svg_SvgElements.time9 = "<svg><g><path style=\"fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:none\" \r\n\t\t\td=\"M 4,212 C 4,202 7,195 13,190 20,185 28,183 39,183 50,183 58,187 64,195 70,203 73,213 73,227 73,233 72,238 70,244 68,249 66,253 63,257 59,261 55,264 51,267 46,269 41,270 36,270 32,270 29,270 25,269 22,268 19,267 16,265 14,263 11,262 10,259 8,257 7,255 7,252 7,249 8,246 11,244 13,241 15,240 19,240 23,240 26,241 28,244 30,246 31,249 31,253 31,254 31,255 30,257 30,259 29,260 29,261 29,264 31,265 35,265 45,265 50,254 50,232 L 50,229 C 42,233 35,235 29,235 21,235 15,233 11,229 6,225 4,219 4,212 Z M 38,189 C 34,189 30,191 28,195 25,198 24,203 24,209 24,214 25,218 27,222 29,225 32,227 36,227 45,227 50,221 50,209 50,203 49,199 47,195 45,191 42,189 38,189 Z\"/>\r\n\t\t</g></svg>";
nx3_render_svg_SvgElements.timeCommon = "<svg><g><path style=\"fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:none\" \r\n\t\t\td=\"M 78,247 C 77,250 76,253 74,255 72,258 70,261 67,263 64,265 61,267 58,268 55,269 52,270 49,270 43,270 37,269 32,267 27,264 23,261 19,257 16,253 13,248 11,243 9,238 8,232 8,226 8,220 9,214 11,209 13,204 15,199 19,196 22,192 26,189 31,187 36,185 42,184 48,184 51,184 55,184 59,185 62,186 66,187 68,189 71,190 73,192 75,194 76,197 77,199 77,202 77,205 76,208 73,210 71,212 68,213 65,213 62,213 59,212 56,210 53,208 52,205 52,202 52,198 54,193 59,189 56,189 54,189 52,189 48,189 45,190 42,192 39,193 36,196 34,199 32,202 31,205 30,210 29,214 28,218 28,224 28,229 29,234 30,239 31,244 33,248 35,252 37,256 39,259 42,261 45,264 48,265 52,265 60,265 69,259 78,247 Z\"/>\r\n\t\t</g></svg>";
nx3_render_svg_SvgElements.timeAllabreve = "<svg><g><path style=\"fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:none\" \r\n\t\t\td=\"M 39,191 C 30,197 26,207 26,223 26,227 26,230 27,234 28,238 29,241 30,245 31,248 32,251 34,254 35,257 37,259 39,261 L 39,191 Z M 74,247 C 73,250 72,253 70,256 68,259 66,261 63,263 61,265 58,267 55,268 52,270 49,270 46,270 L 45,270 45,284 39,284 39,270 C 34,269 29,267 25,264 21,262 18,259 15,255 12,251 10,246 8,241 7,236 6,231 6,225 6,220 7,215 8,210 10,205 12,201 15,198 18,194 21,191 25,188 29,186 34,185 39,184 L 39,171 45,171 45,184 C 49,184 52,184 56,185 59,186 63,187 65,189 68,191 70,192 72,195 73,197 74,199 74,202 74,205 73,207 70,210 68,212 65,213 62,213 59,213 56,212 53,210 50,208 49,205 49,202 49,198 51,193 56,189 55,189 54,189 52,189 51,188 50,188 49,188 48,188 48,188 47,188 46,188 46,188 45,189 L 45,265 C 46,265 48,265 49,265 57,265 66,259 74,247 Z\"/>\r\n\t\t</g></svg>";
nx3_render_svg_SvgElements.tplTestCircle = "\r\n\t<svg ><circle style=\"fill:none;stroke:#ff00ff;stroke-width:16.41697121;stroke-miterlimit:4;stroke-dasharray:none\" id=\"path3384\" cx=\"92.372879\" cy=\"174.15253\" r=\"76.117874\" /> </svg>\r\n\t";
nx3_render_svg_SvgElements.tplCircle = "\r\n\t\t<svg ><g visibility=\"visible\" id=\"page1\"><desc>Slide</desc><g><desc>Drawing</desc><g><g style=\"stroke:none;fill:#FFFFFFF\"><path d=\"M 93,253 C 78,253 66,250 53,242 41,235 32,226 25,214 17,201 14,189 14,175 14,160 17,148 25,135 32,123 41,114 53,107 66,99 78,96 92,96 107,96 119,99 132,107 144,114 153,123 160,135 168,148 171,160 171,174 171,189 168,201 160,214 153,226 144,235 132,242 119,250 107,253 93,253 L 93,253 Z\"/></g><g style=\"stroke:#000000;fill:none\"><path style=\"fill:none\" d=\"M 93,253 C 78,253 66,250 53,242 41,235 32,226 25,214 17,201 14,189 14,175 14,160 17,148 25,135 32,123 41,114 53,107 66,99 78,96 92,96 107,96 119,99 132,107 144,114 153,123 160,135 168,148 171,160 171,174 171,189 168,201 160,214 153,226 144,235 132,242 119,250 107,253 93,253\"/></g><g/></g></g><g><desc>Drawing</desc><g><g style=\"stroke:none;fill:#000000\"><path d=\"M 71,256 C 64,254 57,252 50,248 44,244 38,239 33,234 28,229 23,223 19,217 15,210 13,203 11,196 9,189 8,182 8,175 8,167 9,160 11,153 13,146 15,139 19,132 23,126 28,120 33,115 38,110 44,105 50,101 57,97 64,95 71,93 78,91 85,90 92,90 100,90 107,91 114,93 121,95 128,97 135,101 141,105 147,110 152,115 157,120 162,126 166,132 170,139 172,146 174,153 176,160 177,167 177,174 177,182 176,189 174,196 172,203 170,210 166,217 162,223 157,229 152,234 147,239 141,244 135,248 128,252 121,254 114,256 107,258 100,259 93,259 85,259 78,258 71,256 Z M 130,239 C 136,236 141,232 145,227 150,223 154,218 157,212 160,206 163,200 165,194 166,188 167,181 167,174 167,168 166,161 165,155 163,149 160,143 157,137 154,131 150,126 145,122 141,117 136,113 130,110 124,107 118,104 112,102 106,101 99,100 92,100 86,100 79,101 73,102 67,104 61,107 55,110 49,113 44,117 40,122 35,126 31,131 28,137 25,143 22,149 20,155 19,161 18,168 18,175 18,181 19,188 20,194 22,200 25,206 28,212 31,218 35,223 40,227 44,232 49,236 55,239 61,242 67,245 73,247 79,248 86,249 93,249 99,249 106,248 112,247 118,245 124,242 130,239 Z\"/></g><g style=\"stroke:none;fill:none\"><rect x=\"8\" y=\"89\" width=\"170\" height=\"171\"/></g><g/></g></g><g><desc>Drawing</desc><g><g style=\"stroke:none;fill:none\"><rect x=\"0\" y=\"464\" width=\"854\" height=\"964\"/></g><g/></g></g></g></svg>";
nx3_render_svg_SvgElements.tplArrowDown = "<svg><g><path style=\"fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:none\" \r\n\t\t d=\"m 93.219081,334.7112 26.789959,-45.28185 -16.80224,0 0,-27.26555 -19.974144,0 0,27.26555 -16.80224,0 26.788665,45.28185 z\"   />\r\n\t</g></svg>";
nx3_render_svg_SvgElements.tplArrowUp = "<svg><g>< path style = \"fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:none\" \r\n\t\td=\"m 93.220375,22.163798 -26.789959,45.281851 16.802241,0 0,27.265551 19.974143,0 0,-27.265551 16.80224,0 -26.788665,-45.281851 z\" />\r\n\t</g></svg>";
nx3_render_svg_SvgElements.tpl1 = "<svg><g><path style=\"fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:none\" \r\n\t\t\t d=\"M 106,225 L 93,225 93,146 C 90,149 86,152 82,155 77,158 73,160 69,161 L 69,149 C 76,146 82,142 87,137 92,133 96,128 98,124 L 106,124 106,225 Z\"/>\t\t\r\n\t\t</g></svg>";
nx3_render_svg_SvgElements.tpl2 = "<svg><g><path style=\"fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:none\" \r\n\t\t\td=\"M 124,212 L 124,225 58,225 C 58,222 58,219 59,216 61,211 64,207 67,202 71,197 76,192 83,187 93,178 101,171 104,166 108,161 110,157 110,152 110,148 108,144 105,141 102,138 97,136 92,136 86,136 82,138 78,141 75,144 73,148 73,154 L 60,152 C 61,143 64,136 70,131 75,126 83,124 92,124 102,124 109,127 115,132 120,137 123,144 123,152 123,156 122,160 121,164 119,168 117,172 113,176 109,180 103,186 95,193 87,199 83,203 80,206 78,208 77,210 75,212 L 124,212 Z\"/>\r\n\t\t</g></svg>";
nx3_render_svg_SvgElements.tpl3 = "<svg><g><path style=\"fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:none\" \r\n\t\t\td=\"M 60,198 L 73,196 C 74,202 77,207 80,210 83,213 87,214 92,214 99,214 104,212 107,208 111,204 113,200 113,194 113,189 111,184 108,181 104,177 99,176 94,176 91,176 88,176 85,177 L 86,165 C 87,165 88,165 88,165 93,165 98,164 102,161 106,159 108,155 108,150 108,146 106,143 103,140 100,137 97,136 92,136 87,136 83,137 80,140 77,143 75,147 74,152 L 61,150 C 63,142 66,135 71,131 77,126 83,124 91,124 97,124 102,125 107,127 111,130 115,133 117,137 120,141 121,145 121,150 121,154 120,158 117,161 115,165 112,167 107,169 113,171 118,174 121,178 124,182 126,188 126,194 126,203 123,211 116,217 110,223 102,226 92,226 83,226 76,223 70,218 64,213 61,206 60,198 Z\"/>\r\n\t\t</g></svg>";
nx3_render_svg_SvgElements.tpl4 = "<svg><g><path style=\"fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:none\" \r\n\t\t\td=\"M 101,225 L 101,201 56,201 56,188 104,125 114,125 114,188 126,188 126,201 114,201 114,225 101,225 Z M 101,188 L 101,145 69,188 101,188 Z\"/>\r\n\t\t</g></svg>";
nx3_render_svg_SvgElements.tpl5 = "<svg><g><path style=\"fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:none\" \r\n\t\t\td=\"M 60,198 L 73,197 C 74,203 76,207 79,210 83,213 87,214 92,214 98,214 103,212 107,208 111,204 113,198 113,191 113,185 111,179 108,176 104,172 99,170 93,170 88,170 85,171 82,173 79,174 77,176 75,179 L 62,177 72,125 121,125 121,138 83,138 78,165 C 84,160 90,158 96,158 104,158 112,161 117,167 123,173 126,181 126,190 126,199 123,207 118,214 112,222 103,226 92,226 83,226 76,223 70,218 64,213 61,206 60,198 Z\"/>\r\n\t\t</g></svg>";
nx3_render_svg_SvgElements.tpl6x = "<svg><g><path style=\"fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:none\" \r\n\t\t\td=\"M 124,150 L 111,151 C 110,146 108,143 106,141 103,138 99,136 94,136 90,136 86,137 83,139 80,142 77,145 74,150 72,155 71,162 71,172 74,168 78,165 82,162 86,160 91,159 96,159 104,159 111,162 117,168 123,174 126,182 126,192 126,198 125,204 122,209 119,215 115,219 110,222 105,225 100,226 94,226 83,226 75,222 68,215 61,207 58,195 58,178 58,158 62,144 69,135 75,128 84,124 95,124 103,124 110,126 115,131 120,136 123,142 124,150 Z M 71,191 C 71,195 72,199 74,203 76,206 78,209 82,211 85,213 89,214 93,214 99,214 103,212 107,208 111,204 113,199 113,192 113,186 111,180 107,177 104,173 99,171 92,171 86,171 81,173 77,177 73,180 71,185 71,191 Z\"/>\r\n\t\t</g></svg>";
nx3_render_svg_SvgElements.tpl6 = "<svg><g><path style=\"fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:none\" \r\n\t\t\td=\"M 124,150 L 111,151 C 110,146 108,143 106,141 103,138 99,136 94,136 90,136 86,137 83,139 80,142 77,145 74,150 72,155 71,162 71,172 74,168 78,165 82,162 86,160 91,159 96,159 104,159 111,162 117,168 123,174 126,182 126,192 126,198 125,204 122,209 119,215 115,219 110,222 105,225 100,226 94,226 83,226 75,222 68,215 61,207 58,195 58,178 58,158 62,144 69,135 75,128 84,124 95,124 103,124 110,126 115,131 120,136 123,142 124,150 Z M 71,191 C 71,195 72,199 74,203 76,206 78,209 82,211 85,213 89,214 93,214 99,214 103,212 107,208 111,204 113,199 113,192 113,186 111,180 107,177 104,173 99,171 92,171 86,171 81,173 77,177 73,180 71,185 71,191 Z\"/>\r\n\t\t</g></svg>";
nx3_render_svg_SvgElements.tpl7 = "<svg><g><path style=\"fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:none\" \r\n\t\t\td=\"M 61,138 L 61,125 126,125 126,136 C 120,142 114,152 108,163 102,174 97,186 94,197 91,206 90,215 89,225 L 76,225 C 76,217 78,208 81,196 83,185 87,175 93,164 98,154 104,145 110,138 L 61,138 Z\"/>\r\n\t\t</g></svg>";
nx3_xml_BarXML.XBAR = "bar";
nx3_xml_BarXML.XBAR_TYPE = "type";
nx3_xml_BarXML.XBAR_TIME = "time";
nx3_xml_BarXML.XBAR_TIMEDISPLAY = "timedisplay";
nx3_xml_HeadXML.XHEAD = "headx";
nx3_xml_HeadXML.XHEAD_TYPE = "type";
nx3_xml_HeadXML.XHEAD_LEVEL = "level";
nx3_xml_HeadXML.XHEAD_SIGN = "sign";
nx3_xml_HeadXML.XHEAD_TIE = "tie";
nx3_xml_HeadXML.XHEAD_TIETO = "tieto";
nx3_xml_HeadXML.XHEAD_TIE_DIRECTION = "tiedirection";
nx3_xml_HeadXML.XHEAD_TIE_LEVEL = "tielevel";
nx3_xml_NoteXML.XNOTE = "note";
nx3_xml_NoteXML.XPAUSE = "pause";
nx3_xml_NoteXML.XPAUSE_LEVEL = "level";
nx3_xml_NoteXML.XLYRIC = "lyric";
nx3_xml_NoteXML.XLYRIC_TEXT = "text";
nx3_xml_NoteXML.XUNDEFINED = "undefined";
nx3_xml_NoteXML.XPITCH = "pitch";
nx3_xml_NoteXML.XPITCH_LEVEL = "level";
nx3_xml_NoteXML.XPITCH_MIDINOTE = "midinote";
nx3_xml_NoteXML.XTPL = "tpl";
nx3_xml_NoteXML.XTPL_LEVEL = "level";
nx3_xml_NoteXML.XTPL_SIGN = "sign";
nx3_xml_NoteXML.XNOTE_TYPE = "type";
nx3_xml_NoteXML.XNOTE_TYPE_NOTE = "note";
nx3_xml_NoteXML.XNOTE_TYPE_NOTATION_VARIANT = "variant";
nx3_xml_NoteXML.XNOTE_VALUE = "value";
nx3_xml_NoteXML.XNOTE_VAL = "val";
nx3_xml_NoteXML.XNOTE_DIRECTION = "direction";
nx3_xml_NoteXML.XNOTE_TYPE_PAUSE = "pause";
nx3_xml_NoteXML.XNOTE_TYPE_NOTE_ARTICULATIONS = "articulations";
nx3_xml_NoteXML.LIST_DELIMITER = ";";
nx3_xml_NoteXML.XNOTE_TYPE_NOTE_ATTRIBUTES = "attributes";
nx3_xml_NoteXML.XOFFSET = "offset";
nx3_xml_NoteXML.XLYRIC_CONTINUATION = "continuation";
nx3_xml_NoteXML.XLYRIC_FORMAT = "format";
nx3_xml_NoteXML.XTPL_PAUSE = "pause";
nx3_xml_PartXML.XPART = "part";
nx3_xml_PartXML.XPART_TYPE = "type";
nx3_xml_PartXML.XPART_LEVELOFFSET = "leveloffset";
nx3_xml_PartXML.XPART_CLEF = "clef";
nx3_xml_PartXML.XPART_CLEFDISPLAY = "clefdisplay";
nx3_xml_PartXML.XPART_KEY = "key";
nx3_xml_PartXML.XPART_KEYDISPLAY = "keydisplay";
nx3_xml_PartXML.XPART_PITCHCHAIN = "pitchchain";
nx3_xml_PartXML.XPART_TYPE_TPLCHAIN = "tplchain";
nx3_xml_PartXML.XPART_TYPE_TPLROW = "tplrow";
nx3_xml_PartXML.XPART_MODUS = "modus";
nx3_xml_PartXML.XPART_OCTAVE = "octave";
nx3_xml_ScoreXML.XSCORE = "score";
nx3_xml_ScoreXML.XCONFIG = "config";
nx3_xml_VoiceXML.XVOICE = "voice";
nx3_xml_VoiceXML.XVOICE_TYPE = "type";
nx3_xml_VoiceXML.XVOICE_BARPAUSE = "barpause";
nx3_xml_VoiceXML.XVOICE_DIRECTION = "direction";
storage_StorageSource.instance = new storage_StorageSource();
ui_QSyntax.REGEX = "/@score ([0-9a-zA-Z ]*)@/";
ui_MediaSyntax.REGEX = "/@media ([/.0-9a-zA-Z ]*)@/";
ui_Bookpage.BP_RENDER_COUNT = 0;
ui_ChapterTypeViewCache.instance = new ui_ChapterTypeViewCache();
ui_StringRendererMapper.instance = new ui_StringRendererMapper();
ui_ViewMapper.instance = new ui_ViewMapper();
utils__$UserEmail_UserEmail_$Impl_$.ereg = new EReg("^[\\w-\\.]{2,}@[\\w-\\.]{2,}\\.[a-z]{2,6}$","i");
client2_Client2.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
